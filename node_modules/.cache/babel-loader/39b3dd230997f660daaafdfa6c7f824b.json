{"ast":null,"code":"import * as types from 'erp/logistic/base/action/LogisticsInfoActionType';\nconst initialState = {\n  codeList: [],\n  detailCodeList: [],\n  warehouseList: []\n};\n\nconst logisticsinfo = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SAVE_DEAIL_CODE_LIST_SUCCESS:\n      console.log(action);\n      return;\n\n    case types.CODE_LIST:\n      if (action.mode === 'search') {\n        let detailList = [];\n        action.data.codeList.map(ele => {\n          detailList = [...detailList, ele.codeDetailTOList];\n          return ele;\n        });\n        return { ...state,\n          codeList: action.data.codeList,\n          detailCodeList: detailList\n        };\n      } else if (action.mode === 'add') {\n        let newList = [...state.codeList, action.codeTo]; //[]\n\n        return { ...state,\n          codeList: newList\n        };\n      } else if (action.mode === 'update') {\n        let newList = state.codeList.map(ele => {\n          if (action.divisionCodeNo === ele.divisionCodeNo) {\n            ele.status = 'UPDATE';\n          }\n\n          return ele;\n        });\n        return { ...state,\n          codeList: newList\n        };\n      } else if (action.mode === 'delete') {\n        let newList = action.newList; //[]\n\n        return { ...state,\n          codeList: newList\n        };\n      } else if (action.mode === 'save') {\n        console.log('action.codeList', action.codeList);\n\n        if (action.codeList !== undefined) {\n          return { ...state,\n            codeList: action.codeList\n          };\n        }\n\n        return { ...state\n        };\n      }\n\n    /* falls through */\n\n    case types.DETAIL_CODE_LIST:\n      //console.log('add접근');\n      //console.log(action);\n      let newList = state.detailCodeList.map(ele => {\n        if (ele[0].divisionCodeNo === action.detailCodeTo.divisionCodeNo) {\n          ele.push(action.detailCodeTo);\n        }\n\n        return ele;\n      }); //console.log(newList)\n\n      return { ...state,\n        detailCodeList: newList\n      };\n\n    case types.SEARCH_WAREHOUSE_LIST:\n      return { ...state\n      };\n\n    case types.SEARCH_WAREHOUSE_SUCCESS:\n      console.log(action.payload.gridRowJson);\n      return { ...state,\n        warehouseList: action.payload.gridRowJson\n      };\n\n    case types.SEARCH_WAREHOUSE_FAILURE:\n      return { ...state,\n        errorMsg: action.payload\n      };\n\n    /* falls through */\n\n    case types.WAREHOUSE_LIST:\n      if (action.mode === 'add') {\n        //console.log(\"추가?\", action.warehouseTo);\n        let newList = [...state.warehouseList, action.warehouseTo];\n        return { ...state,\n          warehouseList: newList\n        };\n      } else if (action.mode === 'del') {\n        let newList = action.warehouseTo;\n        return { ...state,\n          warehouseList: newList\n        };\n      } else if (action.mode === 'update') {\n        let newList = action.warehouseTo;\n        return { ...state,\n          warehouseList: newList\n        };\n      }\n\n      ;\n\n    /* falls through */\n\n    default:\n      return state;\n  }\n};\n\nexport default logisticsinfo;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/base/reducer/LogisticsInfoReducer.js"],"names":["types","initialState","codeList","detailCodeList","warehouseList","logisticsinfo","state","action","type","SAVE_DEAIL_CODE_LIST_SUCCESS","console","log","CODE_LIST","mode","detailList","data","map","ele","codeDetailTOList","newList","codeTo","divisionCodeNo","status","undefined","DETAIL_CODE_LIST","detailCodeTo","push","SEARCH_WAREHOUSE_LIST","SEARCH_WAREHOUSE_SUCCESS","payload","gridRowJson","SEARCH_WAREHOUSE_FAILURE","errorMsg","WAREHOUSE_LIST","warehouseTo"],"mappings":"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","sourcesContent":["import * as types from 'erp/logistic/base/action/LogisticsInfoActionType';\n\nconst initialState = {\n    codeList: [],\n    detailCodeList: [],\n    warehouseList: []\n};\n\nconst logisticsinfo = (state = initialState, action) => {\n    switch (action.type) {\n        case types.SAVE_DEAIL_CODE_LIST_SUCCESS:\n            console.log(action);\n            return;\n        case types.CODE_LIST:\n            if (action.mode === 'search') {\n                let detailList = [];\n                action.data.codeList.map(ele => {\n                    detailList = [...detailList, ele.codeDetailTOList];\n                    return ele;\n                });\n                return {\n                    ...state,\n                    codeList: action.data.codeList,\n                    detailCodeList: detailList\n                };\n            } else if (action.mode === 'add') {\n                let newList = [...state.codeList, action.codeTo]; //[]\n                return {\n                    ...state,\n                    codeList: newList\n                };\n            } else if (action.mode === 'update') {\n                let newList = state.codeList.map(ele => {\n                    if (action.divisionCodeNo === ele.divisionCodeNo) {\n                        ele.status = 'UPDATE';\n                    }\n                    return ele;\n                });\n                return {\n                    ...state,\n                    codeList: newList\n                };\n            } else if (action.mode === 'delete') {\n                let newList = action.newList; //[]\n                return {\n                    ...state,\n                    codeList: newList\n                };\n            } else if (action.mode === 'save') {\n                console.log('action.codeList', action.codeList);\n                if (action.codeList !== undefined) {\n                    return {\n                        ...state,\n                        codeList: action.codeList\n                    };\n                }\n                return {\n                    ...state\n                };\n            }\n        /* falls through */\n        case types.DETAIL_CODE_LIST:\n            //console.log('add접근');\n            //console.log(action);\n            let newList = state.detailCodeList.map(ele => {\n                if (ele[0].divisionCodeNo === action.detailCodeTo.divisionCodeNo) {\n                    ele.push(action.detailCodeTo);\n                }\n                return ele;\n            });\n            //console.log(newList)\n            return {\n                ...state,\n                detailCodeList: newList\n            };\n\n        case types.SEARCH_WAREHOUSE_LIST:\n            return {\n                ...state\n            };\n        case types.SEARCH_WAREHOUSE_SUCCESS:\n            console.log(action.payload.gridRowJson)\n            return {\n                ...state,\n                warehouseList: action.payload.gridRowJson\n            };\n        case types.SEARCH_WAREHOUSE_FAILURE:\n            return {\n                ...state,\n                errorMsg: action.payload\n            };\n        /* falls through */\n        case types.WAREHOUSE_LIST:\n            if (action.mode === 'add') {\n                //console.log(\"추가?\", action.warehouseTo);\n                let newList = [...state.warehouseList, action.warehouseTo];\n                return {\n                    ...state,\n                    warehouseList: newList\n                };\n            } else if (action.mode === 'del') {\n                let newList = action.warehouseTo;\n                return {\n                    ...state,\n                    warehouseList: newList\n                };\n            } else if (action.mode === 'update') {\n                let newList = action.warehouseTo;\n                return {\n                    ...state,\n                    warehouseList: newList\n                };\n            };\n\n        /* falls through */\n        default:\n            return state;\n    }\n};\n\nexport default logisticsinfo;\n"]},"metadata":{},"sourceType":"module"}