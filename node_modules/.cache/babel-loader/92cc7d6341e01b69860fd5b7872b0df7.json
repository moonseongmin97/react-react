{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\base\\\\page\\\\Holiday\\\\HolidayManageComponent.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from './Grid';\nimport Icon from \"@material-ui/core/Icon\";\nimport { Typography, AppBar, Toolbar } from \"@material-ui/core\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\n\nconst HolidayManageComponent = ({\n  holidayListRequest,\n  holidayList,\n  errorCode,\n  errorMsg,\n  updateHolidayRequest\n}) => {\n  let list = [];\n  const [gridEvent, setGridEvent] = useState();\n\n  const createNewRowData = () => {\n    let newData = {\n      applyDay: '',\n      holidayName: '',\n      note: '',\n      holidayCode: Math.floor(Math.random() * (10 * 10)) + \"-\" + Math.floor(Math.random() * (10 * 10)) + \"-\" + Math.floor(Math.random() * (100 * 100)),\n      status: 'insert'\n    };\n    return newData;\n  };\n\n  const addOnClick = () => {\n    const newItem = createNewRowData();\n    const a = gridEvent.updateRowData({\n      add: [newItem]\n    }); // 만들어진 새로운 row를 그리드에 add 해라.\n\n    console.log(a.add[0].columnController.allDisplayedCenterVirtualColumns[0].colDef.editable = true);\n  };\n\n  const onGridReady = event => {\n    event.api.sizeColumnsToFit();\n    setGridEvent(event.api);\n  };\n\n  async function CellEditingStopped(row) {\n    if (row.data.status !== 'insert') {\n      row.data.status = 'update';\n    } else {\n      if (row.data.applyDay === '' && row.data.holidayName === '' && row.data.note === '') {\n        return;\n      }\n    }\n\n    await updateHolidayRequest([row.data]);\n    row.data.status = 'update';\n  }\n\n  ;\n\n  const onRemoveSelected = () => {\n    var selectedData = gridEvent.getSelectedRows();\n    selectedData[0].status = 'delete';\n    gridEvent.updateRowData({\n      remove: selectedData\n    });\n    updateHolidayRequest(selectedData);\n  };\n\n  useEffect(() => {\n    holidayListRequest();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"\\uD734\\uC77C\\uAD00\\uB9AC\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" [ \\uD734\\uC77C \\uBAA9\\uB85D ] \"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addOnClick,\n    startIcon: React.createElement(Icon, {\n      className: \"fa fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uCD94\\uAC00\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onRemoveSelected,\n    startIcon: React.createElement(DeleteOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\"), React.createElement(\"div\", {\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    data: holidayList,\n    onGridReady: onGridReady,\n    onCellEditingStopped: CellEditingStopped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))));\n};\n\nexport default HolidayManageComponent;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/base/page/Holiday/HolidayManageComponent.js"],"names":["React","useState","useEffect","Button","Grid","Icon","Typography","AppBar","Toolbar","DeleteOutlinedIcon","HolidayManageComponent","holidayListRequest","holidayList","errorCode","errorMsg","updateHolidayRequest","list","gridEvent","setGridEvent","createNewRowData","newData","applyDay","holidayName","note","holidayCode","Math","floor","random","status","addOnClick","newItem","a","updateRowData","add","console","log","columnController","allDisplayedCenterVirtualColumns","colDef","editable","onGridReady","event","api","sizeColumnsToFit","CellEditingStopped","row","data","onRemoveSelected","selectedData","getSelectedRows","remove"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from './Grid';\nimport Icon from \"@material-ui/core/Icon\";\nimport { Typography, AppBar, Toolbar } from \"@material-ui/core\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\n\nconst HolidayManageComponent = ({holidayListRequest,holidayList,errorCode,errorMsg,updateHolidayRequest}) => {\n\n    let list = [];\n    const [gridEvent, setGridEvent] = useState();\n    const createNewRowData = () => {\n        let newData = {\n            applyDay : '',\n            holidayName: '',\n            note : '',\n            holidayCode : Math.floor(Math.random()*(10*10))+\"-\"+Math.floor(Math.random()*(10*10))+\"-\"+Math.floor(Math.random()*(100*100)),\n            status : 'insert'\n        };\n    return newData;\n     }\n\n     \n    const addOnClick = () =>{\n        const newItem = createNewRowData();\n        const a = gridEvent.updateRowData({ add: [newItem] });   // 만들어진 새로운 row를 그리드에 add 해라.\n        console.log(a.add[0].columnController.allDisplayedCenterVirtualColumns[0].colDef.editable = true )\n    }\n  \n    const onGridReady = event => {\n        event.api.sizeColumnsToFit();\n        setGridEvent(event.api);\n      }\n      \n    async function CellEditingStopped(row) {  \n        if(row.data.status !== 'insert'){\n            row.data.status = 'update';\n        }else{\n            if(\n            row.data.applyDay === '' && \n            row.data.holidayName === '' && \n            row.data.note === ''){\n                return;\n            }\n        }\n        await updateHolidayRequest([row.data])\n        row.data.status = 'update';\n    };\n    \n    const onRemoveSelected = () => {\n        var selectedData = gridEvent.getSelectedRows();\n        selectedData[0].status = 'delete';\n        gridEvent.updateRowData({ remove: selectedData });\n        updateHolidayRequest(selectedData);\n      };\n\n    useEffect(() => {\n        holidayListRequest()\n    }, []);\n    \n    return (\n        <>\n            <AppBar position=\"static\" color=\"primary\">\n                <Toolbar>\n                    <Typography component=\"h2\" variant=\"h4\">\n                        휴일관리\n                    </Typography>\n                </Toolbar>\n            </AppBar>  \n            <br />\n            <div align='center'>\n                <fieldset>\n                    <legend> [ 휴일 목록 ] </legend>\n                    \n                    <Button variant=\"contained\" color=\"primary\" onClick={addOnClick} startIcon={<Icon className=\"fa fa-plus-circle\" />} >\n                        추가\n                    </Button> \n                    \n                    <Button variant=\"contained\" color=\"primary\" onClick={onRemoveSelected} startIcon={<DeleteOutlinedIcon />}>\n                        삭제\n                    </Button>                     \n                    <div className=\"box\" >        \n                        <Grid data={holidayList}\n                         onGridReady={onGridReady}\n                         onCellEditingStopped = {CellEditingStopped}\n                         />\n                    </div>\n                </fieldset>\n            </div>\n        </>\n    )\n}\n\nexport default HolidayManageComponent;"]},"metadata":{},"sourceType":"module"}