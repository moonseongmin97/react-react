{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\LogisticsBOM\\\\Regist\\\\RegistGrid.js\";\nimport { AgGridReact } from 'ag-grid-react/lib/agGridReact';\nimport React from 'react';\n\nconst RegistGrid = ({\n  bomData,\n  onGridReady,\n  onCellClicked\n}) => {\n  const bomColumnDefs = {\n    columnDefs: [{\n      headerCheckboxSelection: true,\n      checkboxSelection: true,\n      rowSelection: \"multiple\",\n      rowMultiSelectionWhithClick: true,\n      width: \"43\"\n    }, {\n      headerName: \"NO\",\n      width: 55,\n      valueGetter: \"node.rowIndex + 1\"\n    }, //{ headerName: \"\", width: 60, cellRenderer: checkRenderer },\n    //{ headerName: \"출력순서지정\", field: \"no\", width: 100 },\n    {\n      headerName: \"품목구분\",\n      field: \"itemClassificationName\"\n    }, {\n      headerName: \"품목코드\",\n      field: \"itemCode\",\n      width: 100,\n      editable: true\n    }, {\n      headerName: \"품목명\",\n      field: \"itemName\",\n      width: 130,\n      editable: true\n    }, {\n      headerName: \"정미수량\",\n      field: \"netAmount\",\n      width: 80,\n      editable: true\n    }, {\n      headerName: \"설명\",\n      field: \"description\",\n      width: 60,\n      editable: true\n    }, {\n      headerName: \"status\",\n      field: \"status\",\n      width: 100,\n      valueFormatter: \"value.toUpperCase()\"\n    }, {\n      headerName: \"itemClassification\",\n      field: \"itemClassification\",\n      width: 50,\n      hide: true\n    }, {\n      headerName: \"parentItemCode\",\n      field: \"parentItemCode\",\n      width: 50,\n      hide: true\n    }, {\n      headerName: \"beforeStatus\",\n      field: \"beforeStatus\",\n      width: 50,\n      hide: true\n    }, {\n      headerName: \"deleteStatus\",\n      field: \"deleteStatus\",\n      width: 50,\n      hide: true\n    }]\n  }; ////편집 허용인 컬럼을 더블 클릭할 때 발생하는 이벤트.\n\n  const rowCellChanged = e => {\n    if (e.data.status === \"INSERT\") {\n      return;\n    } else {\n      e.data.status = \"UPDATE\";\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gridAlign\",\n    style: {\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ag-theme-balham\",\n    style: {\n      height: \"500px\",\n      width: \"770px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: bomColumnDefs.columnDefs,\n    rowData: bomData,\n    rowSelection: \"multiple\",\n    onGridReady: onGridReady,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    onCellClicked: onCellClicked,\n    getRowNodeId: data => {\n      return data.no;\n    },\n    onCellEditingStarted: rowCellChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n};\n\nexport default RegistGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/purchase/page/LogisticsBOM/Regist/RegistGrid.js"],"names":["AgGridReact","React","RegistGrid","bomData","onGridReady","onCellClicked","bomColumnDefs","columnDefs","headerCheckboxSelection","checkboxSelection","rowSelection","rowMultiSelectionWhithClick","width","headerName","valueGetter","field","editable","valueFormatter","hide","rowCellChanged","e","data","status","paddingTop","height","param","no"],"mappings":"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","sourcesContent":["import { AgGridReact } from 'ag-grid-react/lib/agGridReact';\nimport React from 'react';\n\nconst RegistGrid = ({ bomData, onGridReady, onCellClicked }) => {\n    const bomColumnDefs = {\n        columnDefs:[\n            {                                \n                headerCheckboxSelection: true,\n                checkboxSelection: true,\n                rowSelection:\"multiple\",\n                rowMultiSelectionWhithClick: true,\n                width: \"43\"            \n            },                    \n            { headerName: \"NO\", width: 55, valueGetter: \"node.rowIndex + 1\" },            \n            //{ headerName: \"\", width: 60, cellRenderer: checkRenderer },\n            //{ headerName: \"출력순서지정\", field: \"no\", width: 100 },\n            { headerName: \"품목구분\", field: \"itemClassificationName\" },\n            { headerName: \"품목코드\", field: \"itemCode\", width: 100, editable: true},\n            { headerName: \"품목명\", field: \"itemName\", width: 130, editable: true },\n            { headerName: \"정미수량\", field: \"netAmount\", width: 80, editable: true },\n            { headerName: \"설명\", field: \"description\", width: 60, editable: true },\n            {\n                headerName: \"status\",\n                field: \"status\",\n                width: 100,\n                valueFormatter: \"value.toUpperCase()\",\n            },\n            {\n                headerName: \"itemClassification\",\n                field: \"itemClassification\",\n                width: 50,\n                hide: true,\n            },\n            {\n                headerName: \"parentItemCode\",\n                field: \"parentItemCode\",\n                width: 50,\n                hide: true,\n            },\n            {\n                headerName: \"beforeStatus\",\n                field: \"beforeStatus\",\n                width: 50,\n                hide: true,\n            },\n            {\n                headerName: \"deleteStatus\",\n                field: \"deleteStatus\",\n                width: 50,\n                hide: true,\n            },\n        ]\n    };\n\n    ////편집 허용인 컬럼을 더블 클릭할 때 발생하는 이벤트.\n    const rowCellChanged = e => {\n        if (e.data.status === \"INSERT\") {\n            return;\n        } else {\n            e.data.status = \"UPDATE\";\n        }\n    };\n\n    return (\n        <div>\n            <div className = \"gridAlign\" style = {{ paddingTop: \"8px\" }}>\n                <div className={\"ag-theme-balham\"}\n                    style = {{\n                        height: \"500px\",\n                        width: \"770px\"\n                    }}                \n                >\n                    <AgGridReact \n                        columnDefs = {bomColumnDefs.columnDefs}\n                        rowData = {bomData}\n                        rowSelection = \"multiple\"\n                        onGridReady = {onGridReady}\n                        getRowStyle={function(param) {\n                            return { \"text-align\": \"center\" };\n                        }}\n                        onCellClicked = {onCellClicked}                    \n                        getRowNodeId = {data => {\n                            return data.no;\n                        }}\n                        onCellEditingStarted = {rowCellChanged}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegistGrid;"]},"metadata":{},"sourceType":"module"}