{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\account\\\\account\\\\page\\\\NonCurrentAsset\\\\Dialog\\\\OpenCodeDialog.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport { Dialog, DialogTitle, DialogContent, List, DialogActions, Button, TextField } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { AgGridReact } from \"ag-grid-react\"; //import { SEARCH_ACCOUNT_LIST_REQUEST } from \"../../ActionType/ActionType\";\n\nimport useStyles from \"erp/account/statement/page/AccountLedger/Theme\";\n\nconst OpenCodeDialog = ({\n  open,\n  close,\n  value\n}) => {\n  const [positionGridApi, setPositionGridApi] = useState([]);\n  const [dataList, setDataList] = useState([]);\n  const accountColumnDefs = [{\n    headerName: \"코 드\",\n    field: \"accountCode\",\n    width: 180\n  }, {\n    headerName: \"계 정 과 목\",\n    field: \"accountName\",\n    width: 210\n  }];\n\n  const handleClose = () => {\n    close({\n      data: positionGridApi.getSelectedRows() // data는 클릭한 row의 정보이고,\n\n    });\n  };\n\n  console.log(value);\n\n  const Close = () => {\n    close({\n      division: \"accountDialog\"\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8282/acc/CurrentAsset/CurrentAssetCode\").then(response => {\n      setDataList(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n    return () => {\n      setDataList({});\n    };\n  }, []);\n  return React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    Align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"\\uACC4 \\uC815 \\uACFC \\uBAA9\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ag-theme-material\" //그리드 모양\n    ,\n    style: {\n      height: \"300px\",\n      width: \"80%\",\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: accountColumnDefs //컬럼명\n    ,\n    rowData: dataList // 뿌릴 data\n    ,\n    rowSelection: \"single\" // 하나만 선택 가능.\n    ,\n    getRowStyle: param => {\n      return {\n        \"text-align\": \"center\"\n      }; //body 가운데 정렬\n    },\n    onGridReady: params => setPositionGridApi(params.api),\n    onCellClicked: handleClose // cell을 클릭하면, handleClose가 실행된다.\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: Close,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Close\")));\n};\n\nexport default OpenCodeDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/account/account/page/NonCurrentAsset/Dialog/OpenCodeDialog.js"],"names":["React","useState","useEffect","useDispatch","useSelector","axios","Dialog","DialogTitle","DialogContent","List","DialogActions","Button","TextField","SearchIcon","AgGridReact","useStyles","OpenCodeDialog","open","close","value","positionGridApi","setPositionGridApi","dataList","setDataList","accountColumnDefs","headerName","field","width","handleClose","data","getSelectedRows","console","log","Close","division","get","then","response","catch","e","height","paddingTop","param","params","api"],"mappings":"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","sourcesContent":["import React, { useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  List,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { AgGridReact } from \"ag-grid-react\";\n//import { SEARCH_ACCOUNT_LIST_REQUEST } from \"../../ActionType/ActionType\";\nimport useStyles from \"erp/account/statement/page/AccountLedger/Theme\";\n\n\nconst OpenCodeDialog = ({ open, close, value }) => {\n    const [positionGridApi, setPositionGridApi] = useState([]);\n  const [dataList,setDataList] = useState([]);\n\n  const accountColumnDefs = [\n    { headerName: \"코 드\", field: \"accountCode\", width: 180 },\n    { headerName: \"계 정 과 목\", field: \"accountName\", width: 210 },\n  ];\n\n  const handleClose = () => {\n    close({\n      data: positionGridApi.getSelectedRows(), // data는 클릭한 row의 정보이고,\n    });\n  };\n  console.log(value)\n  const Close = () => {\n    close({\n      division: \"accountDialog\",\n    });\n  };\n\n  useEffect(\n    ()=>{\n       axios.get(\"http://localhost:8282/acc/CurrentAsset/CurrentAssetCode\",\n       ).then(response => {\n                setDataList(response.data); \n              \n            })\n            .catch(e => {\n                console.log(e);\n        }); \n        return () => {setDataList({})}\n    }\n,[])\n\n\n \n \n\n  return (\n    <Dialog\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n      fullWidth={true}\n      maxWidth={\"sm\"}\n    >\n      <DialogTitle id=\"simple-dialog-title\" Align=\"center\">\n        계 정 과 목\n      </DialogTitle>\n      <DialogContent dividers>\n        <List>\n          <div\n            className={\"ag-theme-material\"} //그리드 모양\n            style={{\n              height: \"300px\",\n              width: \"80%\",\n              paddingTop: \"8px\",\n            }}\n          >\n            <AgGridReact\n              columnDefs={accountColumnDefs} //컬럼명\n              rowData={dataList} // 뿌릴 data\n              rowSelection=\"single\" // 하나만 선택 가능.\n              getRowStyle={param => {\n                return { \"text-align\": \"center\" }; //body 가운데 정렬\n              }}\n              onGridReady={params => setPositionGridApi(params.api)}\n              onCellClicked={handleClose} // cell을 클릭하면, handleClose가 실행된다.\n            />\n          </div>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={Close} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default OpenCodeDialog;\n"]},"metadata":{},"sourceType":"module"}