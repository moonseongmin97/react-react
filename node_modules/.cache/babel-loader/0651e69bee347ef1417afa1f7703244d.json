{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n/*\n요청을 위한 액션 타입을 payload로 설정합니다.(예: \"sample/GET_POST\").\n*/\n\nexport const startLoading = createAction(START_LOADING, requestType => requestType);\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType);\nconst initialState = {};\nconst loading = handleActions({\n  [START_LOADING]: function (state, action) {\n    console.log('action.payload: ', action.payload);\n    return { ...state,\n      [action.payload]: true\n    };\n  },\n  [FINISH_LOADING]: (state, action) => ({ ...state,\n    [action.payload]: false\n  })\n}, initialState);\nexport default loading;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/util/loading.js"],"names":["createAction","handleActions","START_LOADING","FINISH_LOADING","startLoading","requestType","finishLoading","initialState","loading","state","action","console","log","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,MAAMC,aAAa,GAAG,uBAAtB;AACA,MAAMC,cAAc,GAAG,wBAAvB;AAEA;;;;AAIA,OAAO,MAAMC,YAAY,GAAGJ,YAAY,CAACE,aAAD,EAAgBG,WAAW,IAAIA,WAA/B,CAAjC;AAEP,OAAO,MAAMC,aAAa,GAAGN,YAAY,CAACG,cAAD,EAAiBE,WAAW,IAAIA,WAAhC,CAAlC;AAEP,MAAME,YAAY,GAAG,EAArB;AAEA,MAAMC,OAAO,GAAGP,aAAa,CACzB;AACI,GAACC,aAAD,GAAiB,UAASO,KAAT,EAAgBC,MAAhB,EAAwB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAM,CAACG,OAAvC;AACA,WAAO,EACH,GAAGJ,KADA;AAEH,OAACC,MAAM,CAACG,OAAR,GAAkB;AAFf,KAAP;AAIH,GAPL;AAQI,GAACV,cAAD,GAAkB,CAACM,KAAD,EAAQC,MAAR,MAAoB,EAClC,GAAGD,KAD+B;AAElC,KAACC,MAAM,CAACG,OAAR,GAAkB;AAFgB,GAApB;AARtB,CADyB,EAczBN,YAdyB,CAA7B;AAiBA,eAAeC,OAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\n/*\n요청을 위한 액션 타입을 payload로 설정합니다.(예: \"sample/GET_POST\").\n*/\n\nexport const startLoading = createAction(START_LOADING, requestType => requestType);\n\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType);\n\nconst initialState = {};\n\nconst loading = handleActions(\n    {\n        [START_LOADING]: function(state, action) {\n            console.log('action.payload: ', action.payload);\n            return {\n                ...state,\n                [action.payload]: true\n            };\n        },\n        [FINISH_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: false\n        })\n    },\n    initialState\n);\n\nexport default loading;\n"]},"metadata":{},"sourceType":"module"}