{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\LogisticsBOM\\\\Regist\\\\RegistHead.js\";\nimport { Button, FormControlLabel, makeStyles, Radio, RadioGroup, TextField } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport useInput from \"util/useInput\";\nimport SearchItemCodeDialog from '../SearchItemCodeDialog';\nimport useAsync from 'util/useAsync';\nimport * as api from 'erp/logistic/purchase/api';\n\nconst RegistHead = ({\n  trItemCode,\n  trDivisionCode,\n  searchBom,\n  addNewRow,\n  deleteRow,\n  batchAll\n}) => {\n  const [openItemCodeDialog, setOpenItemCodeDialog] = useState(false);\n  const [divisionCode, setDivisionCode] = useState(null);\n  const [data, setData] = useState(null);\n  const getItemCode = useInput(\"\");\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(2)\n      }\n    },\n    fieldset: {\n      width: 390,\n      paddingTop: 20\n    },\n    button2: {\n      paddingLeft: 20\n    },\n    bomButton: {\n      paddingLeft: 20,\n      width: 120\n    },\n    tField: {\n      paddingLeft: 10,\n      paddingTop: 35\n    }\n  }));\n  const classes = useStyles();\n\n  const onDivisionChange = e => {\n    setDivisionCode(e.currentTarget.value);\n    trDivisionCode(e.currentTarget.value);\n  };\n\n  const handleClickOpen = () => {\n    if (divisionCode === null) {\n      alert(\"품목분류를 먼저 선택해주세요. \\n(완제품, 반제품 중에 선택)\");\n      return;\n    } else {\n      getDetailCode();\n      setOpenItemCodeDialog(true);\n    }\n  };\n\n  const handleClose = value => {\n    setOpenItemCodeDialog(false);\n\n    if (value.data === undefined) {\n      return;\n    }\n\n    getItemCode.setValue(value.data[0].detailCode);\n    trItemCode(value.data[0].detailCode);\n  };\n\n  const [detailCode, getDetailCodeFetch] = useAsync(param => api.getDetailCode(param), [], true);\n  const getDetailCode = useCallback(() => {\n    getDetailCodeFetch(divisionCode);\n  }, [divisionCode, getDetailCodeFetch]);\n  useEffect(() => {\n    if (detailCode.data) setData(detailCode.data.detailCodeList);\n  }, [detailCode.data]);\n  return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      paddingLeft: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"itemCode\",\n    onChange: onDivisionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uD488\\uBAA9\\uBD84\\uB958\"), React.createElement(FormControlLabel, {\n    value: \"IT-CI\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }),\n    label: \"\\uC644\\uC81C\\uD488\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"IT-SI\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }),\n    label: \"\\uBC18\\uC81C\\uD488\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.tField,\n    id: \"itemCode\",\n    InputProps: {\n      endAdornment: React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        value: \"searchCode\",\n        onClick: () => handleClickOpen(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"\\uAC80\\uC0C9\")\n    },\n    margin: \"normal\",\n    placeholder: \"          \\uD488\\uBAA9\\uCF54\\uB4DC\\uAC80\\uC0C9\",\n    disabled: true,\n    value: getItemCode.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: classes.bomButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      top: 56,\n      width: 120\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    onClick: () => searchBom(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"BOM \\uC870\\uD68C\"))), React.createElement(\"td\", {\n    className: classes.button2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: classes.fieldset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"BOM \\uC218\\uC815/\\uC0AD\\uC81C/\\uC800\\uC7A5\")), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    value: \"addNew\",\n    onClick: addNewRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"\\uC0C8\\uB85C\\uC6B4 \\uD56D\\uBAA9 \\uCD94\\uAC00\")), React.createElement(\"span\", {\n    className: classes.button2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    onClick: deleteRow,\n    value: \"deleteRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\")), React.createElement(\"span\", {\n    className: classes.button2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    onClick: () => batchAll(),\n    value: \"batcAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"\\uC77C\\uAD04\\uC800\\uC7A5\")))), React.createElement(SearchItemCodeDialog, {\n    data: data,\n    open: openItemCodeDialog,\n    close: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })));\n};\n\nexport default RegistHead;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/purchase/page/LogisticsBOM/Regist/RegistHead.js"],"names":["Button","FormControlLabel","makeStyles","Radio","RadioGroup","TextField","Axios","React","useState","useEffect","useCallback","useInput","SearchItemCodeDialog","useAsync","api","RegistHead","trItemCode","trDivisionCode","searchBom","addNewRow","deleteRow","batchAll","openItemCodeDialog","setOpenItemCodeDialog","divisionCode","setDivisionCode","data","setData","getItemCode","useStyles","theme","root","margin","spacing","fieldset","width","paddingTop","button2","paddingLeft","bomButton","tField","classes","onDivisionChange","e","currentTarget","value","handleClickOpen","alert","getDetailCode","handleClose","undefined","setValue","detailCode","getDetailCodeFetch","param","detailCodeList","endAdornment","top"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,gBAAjB,EAAmCC,UAAnC,EAA+CC,KAA/C,EAAsDC,UAAtD,EAAkEC,SAAlE,QAAmF,mBAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,2BAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,cAAd;AAA8BC,EAAAA,SAA9B;AAAyCC,EAAAA,SAAzC;AAAoDC,EAAAA,SAApD;AAA+DC,EAAAA;AAA/D,CAAD,KAA+E;AAC9F,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8Cf,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMoB,WAAW,GAAGjB,QAAQ,CAAC,EAAD,CAA5B;AAEA,QAAMkB,SAAS,GAAG3B,UAAU,CAAC4B,KAAK,KAAK;AACnCC,IAAAA,IAAI,EAAE;AACF,eAAS;AACLC,QAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AADP,KAD6B;AAMnCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,UAAU,EAAE;AAFN,KANyB;AAUnCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR,KAV0B;AAanCC,IAAAA,SAAS,EAAE;AACPD,MAAAA,WAAW,EAAE,EADN;AAEPH,MAAAA,KAAK,EAAE;AAFA,KAbwB;AAiBnCK,IAAAA,MAAM,EAAE;AACJF,MAAAA,WAAW,EAAE,EADT;AAEJF,MAAAA,UAAU,EAAE;AAFR;AAjB2B,GAAL,CAAN,CAA5B;AAuBA,QAAMK,OAAO,GAAGZ,SAAS,EAAzB;;AAEA,QAAMa,gBAAgB,GAAIC,CAAD,IAAO;AAC5BlB,IAAAA,eAAe,CAACkB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAf;AACA5B,IAAAA,cAAc,CAAC0B,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAd;AACH,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAGtB,YAAY,KAAK,IAApB,EAA0B;AACtBuB,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AACH,KAHD,MAGM;AACFC,MAAAA,aAAa;AACbzB,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;AACJ,GARD;;AAUA,QAAM0B,WAAW,GAAIJ,KAAD,IAAW;AAC3BtB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;;AACA,QAAGsB,KAAK,CAACnB,IAAN,KAAewB,SAAlB,EAA6B;AACzB;AACH;;AACDtB,IAAAA,WAAW,CAACuB,QAAZ,CAAqBN,KAAK,CAACnB,IAAN,CAAW,CAAX,EAAc0B,UAAnC;AACApC,IAAAA,UAAU,CAAC6B,KAAK,CAACnB,IAAN,CAAW,CAAX,EAAc0B,UAAf,CAAV;AACH,GAPD;;AASA,QAAM,CAACA,UAAD,EAAaC,kBAAb,IAAmCxC,QAAQ,CAAEyC,KAAD,IAAUxC,GAAG,CAACkC,aAAJ,CAAkBM,KAAlB,CAAX,EAAqC,EAArC,EAAyC,IAAzC,CAAjD;AACA,QAAMN,aAAa,GAAGtC,WAAW,CAAC,MAAM;AACpC2C,IAAAA,kBAAkB,CAAC7B,YAAD,CAAlB;AACH,GAFgC,EAE/B,CAACA,YAAD,EAAe6B,kBAAf,CAF+B,CAAjC;AAGA5C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG2C,UAAU,CAAC1B,IAAd,EACAC,OAAO,CAACyB,UAAU,CAAC1B,IAAX,CAAgB6B,cAAjB,CAAP;AACH,GAHQ,EAGP,CAACH,UAAU,CAAC1B,IAAZ,CAHO,CAAT;AAKA,SACI,0CACI;AAAI,IAAA,SAAS,EAAIe,OAAO,CAACV,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAI;AAAEO,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,GAAG,MADP;AAEI,kBAAa,UAFjB;AAGI,IAAA,QAAQ,EAAII,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAG,OADZ;AAEI,IAAA,OAAO,EAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFf;AAGI,IAAA,KAAK,EAAG,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAG,OADZ;AAEI,IAAA,OAAO,EAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFf;AAGI,IAAA,KAAK,EAAG,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CALJ,CADJ,CADJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAID,OAAO,CAACD,MAAhC;AACI,IAAA,EAAE,EAAG,UADT;AAEI,IAAA,UAAU,EAAI;AACVgB,MAAAA,YAAY,EACR,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACrB,UAAAA,KAAK,EAAC;AAAP,SAAf;AACI,QAAA,OAAO,EAAG,WADd;AAEI,QAAA,KAAK,EAAG,SAFZ;AAGI,QAAA,IAAI,EAAG,QAHX;AAII,QAAA,KAAK,EAAG,YAJZ;AAKI,QAAA,OAAO,EAAI,MAAMW,eAAe,EALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM,KAFlB;AAeI,IAAA,MAAM,EAAG,QAfb;AAgBI,IAAA,WAAW,EAAG,gDAhBlB;AAiBI,IAAA,QAAQ,EAAI,IAjBhB;AAkBI,IAAA,KAAK,EAAIlB,WAAW,CAACiB,KAlBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,EA6CI;AAAI,IAAA,SAAS,EAAIJ,OAAO,CAACF,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACkB,MAAAA,GAAG,EAAC,EAAL;AAAStB,MAAAA,KAAK,EAAE;AAAhB,KAAf;AACI,IAAA,OAAO,EAAG,WADd;AAEI,IAAA,KAAK,EAAG,SAFZ;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,OAAO,EAAI,MAAMjB,SAAS,EAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,CA7CJ,EAyDI;AAAI,IAAA,SAAS,EAAIuB,OAAO,CAACJ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,SAAS,EAAII,OAAO,CAACP,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAG,WADd;AAEI,IAAA,KAAK,EAAG,SAFZ;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,KAAK,EAAG,QAJZ;AAKI,IAAA,OAAO,EAAIf,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADJ,CAJJ,EAeI;AAAM,IAAA,SAAS,EAAIsB,OAAO,CAACJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAG,WADd;AAEI,IAAA,KAAK,EAAG,SAFZ;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,OAAO,EAAIjB,SAJf;AAKI,IAAA,KAAK,EAAG,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAfJ,EA0BI;AAAM,IAAA,SAAS,EAAIqB,OAAO,CAACJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAG,WADd;AAEI,IAAA,KAAK,EAAG,SAFZ;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,OAAO,EAAI,MAAMhB,QAAQ,EAJ7B;AAKI,IAAA,KAAK,EAAG,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CA1BJ,CADJ,CAzDJ,EAiGI,oBAAC,oBAAD;AAAsB,IAAA,IAAI,EAAIK,IAA9B;AAAoC,IAAA,IAAI,EAAIJ,kBAA5C;AAAgE,IAAA,KAAK,EAAI2B,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjGJ,CADJ,CADJ;AAuGH,CAxKD;;AA0KA,eAAelC,UAAf","sourcesContent":["import { Button, FormControlLabel, makeStyles, Radio, RadioGroup, TextField } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport useInput from \"util/useInput\";\nimport SearchItemCodeDialog from '../SearchItemCodeDialog';\nimport useAsync from 'util/useAsync';\nimport * as api from 'erp/logistic/purchase/api';\n\nconst RegistHead = ({ trItemCode, trDivisionCode, searchBom, addNewRow, deleteRow, batchAll }) => {\n    const [openItemCodeDialog, setOpenItemCodeDialog] = useState(false);\n    const [divisionCode, setDivisionCode] = useState(null);\n    const [data, setData] = useState(null);\n    \n    const getItemCode = useInput(\"\");\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(2)\n            }\n        },\n        fieldset: {\n            width: 390,\n            paddingTop: 20\n        },\n        button2: {\n            paddingLeft: 20\n        },\n        bomButton: {\n            paddingLeft: 20,\n            width: 120            \n        },\n        tField: {\n            paddingLeft: 10,\n            paddingTop: 35\n        }\n    }));\n\n    const classes = useStyles();\n\n    const onDivisionChange = (e) => {\n        setDivisionCode(e.currentTarget.value);\n        trDivisionCode(e.currentTarget.value);\n    };\n\n    const handleClickOpen = () => {\n        if(divisionCode === null) {\n            alert(\"품목분류를 먼저 선택해주세요. \\n(완제품, 반제품 중에 선택)\");\n            return;\n        }else {\n            getDetailCode();\n            setOpenItemCodeDialog(true);\n        }        \n    };\n\n    const handleClose = (value) => {\n        setOpenItemCodeDialog(false);\n        if(value.data === undefined) {\n            return;\n        }\n        getItemCode.setValue(value.data[0].detailCode);\n        trItemCode(value.data[0].detailCode);\n    };\n\n    const [detailCode, getDetailCodeFetch] = useAsync((param) =>api.getDetailCode(param), [], true);\n    const getDetailCode = useCallback(() => {\n        getDetailCodeFetch(divisionCode);\n    },[divisionCode, getDetailCodeFetch]);\n    useEffect(() => {\n        if(detailCode.data)\n        setData(detailCode.data.detailCodeList)\n    },[detailCode.data])\n\n    return (\n        <>\n            <tr className = {classes.root}>\n                <td style = {{ paddingLeft: 50 }}>\n                    <RadioGroup\n                        row\n                        aria-label = \"itemCode\"\n                        onChange = {onDivisionChange}\n                    >\n                        <fieldset>\n                            <legend>품목분류</legend>\n                            <FormControlLabel\n                                value = \"IT-CI\"\n                                control = {<Radio />}\n                                label = \"완제품\"\n                            />\n                            <FormControlLabel\n                                value = \"IT-SI\"\n                                control = {<Radio />}\n                                label = \"반제품\"\n                            />\n                        </fieldset>\n                    </RadioGroup>\n                </td>\n                <td>\n                    <TextField className = {classes.tField}\n                        id = \"itemCode\"\n                        InputProps = {{\n                            endAdornment: (\n                                <Button style={{width:100}}      \n                                    variant = \"contained\"\n                                    color = \"primary\"\n                                    size = \"medium\"\n                                    value = \"searchCode\"\n                                    onClick = {() => handleClickOpen()}\n                                >\n                                    검색\n                                </Button>\n                            )\n                        }}                        \n                        margin = \"normal\"\n                        placeholder = \"          품목코드검색\"\n                        disabled = {true}\n                        value = {getItemCode.value}\n                    />\n                    \n                </td>\n                <td className = {classes.bomButton}>\n                    <span>\n                        <Button style={{top:56, width: 120}}                             \n                            variant = \"contained\"\n                            color = \"primary\"\n                            size = \"medium\"\n                            onClick = {() => searchBom()}\n                        >\n                            BOM 조회\n                        </Button>\n                    </span>                    \n                </td>\n                <td className = {classes.button2}>\n                    <fieldset className = {classes.fieldset}>\n                        <legend>\n                            <strong>BOM 수정/삭제/저장</strong>\n                        </legend>\n                        <span>\n                            <Button\n                                variant = \"contained\"\n                                color = \"primary\"\n                                size = \"medium\"\n                                value = \"addNew\"\n                                onClick = {addNewRow}\n                            >\n                                새로운 항목 추가\n                            </Button>\n                        </span>\n                        <span className = {classes.button2}>\n                            <Button\n                                variant = \"contained\"\n                                color = \"primary\"\n                                size = \"medium\"\n                                onClick = {deleteRow}\n                                value = \"deleteRow\"\n                            >\n                                삭제\n                            </Button>\n                        </span>\n                        <span className = {classes.button2}>\n                            <Button\n                                variant = \"contained\"\n                                color = \"primary\"\n                                size = \"medium\"\n                                onClick = {() => batchAll()}\n                                value = \"batcAll\"\n                            >\n                                일괄저장\n                            </Button>\n                        </span>\n                    </fieldset>\n                </td>\n                <SearchItemCodeDialog data = {data} open = {openItemCodeDialog} close = {handleClose} />\n            </tr>\n        </>        \n    );\n};\n\nexport default RegistHead;"]},"metadata":{},"sourceType":"module"}