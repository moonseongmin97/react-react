{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\sales\\\\page\\\\SalesPlanInfo\\\\SalesPlanItemDialog.js\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogContent, List, DialogTitle } from '@material-ui/core';\nimport { AgGridReact } from 'ag-grid-react';\n\nconst SalesPlanItemDialog = ({\n  open,\n  close,\n  value\n}) => {\n  const [grid, setGrid] = useState('');\n  const [list, setList] = useState([]);\n  const column = {\n    columnDefs: [{\n      headerName: '코드',\n      field: 'detailCode',\n      width: 100\n    }, {\n      headerName: '코드명',\n      field: 'detailCodeName',\n      width: 100\n    }]\n  };\n\n  const onCellClicked = parmas => {\n    close({\n      data: grid.getSelectedRows(),\n      // data는 클릭한 row의 정보이고,\n      division: 'accountDialog'\n    });\n  };\n\n  const onGridReady = params => {\n    setGrid(params.api);\n    params.api.sizeColumnsToFit(); // 칼럼 사이즈 자동조절\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:8282/logi/base/codeList', {\n      params: {\n        divisionCode: 'IT-_I'\n      }\n    }).then(response => {\n      setList(response.data.detailCodeList); //console.log(response.data.detailCodeList)\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  return React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    Align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uD15C\\uCF54\\uB4DC\\uC120\\uD0DD\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'ag-theme-material' //그리드 모양\n    ,\n    style: {\n      height: '300px',\n      width: '100%' //addingTop: \"8px\",\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: column.columnDefs //컬럼명\n    ,\n    rowData: list // 뿌릴 data\n    ,\n    rowSelection: \"single\" // 하나만 선택 가능.\n    ,\n    getRowStyle: param => {\n      return {\n        'text-align': 'center'\n      }; //body 가운데 정렬\n    },\n    onGridReady: onGridReady,\n    onCellClicked: onCellClicked // cell을 클릭하면, handleClose가 실행된다.\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))));\n};\n\nexport default SalesPlanItemDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/sales/page/SalesPlanInfo/SalesPlanItemDialog.js"],"names":["Axios","React","useEffect","useState","Dialog","DialogContent","List","DialogTitle","AgGridReact","SalesPlanItemDialog","open","close","value","grid","setGrid","list","setList","column","columnDefs","headerName","field","width","onCellClicked","parmas","data","getSelectedRows","division","onGridReady","params","api","sizeColumnsToFit","get","divisionCode","then","response","detailCodeList","catch","e","console","log","height","param"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Dialog, DialogContent, List, DialogTitle } from '@material-ui/core';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nconst SalesPlanItemDialog = ({ open, close, value }) => {\r\n    const [grid, setGrid] = useState('');\r\n    const [list, setList] = useState([]);\r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: '코드', field: 'detailCode', width: 100 },\r\n            { headerName: '코드명', field: 'detailCodeName', width: 100 }\r\n        ]\r\n    };\r\n    const onCellClicked = parmas => {\r\n        close({\r\n            data: grid.getSelectedRows(), // data는 클릭한 row의 정보이고,\r\n            division: 'accountDialog'\r\n        });\r\n    };\r\n    const onGridReady = params => {\r\n        setGrid(params.api);\r\n        params.api.sizeColumnsToFit(); // 칼럼 사이즈 자동조절\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8282/logi/base/codeList', {\r\n            params: {\r\n                divisionCode: 'IT-_I'\r\n            }\r\n        })\r\n            .then(response => {\r\n                setList(response.data.detailCodeList);\r\n                //console.log(response.data.detailCodeList)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open} fullWidth={true} maxWidth={'xs'}>\r\n            <DialogTitle id=\"simple-dialog-title\" Align=\"center\">\r\n                아이템코드선택\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <List>\r\n                    <div\r\n                        className={'ag-theme-material'} //그리드 모양\r\n                        style={{\r\n                            height: '300px',\r\n                            width: '100%'\r\n                            //addingTop: \"8px\",\r\n                        }}\r\n                    >\r\n                        <AgGridReact\r\n                            columnDefs={column.columnDefs} //컬럼명\r\n                            rowData={list} // 뿌릴 data\r\n                            rowSelection=\"single\" // 하나만 선택 가능.\r\n                            getRowStyle={param => {\r\n                                return { 'text-align': 'center' }; //body 가운데 정렬\r\n                            }}\r\n                            onGridReady={onGridReady}\r\n                            onCellClicked={onCellClicked} // cell을 클릭하면, handleClose가 실행된다.\r\n                        />\r\n                    </div>\r\n                </List>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default SalesPlanItemDialog;\r\n"]},"metadata":{},"sourceType":"module"}