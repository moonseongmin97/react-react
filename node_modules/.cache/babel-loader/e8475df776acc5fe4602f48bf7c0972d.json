{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\outsourc\\\\page\\\\Order\\\\AmountDialog.js\";\nimport { TextField, Button } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nconst AmountDialog = props => {\n  const [itemCost, setItemCost] = useState(null);\n  const [total, setTotal] = useState(null);\n  const [itemAmount, setItemAmount] = useState(null);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      flexGrow: 1,\n      marginLeft: '3vw',\n      marginTop: 'calc(6vh - 4vh)',\n      height: '6vh',\n      fontSize: '3vh'\n    },\n    btn: {\n      flexGrow: 1,\n      marginBottom: '1vh',\n      marginTop: '1vh'\n    },\n    appBar: {\n      flexGrow: 1,\n      width: '100%',\n      height: '10vh'\n    },\n    text: {\n      flexGrow: 1,\n      fontSize: '3vh'\n    },\n    float: {\n      float: 'left'\n    }\n  }));\n  const classes = useStyles();\n  useEffect(() => {\n    props.handleSearchItemCode();\n    setItemCost(props.itemCost);\n  }, [props]);\n  const handleChangeTotal = useCallback(e => {\n    setItemAmount(e.target.value);\n    setTotal(e.target.value * props.itemCost);\n  }, [itemCost, props]);\n\n  const handleConfirmAmount = params => {\n    var row = props.gridApi.getSelectedRows();\n    row[0].outsourcAmount = itemAmount;\n    row[0].unitPriceOfOutsourc = itemCost;\n    row[0].sumPriceOfOutsourc = total;\n    console.log(row);\n    props.gridApi.updateRowData({\n      update: row\n    });\n    props.close();\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC\\uC9C0\\uC2DC\\uC218\\uB7C9 / \\uC678\\uC8FC\\uB2E8\\uAC00 \\uC785\\uB825\"))), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC\\uC9C0\\uC2DC\\uC218\\uB7C9\"), ' ', React.createElement(TextField, {\n    id: \"amountTxf\",\n    variant: \"outlined\",\n    onChange: handleChangeTotal,\n    value: itemAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC\\uB2E8\\uAC00\"), \" \", React.createElement(TextField, {\n    id: \"costTxf\",\n    variant: \"outlined\",\n    value: itemCost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\uD569\\uACC4\\uC561 :\"), React.createElement(TextField, {\n    disabled: true,\n    id: \"standard-disabled\",\n    value: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleConfirmAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"OK\"), React.createElement(Button, {\n    onClick: props.handleCloseAmountDialog,\n    className: classes.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"CANCLE\"))));\n};\n\nexport default AmountDialog;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/outsourc/page/Order/AmountDialog.js"],"names":["TextField","Button","Axios","React","useCallback","useEffect","useState","makeStyles","AppBar","Typography","MyGrid","AmountDialog","props","itemCost","setItemCost","total","setTotal","itemAmount","setItemAmount","useStyles","theme","root","flexGrow","title","marginLeft","marginTop","height","fontSize","btn","marginBottom","appBar","width","text","float","classes","handleSearchItemCode","handleChangeTotal","e","target","value","handleConfirmAmount","params","row","gridApi","getSelectedRows","outsourcAmount","unitPriceOfOutsourc","sumPriceOfOutsourc","console","log","updateRowData","update","close","handleCloseAmountDialog"],"mappings":"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","sourcesContent":["import { TextField, Button } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nconst AmountDialog = props => {\n    const [itemCost, setItemCost] = useState(null);\n    const [total, setTotal] = useState(null);\n    const [itemAmount, setItemAmount] = useState(null);\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            flexGrow: 1\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '3vw',\n            marginTop: 'calc(6vh - 4vh)',\n            height: '6vh',\n            fontSize: '3vh'\n        },\n        btn: {\n            flexGrow: 1,\n            marginBottom: '1vh',\n            marginTop: '1vh'\n        },\n        appBar: {\n            flexGrow: 1,\n            width: '100%',\n            height: '10vh'\n        },\n        text: {\n            flexGrow: 1,\n            fontSize: '3vh'\n        },\n        float: {\n            float: 'left'\n        }\n    }));\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        props.handleSearchItemCode();\n        setItemCost(props.itemCost);\n    }, [props]);\n\n    const handleChangeTotal = useCallback(\n        e => {\n            setItemAmount(e.target.value);\n            setTotal(e.target.value * props.itemCost);\n        },\n        [itemCost, props]\n    );\n\n    const handleConfirmAmount = params => {\n        var row = props.gridApi.getSelectedRows();\n        row[0].outsourcAmount = itemAmount;\n        row[0].unitPriceOfOutsourc = itemCost;\n        row[0].sumPriceOfOutsourc = total;\n\n        console.log(row);\n        props.gridApi.updateRowData({ update: row });\n        props.close();\n    };\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <AppBar position=\"static\" className={classes.appBar}>\n                    <Typography className={classes.title}>외주지시수량 / 외주단가 입력</Typography>\n                </AppBar>\n            </div>\n            <div align=\"center\">\n                <div>\n                    <h4>외주지시수량</h4>{' '}\n                    <TextField\n                        id=\"amountTxf\"\n                        variant=\"outlined\"\n                        onChange={handleChangeTotal}\n                        value={itemAmount}\n                    />\n                </div>\n                <div>\n                    <h4>외주단가</h4> <TextField id=\"costTxf\" variant=\"outlined\" value={itemCost} />\n                </div>\n                <div>\n                    <h4>합계액 :</h4>\n                    <TextField disabled id=\"standard-disabled\" value={total} />\n                </div>\n                <div>\n                    <Button onClick={handleConfirmAmount}>OK</Button>\n                    <Button onClick={props.handleCloseAmountDialog} className={classes.btn}>\n                        CANCLE\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AmountDialog;\n"]},"metadata":{},"sourceType":"module"}