{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\AppContainer.js\";\nimport React, { useEffect } from 'react';\nimport App from './App'; // redux\n\nimport { connect } from 'react-redux'; // saga\n\nimport { menuListRequest } from 'common/reducer/commonReducer';\nimport { reLoginSuccess } from 'common/reducer/commonReducer';\n\nconst AppContainer = props => {\n  const {\n    isAuthenticated,\n    menuListRequest,\n    reLoginSuccess,\n    authorityCode\n  } = props; // authorityRequest();\n\n  const UserInfo = async () => {\n    const loggedInfo = sessionStorage.getItem('id_token'); // 로그인 정보를 세션에서 가져옵니다.\n\n    if (!loggedInfo) return; // 로그인 정보가 없다면 여기서 멈춥니다.\n\n    try {\n      await reLoginSuccess();\n    } catch (e) {\n      sessionStorage.clear();\n      window.location.href = '/';\n    }\n  };\n\n  console.log(authorityCode);\n  useEffect(() => {\n    UserInfo();\n    if (authorityCode !== undefined) menuListRequest({\n      authorityCode: authorityCode\n    });\n  }, [authorityCode]);\n  return React.createElement(App, {\n    isAuthenticated: isAuthenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.logInOutReducer.isAuthenticated,\n    authorityCode: state.logInOutReducer.empInfo.authorityCode\n  };\n};\n\nexport default connect(mapStateToProps, {\n  menuListRequest,\n  reLoginSuccess\n})(AppContainer);","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/AppContainer.js"],"names":["React","useEffect","App","connect","menuListRequest","reLoginSuccess","AppContainer","props","isAuthenticated","authorityCode","UserInfo","loggedInfo","sessionStorage","getItem","e","clear","window","location","href","console","log","undefined","mapStateToProps","state","logInOutReducer","empInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAEC,IAAAA,eAAF;AAAmBJ,IAAAA,eAAnB;AAAoCC,IAAAA,cAApC;AAAoDI,IAAAA;AAApD,MAAsEF,KAA5E,CAD0B,CAE1B;;AACA,QAAMG,QAAQ,GAAG,YAAY;AACzB,UAAMC,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAnB,CADyB,CAC8B;;AAEvD,QAAI,CAACF,UAAL,EAAiB,OAHQ,CAGA;;AAEzB,QAAI;AACA,YAAMN,cAAc,EAApB;AACH,KAFD,CAEE,OAAOS,CAAP,EAAU;AACRF,MAAAA,cAAc,CAACG,KAAf;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH;AACJ,GAXD;;AAaAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ;AACR,QAAID,aAAa,KAAKY,SAAtB,EAAiCjB,eAAe,CAAC;AAAEK,MAAAA,aAAa,EAAEA;AAAjB,KAAD,CAAf;AACpC,GAHQ,EAGN,CAACA,aAAD,CAHM,CAAT;AAKA,SAAO,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAED,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAxBD;;AA0BA,MAAMc,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHf,IAAAA,eAAe,EAAEe,KAAK,CAACC,eAAN,CAAsBhB,eADpC;AAEHC,IAAAA,aAAa,EAAEc,KAAK,CAACC,eAAN,CAAsBC,OAAtB,CAA8BhB;AAF1C,GAAP;AAIH,CALD;;AAOA,eAAeN,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CAA8DC,YAA9D,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport App from './App';\n// redux\nimport { connect } from 'react-redux';\n// saga\nimport { menuListRequest } from 'common/reducer/commonReducer';\nimport { reLoginSuccess } from 'common/reducer/commonReducer';\n\nconst AppContainer = props => {\n    const { isAuthenticated, menuListRequest, reLoginSuccess, authorityCode } = props;\n    // authorityRequest();\n    const UserInfo = async () => {\n        const loggedInfo = sessionStorage.getItem('id_token'); // 로그인 정보를 세션에서 가져옵니다.\n\n        if (!loggedInfo) return; // 로그인 정보가 없다면 여기서 멈춥니다.\n\n        try {\n            await reLoginSuccess();\n        } catch (e) {\n            sessionStorage.clear();\n            window.location.href = '/';\n        }\n    };\n\n    console.log(authorityCode);\n\n    useEffect(() => {\n        UserInfo();\n        if (authorityCode !== undefined) menuListRequest({ authorityCode: authorityCode });\n    }, [authorityCode]);\n\n    return <App isAuthenticated={isAuthenticated} />;\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.logInOutReducer.isAuthenticated,\n        authorityCode: state.logInOutReducer.empInfo.authorityCode\n    };\n};\n\nexport default connect(mapStateToProps, { menuListRequest, reLoginSuccess })(AppContainer);\n"]},"metadata":{},"sourceType":"module"}