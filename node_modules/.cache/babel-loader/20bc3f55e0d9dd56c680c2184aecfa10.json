{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\account\\\\statement\\\\page\\\\CashJournal\\\\CashJournalGrid.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst CashJournalGrid = () => {\n  const data = useSelector(({\n    AccReducer\n  }) => AccReducer.StatementReducer.cashJournalList);\n  const accountColumnDefs = [{\n    headerName: \"해당월\",\n    field: \"monthReportingDate\",\n    width: 100\n  }, {\n    headerName: \"일자\",\n    field: \"reportingDate\"\n  }, {\n    headerName: \"적요\",\n    field: \"expenseReport\",\n    width: 100\n  }, {\n    headerName: \"거래처\",\n    field: \"customerCode\",\n    width: 100\n  }, {\n    headerName: \"거래처명\",\n    field: \"customerName\"\n  }, {\n    headerName: \"입금\",\n    field: \"deposit\",\n    width: 172,\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"출금\",\n    field: \"withdrawal\",\n    width: 172,\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"잔액\",\n    field: \"balance\",\n    width: 172,\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }];\n\n  const onGridSizeChanged = params => {\n    var gridWidth = document.getElementById(\"grid-wrapperr\").offsetWidth;\n    var columnsToShow = [];\n    var columnsToHide = [];\n    var totalColsWidth = 0;\n    var allColumns = params.columnApi.getAllColumns();\n\n    for (var i = 0; i < allColumns.length; i++) {\n      var column = allColumns[i];\n      totalColsWidth += column.getMinWidth();\n\n      if (totalColsWidth > gridWidth) {\n        columnsToHide.push(column.colId);\n      } else {\n        columnsToShow.push(column.colId);\n      }\n    }\n\n    params.columnApi.setColumnsVisible(columnsToShow, true);\n    params.columnApi.setColumnsVisible(columnsToHide, false);\n    params.api.sizeColumnsToFit();\n  };\n\n  const {\n    dark\n  } = useThemeSwitcher();\n  return React.createElement(\"div\", {\n    id: \"grid-wrapperr\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\",\n    style: {\n      height: \"60vh\",\n      width: \"100%\" //paddingTop: \"20px\",\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    domLayout: \"autoHeight\",\n    columnDefs: accountColumnDefs,\n    rowData: data // setData된 state를 결국 여기 넣어서 그리드에 표현함.\n    ,\n    rowSelection: \"single\",\n    onGidReady: e => {\n      e.api.sizeColumnsToFit();\n    },\n    onGridSizeChanged: onGridSizeChanged,\n    getRowStyle: param => ({\n      \"text-align\": \"center\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n};\n\nexport default CashJournalGrid;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/account/statement/page/CashJournal/CashJournalGrid.js"],"names":["React","useSelector","AgGridReact","useThemeSwitcher","CashJournalGrid","data","AccReducer","StatementReducer","cashJournalList","accountColumnDefs","headerName","field","width","valueFormatter","onGridSizeChanged","params","gridWidth","document","getElementById","offsetWidth","columnsToShow","columnsToHide","totalColsWidth","allColumns","columnApi","getAllColumns","i","length","column","getMinWidth","push","colId","setColumnsVisible","api","sizeColumnsToFit","dark","height","e","param"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst CashJournalGrid = () => {\n  const data = useSelector(({ AccReducer }) => AccReducer.StatementReducer.cashJournalList);\n\n  const accountColumnDefs = [\n    { headerName: \"해당월\", field: \"monthReportingDate\", width: 100 },\n    { headerName: \"일자\", field: \"reportingDate\" },\n    { headerName: \"적요\", field: \"expenseReport\", width: 100 },\n    { headerName: \"거래처\", field: \"customerCode\", width: 100 },\n    { headerName: \"거래처명\", field: \"customerName\" },\n    {\n      headerName: \"입금\",\n      field: \"deposit\",\n      width: 172,\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"출금\",\n      field: \"withdrawal\",\n      width: 172,\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"잔액\",\n      field: \"balance\",\n      width: 172,\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n  ];\n\n  const onGridSizeChanged = params => {\n    var gridWidth = document.getElementById(\"grid-wrapperr\").offsetWidth;\n    var columnsToShow = [];\n    var columnsToHide = [];\n    var totalColsWidth = 0;\n    var allColumns = params.columnApi.getAllColumns();\n    for (var i = 0; i < allColumns.length; i++) {\n      var column = allColumns[i];\n      totalColsWidth += column.getMinWidth();\n      if (totalColsWidth > gridWidth) {\n        columnsToHide.push(column.colId);\n      } else {\n        columnsToShow.push(column.colId);\n      }\n    }\n    params.columnApi.setColumnsVisible(columnsToShow, true);\n    params.columnApi.setColumnsVisible(columnsToHide, false);\n    params.api.sizeColumnsToFit();\n  };\n\n  const { dark } = useThemeSwitcher();\n\n  return (\n    <div id=\"grid-wrapperr\" style={{ width: \"100%\", height: \"100%\" }}>\n      <div\n        className={dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\"}\n        style={{\n          height: \"60vh\",\n          width: \"100%\",\n          //paddingTop: \"20px\",\n        }}\n      >\n        <AgGridReact\n          domLayout={\"autoHeight\"}\n          columnDefs={accountColumnDefs}\n          rowData={data} // setData된 state를 결국 여기 넣어서 그리드에 표현함.\n          rowSelection=\"single\"\n          onGidReady={e => {\n            e.api.sizeColumnsToFit();\n          }}\n          onGridSizeChanged={onGridSizeChanged}\n          getRowStyle={param => ({ \"text-align\": \"center\" })}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CashJournalGrid;\n"]},"metadata":{},"sourceType":"module"}