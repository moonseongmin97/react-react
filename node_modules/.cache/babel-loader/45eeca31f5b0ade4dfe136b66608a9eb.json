{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\production\\\\page\\\\WorkInstruction\\\\WorkOrderDialog.js\";\nimport { Button, NativeSelect } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Swal from 'sweetalert2';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nfunction WorkOrderDialog(props) {\n  const [list, setList] = useState([]);\n  const [workpalce, setWorkplace] = useState([]);\n  const [divisionCode, setDivisionCode] = useState([]);\n  const [workPlaceCode, setWorkPlaceCode] = useState();\n  const [productionProcessCode, setProductionProcessCode] = useState();\n  const column = {\n    columnDefs: [{\n      headerName: '소요량취합번호',\n      field: 'mrpGatheringNo'\n    }, {\n      headerName: '품목분류',\n      field: 'itemClassification'\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode'\n    }, {\n      headerName: '품목명',\n      field: 'itemName'\n    }, {\n      headerName: '단위',\n      field: 'unitOfMrp'\n    }, {\n      headerName: '투입예정재고량',\n      field: 'inputAmount'\n    }, {\n      headerName: '재고소요/제품제작수량',\n      field: 'requiredAmount'\n    }, {\n      headerName: '재고량(재고소요이후)',\n      field: 'stockAfterWork'\n    }, {\n      headerName: '작업지시기한',\n      field: 'orderDate'\n    }, {\n      headerName: '작업완료기한',\n      field: 'requiredDate'\n    }]\n  };\n  const contractSearch = useCallback(params => {\n    let bool = list.map(el => el.stockAfterWork).includes('재고부족');\n\n    if (bool) {\n      props.close();\n      return Swal.fire({\n        icon: 'error',\n        title: '재고부족',\n        text: '재고를 확인하세요.'\n      });\n    }\n\n    var result = window.confirm('현재 모의 전개된 결과를 작업하시겠습니까?');\n\n    if (result) {\n      Axios.get('http://localhost:8282/logi/production/workOrder', {\n        params: {\n          mrpGatheringNo: props.data.mrpGatheringNo,\n          workPlaceCode: workPlaceCode,\n          productionProcessCode: productionProcessCode\n        }\n      }).then(response => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Wow...',\n          text: 'Something went success!'\n        });\n      }).catch(e => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        });\n      });\n      props.setList(null);\n      props.close();\n    }\n  }, [list, productionProcessCode, props, workPlaceCode]);\n  useEffect(() => {\n    Axios.get('http://localhost:8282/logi/production/showWorkOrderDialog', {\n      params: {\n        mrpGatheringNo: props.data.mrpGatheringNo\n      }\n    }).then(response => {\n      setList(response.data.result);\n    }).catch(e => {\n      Swal.fire('오류', e, 'error');\n    }); //사업장\n\n    Axios.get('http://localhost:8282/hr/company/searchWorkplace', {\n      params: {\n        companyCode: 'COM-01'\n      }\n    }).then(response => {\n      setWorkplace(response.data.gridRowJson);\n      setWorkPlaceCode(response.data.gridRowJson[0].workplaceCode);\n    }).catch(e => {\n      Swal.fire('오류', e, 'error');\n    }); //생산공정코드\n\n    Axios.get('http://localhost:8282/logi/base/codeList', {\n      params: {\n        divisionCode: 'PP'\n      }\n    }).then(response => {\n      setDivisionCode(response.data.detailCodeList);\n      setProductionProcessCode(response.data.detailCodeList[0].detailCode);\n    }).catch(e => {\n      Swal.fire('오류', e, 'error');\n    });\n  }, []);\n  return React.createElement(MyGrid, {\n    column: column,\n    title: '작업지시 시뮬레이션',\n    list: list,\n    rowSelection: \"single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    onChange: e => setWorkPlaceCode(e.target.value),\n    inputProps: {\n      name: 'searchSelect',\n      id: 'age-native-label-placeholder'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, workpalce.map((value, inedx) => {\n    return React.createElement(\"option\", {\n      value: value.workplaceCode,\n      key: inedx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, value.workplaceName);\n  })), React.createElement(NativeSelect, {\n    onChange: e => {\n      setProductionProcessCode(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, divisionCode.map((value, inedx) => {\n    if (value.codeUseCheck !== 'N') return React.createElement(\"option\", {\n      value: value.detailCode,\n      key: inedx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, value.detailCodeName);\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: contractSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uBAA8\\uC758\\uC804\\uAC1C\\uB41C \\uACB0\\uACFC \\uC791\\uC5C5\\uC9C0\\uC2DC\"));\n}\n\nexport default WorkOrderDialog;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/production/page/WorkInstruction/WorkOrderDialog.js"],"names":["Button","NativeSelect","Axios","React","useEffect","useState","useCallback","Swal","MyGrid","WorkOrderDialog","props","list","setList","workpalce","setWorkplace","divisionCode","setDivisionCode","workPlaceCode","setWorkPlaceCode","productionProcessCode","setProductionProcessCode","column","columnDefs","headerName","field","contractSearch","params","bool","map","el","stockAfterWork","includes","close","fire","icon","title","text","result","window","confirm","get","mrpGatheringNo","data","then","response","catch","e","companyCode","gridRowJson","workplaceCode","detailCodeList","detailCode","target","value","name","id","inedx","workplaceName","codeUseCheck","detailCodeName"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,mBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,EAAlD;AACA,QAAM,CAACc,qBAAD,EAAwBC,wBAAxB,IAAoDf,QAAQ,EAAlE;AACA,QAAMgB,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CACR;AAAEC,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KADQ,EAER;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAFQ,EAGR;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAHQ,EAIR;AAAED,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAJQ,EAKR;AAAED,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KALQ,EAMR;AAAED,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KANQ,EAOR;AAAED,MAAAA,UAAU,EAAE,aAAd;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAPQ,EAQR;AAAED,MAAAA,UAAU,EAAE,aAAd;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KARQ,EASR;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KATQ,EAUR;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAVQ;AADD,GAAf;AAcA,QAAMC,cAAc,GAAGnB,WAAW,CAACoB,MAAM,IAAI;AACzC,QAAIC,IAAI,GAAGhB,IAAI,CAACiB,GAAL,CAASC,EAAE,IAAIA,EAAE,CAACC,cAAlB,EAAkCC,QAAlC,CAA2C,MAA3C,CAAX;;AACA,QAAGJ,IAAH,EAAQ;AACJjB,MAAAA,KAAK,CAACsB,KAAN;AACA,aAAOzB,IAAI,CAAC0B,IAAL,CAAU;AACbC,QAAAA,IAAI,EAAE,OADO;AAEbC,QAAAA,KAAK,EAAE,MAFM;AAGbC,QAAAA,IAAI,EAAE;AAHO,OAAV,CAAP;AAKH;;AACD,QAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,yBAAf,CAAb;;AACA,QAAIF,MAAJ,EAAY;AACRnC,MAAAA,KAAK,CAACsC,GAAN,CAAU,iDAAV,EAA6D;AACzDd,QAAAA,MAAM,EAAE;AACJe,UAAAA,cAAc,EAAE/B,KAAK,CAACgC,IAAN,CAAWD,cADvB;AAEJxB,UAAAA,aAAa,EAAEA,aAFX;AAGJE,UAAAA,qBAAqB,EAAEA;AAHnB;AADiD,OAA7D,EAOKwB,IAPL,CAOUC,QAAQ,IAAI;AACdrC,QAAAA,IAAI,CAAC0B,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,QAFD;AAGNC,UAAAA,IAAI,EAAE;AAHA,SAAV;AAKH,OAbL,EAcKS,KAdL,CAcWC,CAAC,IAAI;AACRvC,QAAAA,IAAI,CAAC0B,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAE;AAHA,SAAV;AAKH,OApBL;AAqBI1B,MAAAA,KAAK,CAACE,OAAN,CAAc,IAAd;AACJF,MAAAA,KAAK,CAACsB,KAAN;AACH;AACJ,GApCiC,EAoChC,CAACrB,IAAD,EAAOQ,qBAAP,EAA8BT,KAA9B,EAAqCO,aAArC,CApCgC,CAAlC;AAsCAb,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACsC,GAAN,CAAU,2DAAV,EAAuE;AACnEd,MAAAA,MAAM,EAAE;AACJe,QAAAA,cAAc,EAAE/B,KAAK,CAACgC,IAAN,CAAWD;AADvB;AAD2D,KAAvE,EAKKE,IALL,CAKUC,QAAQ,IAAI;AACdhC,MAAAA,OAAO,CAACgC,QAAQ,CAACF,IAAT,CAAcL,MAAf,CAAP;AACH,KAPL,EAQKQ,KARL,CAQWC,CAAC,IAAI;AACRvC,MAAAA,IAAI,CAAC0B,IAAL,CAAU,IAAV,EAAgBa,CAAhB,EAAmB,OAAnB;AACH,KAVL,EADY,CAaZ;;AACA5C,IAAAA,KAAK,CAACsC,GAAN,CAAU,kDAAV,EAA8D;AAC1Dd,MAAAA,MAAM,EAAE;AACJqB,QAAAA,WAAW,EAAE;AADT;AADkD,KAA9D,EAKKJ,IALL,CAKUC,QAAQ,IAAI;AACd9B,MAAAA,YAAY,CAAC8B,QAAQ,CAACF,IAAT,CAAcM,WAAf,CAAZ;AACA9B,MAAAA,gBAAgB,CAAC0B,QAAQ,CAACF,IAAT,CAAcM,WAAd,CAA0B,CAA1B,EAA6BC,aAA9B,CAAhB;AACH,KARL,EASKJ,KATL,CASWC,CAAC,IAAI;AACRvC,MAAAA,IAAI,CAAC0B,IAAL,CAAU,IAAV,EAAgBa,CAAhB,EAAmB,OAAnB;AACH,KAXL,EAdY,CA2BZ;;AACA5C,IAAAA,KAAK,CAACsC,GAAN,CAAU,0CAAV,EAAsD;AAClDd,MAAAA,MAAM,EAAE;AACJX,QAAAA,YAAY,EAAE;AADV;AAD0C,KAAtD,EAKK4B,IALL,CAKUC,QAAQ,IAAI;AACd5B,MAAAA,eAAe,CAAC4B,QAAQ,CAACF,IAAT,CAAcQ,cAAf,CAAf;AACA9B,MAAAA,wBAAwB,CAACwB,QAAQ,CAACF,IAAT,CAAcQ,cAAd,CAA6B,CAA7B,EAAgCC,UAAjC,CAAxB;AACH,KARL,EASKN,KATL,CASWC,CAAC,IAAI;AACRvC,MAAAA,IAAI,CAAC0B,IAAL,CAAU,IAAV,EAAgBa,CAAhB,EAAmB,OAAnB;AACH,KAXL;AAYH,GAxCQ,EAwCN,EAxCM,CAAT;AA0CA,SACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEzB,MAAhB;AAAwB,IAAA,KAAK,EAAE,YAA/B;AAA6C,IAAA,IAAI,EAAEV,IAAnD;AAAyD,IAAA,YAAY,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEmC,CAAC,IAAI5B,gBAAgB,CAAC4B,CAAC,CAACM,MAAF,CAASC,KAAV,CADnC;AAEI,IAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAE,cADE;AAERC,MAAAA,EAAE,EAAE;AAFI,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK1C,SAAS,CAACe,GAAV,CAAc,CAACyB,KAAD,EAAQG,KAAR,KAAkB;AAC7B,WACI;AAAQ,MAAA,KAAK,EAAEH,KAAK,CAACJ,aAArB;AAAoC,MAAA,GAAG,EAAEO,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACI,aADX,CADJ;AAKH,GANA,CAPL,CADJ,EAgBI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEX,CAAC,IAAI;AACX1B,MAAAA,wBAAwB,CAAC0B,CAAC,CAACM,MAAF,CAASC,KAAV,CAAxB;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKtC,YAAY,CAACa,GAAb,CAAiB,CAACyB,KAAD,EAAQG,KAAR,KAAkB;AAChC,QAAIH,KAAK,CAACK,YAAN,KAAuB,GAA3B,EACI,OACI;AAAQ,MAAA,KAAK,EAAEL,KAAK,CAACF,UAArB;AAAiC,MAAA,GAAG,EAAEK,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACM,cADX,CADJ;AAKP,GAPA,CALL,CAhBJ,EA8BI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAElC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFA9BJ,CADJ;AAoCH;;AAED,eAAehB,eAAf","sourcesContent":["import { Button, NativeSelect } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Swal from 'sweetalert2';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nfunction WorkOrderDialog(props) {\n    const [list, setList] = useState([]);\n    const [workpalce, setWorkplace] = useState([]);\n    const [divisionCode, setDivisionCode] = useState([]);\n    const [workPlaceCode, setWorkPlaceCode] = useState();\n    const [productionProcessCode, setProductionProcessCode] = useState();\n    const column = {\n        columnDefs: [\n            { headerName: '소요량취합번호', field: 'mrpGatheringNo' },\n            { headerName: '품목분류', field: 'itemClassification' },\n            { headerName: '품목코드', field: 'itemCode' },\n            { headerName: '품목명', field: 'itemName' },\n            { headerName: '단위', field: 'unitOfMrp' },\n            { headerName: '투입예정재고량', field: 'inputAmount' },\n            { headerName: '재고소요/제품제작수량', field: 'requiredAmount' },\n            { headerName: '재고량(재고소요이후)', field: 'stockAfterWork' },\n            { headerName: '작업지시기한', field: 'orderDate' },\n            { headerName: '작업완료기한', field: 'requiredDate' }\n        ]\n    };\n    const contractSearch = useCallback(params => {\n        let bool = list.map(el => el.stockAfterWork).includes('재고부족');\n        if(bool){\n            props.close();\n            return Swal.fire({\n                icon: 'error',\n                title: '재고부족',\n                text: '재고를 확인하세요.'\n            });\n        }\n        var result = window.confirm('현재 모의 전개된 결과를 작업하시겠습니까?');\n        if (result) {\n            Axios.get('http://localhost:8282/logi/production/workOrder', {\n                params: {\n                    mrpGatheringNo: props.data.mrpGatheringNo,\n                    workPlaceCode: workPlaceCode,\n                    productionProcessCode: productionProcessCode\n                }\n            })\n                .then(response => {\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Wow...',\n                        text: 'Something went success!'\n                    });\n                })\n                .catch(e => {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: 'Something went wrong!'\n                    });\n                });\n                props.setList(null);\n            props.close();\n        }\n    },[list, productionProcessCode, props, workPlaceCode]);\n\n    useEffect(() => {\n        Axios.get('http://localhost:8282/logi/production/showWorkOrderDialog', {\n            params: {\n                mrpGatheringNo: props.data.mrpGatheringNo\n            }\n        })\n            .then(response => {\n                setList(response.data.result);\n            })\n            .catch(e => {\n                Swal.fire('오류', e, 'error');\n            });\n\n        //사업장\n        Axios.get('http://localhost:8282/hr/company/searchWorkplace', {\n            params: {\n                companyCode: 'COM-01'\n            }\n        })\n            .then(response => {\n                setWorkplace(response.data.gridRowJson);\n                setWorkPlaceCode(response.data.gridRowJson[0].workplaceCode);\n            })\n            .catch(e => {\n                Swal.fire('오류', e, 'error');\n            });\n\n        //생산공정코드\n        Axios.get('http://localhost:8282/logi/base/codeList', {\n            params: {\n                divisionCode: 'PP'\n            }\n        })\n            .then(response => {\n                setDivisionCode(response.data.detailCodeList);\n                setProductionProcessCode(response.data.detailCodeList[0].detailCode);\n            })\n            .catch(e => {\n                Swal.fire('오류', e, 'error');\n            });\n    }, []);\n\n    return (\n        <MyGrid column={column} title={'작업지시 시뮬레이션'} list={list} rowSelection=\"single\">\n            <NativeSelect\n                onChange={e => setWorkPlaceCode(e.target.value)}\n                inputProps={{\n                    name: 'searchSelect',\n                    id: 'age-native-label-placeholder'\n                }}\n            >\n                {workpalce.map((value, inedx) => {\n                    return (\n                        <option value={value.workplaceCode} key={inedx}>\n                            {value.workplaceName}\n                        </option>\n                    );\n                })}\n            </NativeSelect>\n            <NativeSelect\n                onChange={e => {\n                    setProductionProcessCode(e.target.value);\n                }}\n            >\n                {divisionCode.map((value, inedx) => {\n                    if (value.codeUseCheck !== 'N')\n                        return (\n                            <option value={value.detailCode} key={inedx}>\n                                {value.detailCodeName}\n                            </option>\n                        );\n                })}\n            </NativeSelect>\n            <Button variant=\"contained\" color=\"secondary\" onClick={contractSearch}>\n                현재 모의전개된 결과 작업지시\n            </Button>\n        </MyGrid>\n    );\n}\n\nexport default WorkOrderDialog;\n"]},"metadata":{},"sourceType":"module"}