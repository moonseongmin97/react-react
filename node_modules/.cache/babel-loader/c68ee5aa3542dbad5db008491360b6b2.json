{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\attendance\\\\page\\\\DayAttendance\\\\DayAttdGrid.js\";\nimport React, { useEffect, useState } from \"react\";\nimport GridStyle from \"./GridStyle\";\nimport useInput from \"util/useInput\";\nimport \"./App.css\";\nimport CustomizedSelects from \"./Combo\";\nimport moment from \"moment\";\nimport { Paper, TextField, Button, Grid, AppBar, Typography, Toolbar } from \"@material-ui/core\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\"; //===========================재영 일근태 기록/조회 20-08-27======================//\n\nconst DayAttdGrid = props => {\n  // sessionStorage.getItem 모든값을 문자로 저장\n  const empCode = sessionStorage.getItem(\"empCodeInfo_token\"); // Grid\n\n  const classes = GridStyle(); // 현재시간\n\n  let thisTime = moment().format(\"HH:mm\"); // 오늘 날짜\n\n  let today = moment().format(\"YYYY-MM-DD\"); // 적용일\n\n  const [applyDay, setApplyDay] = useState(today); // 근태구분코드\n\n  const attdType = useInput(); // 근태구분명\n\n  const attdTypeName = useInput(); // 출퇴근시간\n\n  const [time, setTime] = useState(thisTime);\n  const [delData, setDelData] = useState([]);\n  const [deleteGridList, setDeleteGridList] = useState(null);\n  const column = {\n    columnDefs: [{\n      headerName: \"사원코드\",\n      field: \"empCode\",\n      hide: true\n    }, // 숨기기\n    {\n      headerName: \"일련번호\",\n      field: \"dayAttdCode\",\n      hide: true\n    }, {\n      headerName: \"적용일\",\n      field: \"applyDay\",\n      sortable: true,\n      headerCheckboxSelection: true,\n      headerCheckboxSelectionFilteredOnly: true,\n      checkboxSelection: true\n    }, //체크박스창\n    {\n      headerName: \"근태구분코드\",\n      field: \"attdTypeCode\",\n      hide: true\n    }, {\n      headerName: \"근태구분명\",\n      field: \"attdTypeName\"\n    }, {\n      headerName: \"출/퇴근\",\n      field: \"time\"\n    }]\n  };\n  useEffect(() => {\n    console.log(applyDay + \"dddddddd\" + empCode);\n    props.handleDayAttd(applyDay, empCode);\n  }, []);\n\n  const searchDayAttd = () => {\n    props.handleDayAttd(applyDay, empCode);\n  };\n\n  const insertDayAttd = () => {\n    if (!attdType.value) {\n      alert(\"근태구분을 선택 해주세요.\");\n    }\n\n    props.handleInsertDayAttd(empCode, applyDay, attdType.value, attdTypeName.value, time.replace(\":\", \"\"));\n\n    if (!!props.attdData) {\n      alert(attdTypeName.value + \" 기록이 완료 되었습니다.\");\n    }\n  };\n\n  const onRowSelected = e => {\n    setDelData(e.api.getSelectedRows());\n  };\n\n  const deleteDayAttd = () => {\n    console.log(delData);\n\n    if (delData.length === 0) {\n      alert(\"삭제할 항목을 체크해 주세요\");\n    } else {\n      props.deleteDayAttdStart({\n        data: delData\n      });\n      alert(\"선택한 항목이 삭제 되었습니다.\");\n      deleteGridList.updateRowData({\n        remove: delData\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui primary segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"\\uC77C\\uADFC\\uD0DC \\uC870\\uD68C / \\uAE30\\uB85D\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 8,\n    alignContent: \"center\",\n    justify: \"center\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.leftPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    className: classes.subCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"\\uC77C\\uADFC\\uD0DC \\uAE30\\uB85D\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uC801\\uC6A9\\uC77C\\uC790\",\n    type: \"date\",\n    defaultValue: applyDay,\n    onChange: e => {\n      setApplyDay(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    id: \"time\",\n    label: \"\\uC2DC\\uAC04\",\n    type: \"time\",\n    defaultValue: time,\n    color: \"secondary\",\n    margin: \"dense\",\n    onChange: e => {\n      setTime(e.target.value.replace(\":\", \"\")); //\"0900\"\n    },\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(CustomizedSelects, {\n    className: classes.combo,\n    attdType: attdType,\n    attdTypeName: attdTypeName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: searchDayAttd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\"), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: insertDayAttd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"\\uAE30\\uB85D\\uD558\\uAE30\"))))), React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    alignContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.rightPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    className: classes.subCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"\\uC77C\\uADFC\\uD0DC \\uC870\\uD68C\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: deleteDayAttd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ag-theme-material\" //skipHeaderOnAutoSize=\"true\"\n    ,\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: column.columnDefs,\n    rowData: props.attdData,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    onRowSelected: onRowSelected,\n    onGridSizeChanged: event => {\n      event.api.sizeColumnsToFit();\n    },\n    onGridReady: event => {\n      event.api.sizeColumnsToFit();\n      setDeleteGridList(event.api);\n    },\n    rowSelection: \"multiple\" //여러개선택가능\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })))))));\n};\n\nexport default DayAttdGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/attendance/page/DayAttendance/DayAttdGrid.js"],"names":["React","useEffect","useState","GridStyle","useInput","CustomizedSelects","moment","Paper","TextField","Button","Grid","AppBar","Typography","Toolbar","AgGridReact","DayAttdGrid","props","empCode","sessionStorage","getItem","classes","thisTime","format","today","applyDay","setApplyDay","attdType","attdTypeName","time","setTime","delData","setDelData","deleteGridList","setDeleteGridList","column","columnDefs","headerName","field","hide","sortable","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","checkboxSelection","console","log","handleDayAttd","searchDayAttd","insertDayAttd","value","alert","handleInsertDayAttd","replace","attdData","onRowSelected","e","api","getSelectedRows","deleteDayAttd","length","deleteDayAttdStart","data","updateRowData","remove","leftPaper","subCategory","target","textField","shrink","combo","button","rightPaper","height","width","textAlign","param","event","sizeColumnsToFit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GridStyle from \"./GridStyle\";\nimport useInput from \"util/useInput\";\nimport \"./App.css\";\nimport CustomizedSelects from \"./Combo\";\nimport moment from \"moment\";\nimport {\n  Paper,\n  TextField,\n  Button,\n  Grid,\n  AppBar,\n  Typography,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\n//===========================재영 일근태 기록/조회 20-08-27======================//\nconst DayAttdGrid = props => {\n\n  // sessionStorage.getItem 모든값을 문자로 저장\n  const empCode = sessionStorage.getItem(\"empCodeInfo_token\");\n  // Grid\n  const classes = GridStyle();\n  // 현재시간\n  let thisTime = moment().format(\"HH:mm\");\n  // 오늘 날짜\n  let today = moment().format(\"YYYY-MM-DD\");\n  // 적용일\n  const [applyDay, setApplyDay] = useState(today);\n  // 근태구분코드\n  const attdType = useInput();\n  // 근태구분명\n  const attdTypeName = useInput();\n  // 출퇴근시간\n  const [time, setTime] = useState(thisTime);\n\n  const [delData, setDelData] = useState([]);\n\n  const [deleteGridList, setDeleteGridList] = useState(null);\n\n  const column = {\n    columnDefs: [\n      { headerName: \"사원코드\", field: \"empCode\", hide: true }, // 숨기기\n      { headerName: \"일련번호\", field: \"dayAttdCode\", hide: true },\n      {\n        headerName: \"적용일\",\n        field: \"applyDay\",\n        sortable: true,\n        headerCheckboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        checkboxSelection: true,\n      }, //체크박스창\n      { headerName: \"근태구분코드\", field: \"attdTypeCode\", hide: true },\n      { headerName: \"근태구분명\", field: \"attdTypeName\" },\n      { headerName: \"출/퇴근\", field: \"time\" },\n    ],\n  };\n\n  useEffect(() => {\n    console.log(applyDay + \"dddddddd\" + empCode);\n    props.handleDayAttd(applyDay, empCode);\n  }, []);\n\n  const searchDayAttd = () => {\n    props.handleDayAttd(applyDay, empCode);\n  };\n\n  const insertDayAttd = () => {\n    if (!attdType.value) {\n      alert(\"근태구분을 선택 해주세요.\");\n    }\n    props.handleInsertDayAttd(\n      empCode,\n      applyDay,\n      attdType.value,\n      attdTypeName.value,\n      time.replace(\":\", \"\"),\n    );\n    if (!!props.attdData) {\n      alert(attdTypeName.value + \" 기록이 완료 되었습니다.\");\n    }\n  };\n\n  const onRowSelected = e => {\n    setDelData(e.api.getSelectedRows());\n  };\n\n  const deleteDayAttd = () => {\n    console.log(delData);\n    if (delData.length === 0) {\n      alert(\"삭제할 항목을 체크해 주세요\");\n    } else {\n      props.deleteDayAttdStart({ data: delData });\n      alert(\"선택한 항목이 삭제 되었습니다.\");\n      deleteGridList.updateRowData({ remove: delData });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"ui primary segment\">\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <Typography component=\"h2\" variant=\"h4\">\n              일근태 조회 / 기록\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <br />\n      <br />\n      <div>\n        <Grid\n          container\n          spacing={8}\n          alignContent=\"center\"\n          justify=\"center\"\n          alignItems=\"baseline\"\n        >\n          <Grid item xs={3}>\n            <Paper className={classes.leftPaper}>\n              <AppBar position=\"relative\" className={classes.subCategory}>\n                <Toolbar>\n                  <Typography variant=\"h5\">일근태 기록</Typography>\n                </Toolbar>\n              </AppBar>\n              <br />\n              <br />\n              <br />\n              <br />\n              <form>\n                <TextField\n                  id=\"requestDate\"\n                  label=\"적용일자\"\n                  type=\"date\"\n                  defaultValue={applyDay}\n                  onChange={e => {\n                    setApplyDay(e.target.value);\n                  }}\n                  className={classes.textField}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <br />\n                <br />\n                <TextField\n                  variant=\"outlined\"\n                  id=\"time\"\n                  label=\"시간\"\n                  type=\"time\"\n                  defaultValue={time}\n                  color=\"secondary\"\n                  margin=\"dense\"\n                  onChange={e => {\n                    setTime(e.target.value.replace(\":\", \"\")); //\"0900\"\n                  }}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                ></TextField>\n                <br />\n                <br />\n                <CustomizedSelects\n                  className={classes.combo}\n                  attdType={attdType}\n                  attdTypeName={attdTypeName}\n                ></CustomizedSelects>\n                <br />\n                <br />\n                <div align=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={searchDayAttd}\n                  >\n                    조회\n                  </Button>\n                  <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={insertDayAttd}\n                  >\n                    기록하기\n                  </Button>\n                </div>\n              </form>\n            </Paper>\n          </Grid>\n          <Grid item xs={7} alignContent={\"center\"}>\n            <Paper className={classes.rightPaper}>\n              <AppBar position=\"relative\" className={classes.subCategory}>\n                <Toolbar>\n                  <Typography variant=\"h5\">일근태 조회</Typography>\n                </Toolbar>\n              </AppBar>\n              <br />\n              <div align=\"center\">\n                <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={deleteDayAttd}\n                >\n                  삭제하기\n                </Button>\n              </div>\n              <br />\n              <div\n                className={\"ag-theme-material\"}\n                //skipHeaderOnAutoSize=\"true\"\n                enableColResize=\"true\"\n                enableSorting=\"true\"\n                enableFilter=\"true\"\n                enableRangeSelection=\"true\"\n                rowStyle={{ \"text-align\": \"center\" }}\n                style={{\n                  height: \"500px\",\n                  width: \"100%\",\n                }}\n                cellStyle={{ textAlign: \"center\" }}\n              >\n                <AgGridReact\n                  columnDefs={column.columnDefs}\n                  rowData={props.attdData}\n                  getRowStyle={function (param) {\n                    return { \"text-align\": \"center\" };\n                  }}\n                  onRowSelected={onRowSelected}\n                  onGridSizeChanged={event => {\n                    event.api.sizeColumnsToFit();\n                  }}\n                  onGridReady={event => {\n                    event.api.sizeColumnsToFit();\n                    setDeleteGridList(event.api);\n                  }}\n                  rowSelection=\"multiple\" //여러개선택가능\n                />\n              </div>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DayAttdGrid;\n"]},"metadata":{},"sourceType":"module"}