{"ast":null,"code":"import axios from 'api/logiApi';\nexport const inspection = param => axios.put(\"/purchase/inspection\", {\n  sendData: param\n}, {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const getBomDeploy = async param => {\n  const result = await axios.get('/purchase/searchBomDeploy', {\n    params: {\n      deployCondition: param.deployCondition,\n      itemCode: param.itemCode,\n      itemClassificationCondition: param.divisionCode\n    }\n  });\n  return result.data;\n};\nexport const getBomDeployRegist = async param => {\n  const result = await axios.get(\"/purchase/searchBomInfo\", {\n    params: {\n      parentItemCode: param\n    }\n  });\n  return result.data;\n};\nexport const getDetailCode = async param => {\n  const result = await axios.get('/base/codeList', {\n    params: {\n      divisionCode: param\n    }\n  });\n  return result.data;\n};\nexport const batchBom = async param => {\n  const result = await axios.post(\"/purchase/batchBomListProcess\", {\n    batchList: JSON.stringify(param)\n  });\n  return result.data;\n};\nexport const optionOrderDialog = async () => {\n  const result = await axios.get('/base/getOptionItemList');\n  return result.data;\n};\nexport const onClickOptionOrder = async params => {\n  const result = await axios.get('/purchase/optionOrder', {\n    params: {\n      itemCode: params.itemCode,\n      itemAmount: params.itemAmount\n    }\n  });\n  return result.data;\n};\nexport const onClickGetOrderList = async params => {\n  const result = await axios.get('/purchase/getOrderList', {\n    params: {\n      startDate: params.startDate,\n      endDate: params.endDate\n    }\n  });\n  return result.data;\n};\nexport const onClickOrderOpen = async param => {\n  const result = await axios.get('/purchase/showOrderDialog', {\n    params: {\n      mrpGatheringNoList: param.mrpGatheringNoList\n    }\n  });\n  return result.data;\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/purchase/api/index.js"],"names":["axios","inspection","param","put","sendData","headers","getBomDeploy","result","get","params","deployCondition","itemCode","itemClassificationCondition","divisionCode","data","getBomDeployRegist","parentItemCode","getDetailCode","batchBom","post","batchList","JSON","stringify","optionOrderDialog","onClickOptionOrder","itemAmount","onClickGetOrderList","startDate","endDate","onClickOrderOpen","mrpGatheringNoList"],"mappings":"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","sourcesContent":["import axios from 'api/logiApi';\n\nexport const inspection = (param) =>\n    axios.put(\"/purchase/inspection\", \n    { sendData: param },\n    {  headers: {  \"Content-Type\": \"application/json\" }},\n    );\n\n\n    export const getBomDeploy =\n    async (param) => {\n    const result = await axios.get(\n        '/purchase/searchBomDeploy', {\n            params : {\n                deployCondition: param.deployCondition,\n                itemCode: param.itemCode,\n                itemClassificationCondition: param.divisionCode,\n            }\n        }\n    )\n    return result.data;\n    }\n\n\n    export const getBomDeployRegist =\nasync (param) => {\nconst result = await axios.get(\"/purchase/searchBomInfo\", {\n    params: {\n        parentItemCode: param\n    },\n})\nreturn result.data;\n}\n\nexport const getDetailCode =\nasync (param) => {\nconst result = await axios.get(\n    '/base/codeList', {\n        params: {\n            divisionCode: param\n        }\n    }\n)\nreturn result.data;\n}\n\nexport const batchBom =\nasync (param) => {\nconst result = await axios.post(\n    \"/purchase/batchBomListProcess\",\n    {\n        batchList: JSON.stringify(param)\n    }\n)\nreturn result.data;\n}\n\nexport const optionOrderDialog =\nasync () => {\nconst result = await axios.get('/base/getOptionItemList')\nreturn result.data;\n}\n\nexport const onClickOptionOrder =\nasync (params) => {\nconst result = await axios.get('/purchase/optionOrder', {\n    params: {\n        itemCode: params.itemCode,\n        itemAmount: params.itemAmount\n    }\n})\nreturn result.data;\n}\n\nexport const onClickGetOrderList =\nasync (params) => {\nconst result = await axios\n.get('/purchase/getOrderList', {\n    params: {\n        startDate: params.startDate,\n        endDate: params.endDate\n    }\n})\nreturn result.data;\n}\n\nexport const onClickOrderOpen =\nasync (param) => {\nconst result = await axios\n.get('/purchase/showOrderDialog', {\n    params: {\n        mrpGatheringNoList: param.mrpGatheringNoList\n    }\n})\nreturn result.data;\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}