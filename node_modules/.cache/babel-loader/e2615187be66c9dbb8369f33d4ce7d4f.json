{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\account\\\\account\\\\page\\\\Slip\\\\SalaryAndDelivery\\\\Delivery.js\";\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DELIVERY_COMPLETE_REQUEST } from 'erp/logistic/sales/action/SalesActionType';\nimport { List, DialogActions, Button } from '@material-ui/core';\n/*##################################### 2021-06-15 납품현황 PGW #######################################*/\n\nconst Delivery = props => {\n  const [positionGridApi, setPositionGridApi] = React.useState();\n  const dispatch = useDispatch();\n  const deliveryCompleteData = useSelector(({\n    logistic\n  }) => logistic.Sales.deliveryCompleteData, []);\n  const [deliveryList, setDeliveryList] = useState([{\n    journalNo: 'NEW JOURNAL',\n    // 여기서 분개 번호가 만들어짐.\n    slipNo: 'NEW',\n    balanceDivision: '대변',\n    accountCode: '0401',\n    //납품 상품매출.\n    accountName: '상품매출',\n    customerCode: '',\n    leftDebtorPrice: 0,\n    // 차변\n    rightCreditsPrice: '' // 대변\n\n  }, {\n    journalNo: 'NEW JOURNAL',\n    slipNo: 'NEW',\n    balanceDivision: '차변',\n    accountCode: '0101',\n    //급여에 대한 현금\n    accountName: '현금',\n    customerCode: '',\n    leftDebtorPrice: '',\n    // 차변\n    rightCreditsPrice: 0 // 대변\n\n  }]);\n\n  const onGridReady = params => {\n    setPositionGridApi(params.api);\n    params.api.sizeColumnsToFit(); // 칼럼 사이즈 자동조절\n  };\n\n  const column = {\n    accountColumnDefs: [{\n      width: '50',\n      headerCheckboxSelection: true,\n      checkboxSelection: true\n    }, {\n      headerName: '납품일련번호',\n      field: 'deliveryNo',\n      width: 140\n    }, {\n      headerName: '견적일련번호',\n      field: 'estimateNo',\n      width: 140,\n      hide: true\n    }, {\n      headerName: '수주일련번호',\n      field: 'contractNo',\n      width: 140,\n      hide: true\n    }, {\n      headerName: '수주상세일련번호',\n      field: 'contractDetailNo',\n      width: 170,\n      hide: true\n    }, {\n      headerName: '거래처코드',\n      field: 'customerCode',\n      width: 100,\n      hide: true\n    }, {\n      headerName: '처리자코드',\n      field: 'personCodeInCharge',\n      width: 100\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode',\n      width: 120\n    }, {\n      headerName: '품목명',\n      field: 'itemName',\n      width: 200\n    }, {\n      headerName: '단위',\n      field: 'unitOfDelivery',\n      width: 80\n    }, {\n      headerName: '납품수량',\n      field: 'deliveryAmount',\n      width: 80\n    }, {\n      headerName: '단가',\n      field: 'unitPrice',\n      width: 90,\n      valueFormatter: currencyFormatter\n    }, {\n      headerName: '총액',\n      field: 'sumPrice',\n      width: 100,\n      valueFormatter: currencyFormatter\n    }, {\n      headerName: '납품날짜',\n      field: 'deliverydate',\n      width: 150\n    }, {\n      headerName: '배송지',\n      field: 'deliveryPlaceName',\n      width: 120\n    }, {\n      headerName: '마감여부',\n      field: 'finalizeStatus',\n      width: 100\n    }, {\n      headerName: '상태',\n      field: 'status',\n      width: 100,\n      hide: true\n    }, {\n      headerName: '에러메세지',\n      field: 'errorMsg',\n      width: 100,\n      hide: true\n    }, {\n      headerName: '에러코드',\n      field: 'errorCode',\n      width: 100,\n      hide: true\n    }, {\n      headerName: 'chk',\n      field: 'chk',\n      width: 100,\n      hide: true\n    }],\n    autoGroupColumnDef: {\n      minWidth: 100\n    }\n  };\n\n  const selectData = async () => {\n    await dispatch({\n      type: DELIVERY_COMPLETE_REQUEST,\n      payload: {}\n    });\n  };\n\n  function currencyFormatter(params) {\n    return formatNumber(params.value) + ' 원';\n  }\n\n  function formatNumber(number) {\n    return Math.floor(number).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  const SumDelivery = () => {\n    const deliveryRows = positionGridApi.getSelectedRows();\n    var sumPrice = 0;\n\n    if (deliveryRows.length === 0) {\n      alert('선택된 값이 없습니다');\n      return;\n    }\n\n    console.log(deliveryRows[0].finalizeStatus);\n\n    for (var i = 0; i < deliveryRows.length; i++) {\n      if (deliveryRows[i].finalizeStatus === 'Y') {\n        alert('마감여부 확인 바랍니다');\n        return;\n      }\n\n      console.log('deliveryRows[i].sumPrice', deliveryRows[i].sumPrice);\n      sumPrice += parseInt(deliveryRows[i].sumPrice);\n    }\n\n    const newJournal = deliveryList.map((journalState, index) => {\n      switch (index) {\n        case 0:\n          return { ...journalState,\n            customerCode: deliveryRows[0].customerCode,\n            rightCreditsPrice: sumPrice\n          };\n\n        case 1:\n          return { ...journalState,\n            customerCode: deliveryRows[0].customerCode,\n            leftDebtorPrice: sumPrice\n          };\n\n        default:\n          return { ...journalState\n          };\n      }\n    });\n    props.close({\n      newJournal,\n      deliveryRows,\n      division: 'Delivery'\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    Align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    startIcon: React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) //아이콘\n    ,\n    onClick: selectData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"\\uB0A9\\uD488 \\uD604\\uD669 \\uC870\\uD68C\")), React.createElement(\"div\", {\n    className: 'ag-theme-material' //그리드 모양\n    ,\n    style: {\n      height: '540px',\n      width: '100%',\n      paddingTop: '8px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: column.accountColumnDefs //컬럼명\n    ,\n    rowSelection: \"multiple\",\n    getRowStyle: function (param) {\n      return {\n        'text-align': 'center'\n      };\n    } //body 가운데 정렬\n    ,\n    onGridReady: onGridReady,\n    autoGroupColumnDef: column.autoGroupColumnDef,\n    rowData: deliveryCompleteData,\n    suppressRowClickSelection: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    onClick: SumDelivery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"\\uB0A9\\uD488\\uB9C8\\uAC10\"))));\n};\n\nexport default Delivery;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/account/account/page/Slip/SalaryAndDelivery/Delivery.js"],"names":["React","useEffect","useState","SearchIcon","AgGridReact","useDispatch","useSelector","DELIVERY_COMPLETE_REQUEST","List","DialogActions","Button","Delivery","props","positionGridApi","setPositionGridApi","dispatch","deliveryCompleteData","logistic","Sales","deliveryList","setDeliveryList","journalNo","slipNo","balanceDivision","accountCode","accountName","customerCode","leftDebtorPrice","rightCreditsPrice","onGridReady","params","api","sizeColumnsToFit","column","accountColumnDefs","width","headerCheckboxSelection","checkboxSelection","headerName","field","hide","valueFormatter","currencyFormatter","autoGroupColumnDef","minWidth","selectData","type","payload","formatNumber","value","number","Math","floor","toString","replace","SumDelivery","deliveryRows","getSelectedRows","sumPrice","length","alert","console","log","finalizeStatus","i","parseInt","newJournal","map","journalState","index","close","division","height","paddingTop","param"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DELIVERY_COMPLETE_REQUEST } from 'erp/logistic/sales/action/SalesActionType';\nimport { List, DialogActions, Button } from '@material-ui/core';\n\n\n/*##################################### 2021-06-15 납품현황 PGW #######################################*/\n\nconst Delivery = props => {\n    const [positionGridApi, setPositionGridApi] = React.useState();\n    const dispatch = useDispatch();\n\n\n    const deliveryCompleteData = useSelector(\n        ({ logistic }) => logistic.Sales.deliveryCompleteData,\n    [],);\n\n    const [deliveryList, setDeliveryList] = useState([\n        {\n            journalNo: 'NEW JOURNAL', // 여기서 분개 번호가 만들어짐.\n            slipNo: 'NEW',\n            balanceDivision: '대변',\n            accountCode: '0401', //납품 상품매출.\n            accountName: '상품매출',\n            customerCode: '',\n            leftDebtorPrice: 0, // 차변\n            rightCreditsPrice: '' // 대변\n        },\n        {\n            journalNo: 'NEW JOURNAL',\n            slipNo: 'NEW',\n            balanceDivision: '차변',\n            accountCode: '0101', //급여에 대한 현금\n            accountName: '현금',\n            customerCode: '',\n            leftDebtorPrice: '', // 차변\n            rightCreditsPrice: 0 // 대변\n        }\n    ]);\n\n    const onGridReady = params => {\n        setPositionGridApi(params.api);\n        params.api.sizeColumnsToFit(); // 칼럼 사이즈 자동조절\n    };\n    const column = {\n        accountColumnDefs: [\n            { width: '50', headerCheckboxSelection: true, checkboxSelection: true },\n            { headerName: '납품일련번호', field: 'deliveryNo', width: 140 },\n            { headerName: '견적일련번호', field: 'estimateNo', width: 140, hide: true },\n            { headerName: '수주일련번호', field: 'contractNo', width: 140, hide: true },\n            { headerName: '수주상세일련번호', field: 'contractDetailNo', width: 170, hide: true },\n            { headerName: '거래처코드', field: 'customerCode', width: 100, hide: true },\n            { headerName: '처리자코드', field: 'personCodeInCharge', width: 100 },\n            { headerName: '품목코드', field: 'itemCode', width: 120 },\n            { headerName: '품목명', field: 'itemName', width: 200 },\n            { headerName: '단위', field: 'unitOfDelivery', width: 80 },\n            { headerName: '납품수량', field: 'deliveryAmount', width: 80 },\n            {\n                headerName: '단가',\n                field: 'unitPrice',\n                width: 90,\n                valueFormatter: currencyFormatter\n            },\n            {\n                headerName: '총액',\n                field: 'sumPrice',\n                width: 100,\n                valueFormatter: currencyFormatter\n            },\n            { headerName: '납품날짜', field: 'deliverydate', width: 150 },\n            { headerName: '배송지', field: 'deliveryPlaceName', width: 120 },\n            { headerName: '마감여부', field: 'finalizeStatus', width: 100 },\n            { headerName: '상태', field: 'status', width: 100 , hide:true},\n            { headerName: '에러메세지', field: 'errorMsg', width: 100 , hide:true},\n            { headerName: '에러코드', field: 'errorCode', width: 100 , hide:true},\n            { headerName: 'chk', field: 'chk', width: 100 , hide:true},\n        ],\n        autoGroupColumnDef: { minWidth: 100 }\n    };\n    \n    const selectData = async () => {\n        await dispatch({\n            type: DELIVERY_COMPLETE_REQUEST,\n            payload: {}\n        });\n    };\n\n    function currencyFormatter(params) {\n        return formatNumber(params.value) + ' 원';\n    }\n\n    function formatNumber(number) {\n        return Math.floor(number)\n            .toString()\n            .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    }\n\n    const SumDelivery = () => {\n        const deliveryRows = positionGridApi.getSelectedRows();\n\n        var sumPrice = 0;\n\n        if (deliveryRows.length === 0) {\n            alert('선택된 값이 없습니다');\n            return;\n        }\n        console.log(deliveryRows[0].finalizeStatus);\n\n        for (var i = 0; i < deliveryRows.length; i++) {\n            if (deliveryRows[i].finalizeStatus === 'Y') {\n                alert('마감여부 확인 바랍니다');\n                return;\n            }\n            console.log('deliveryRows[i].sumPrice', deliveryRows[i].sumPrice);\n            sumPrice += parseInt(deliveryRows[i].sumPrice);\n        }\n        const newJournal = deliveryList.map((journalState, index) => {\n            switch (index) {\n                case 0:\n                    return {\n                        ...journalState,\n                        customerCode: deliveryRows[0].customerCode,\n                        rightCreditsPrice: sumPrice\n                    };\n\n                case 1:\n                    return {\n                        ...journalState,\n                        customerCode: deliveryRows[0].customerCode,\n                        leftDebtorPrice: sumPrice\n                    };\n\n                default:\n                    return { ...journalState };\n            }\n        });\n\n        props.close({\n            newJournal,\n            deliveryRows,\n            division: 'Delivery'\n        });\n    };\n\n    return (\n        <div>\n            <List>\n                <div Align=\"center\">\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        startIcon={<SearchIcon />} //아이콘\n                        onClick={selectData}\n                    >\n                        납품 현황 조회\n                    </Button>\n                </div>\n                <div\n                    className={'ag-theme-material'} //그리드 모양\n                    style={{\n                        height: '540px',\n                        width: '100%',\n\n                        paddingTop: '8px'\n                    }}\n                >\n                    <AgGridReact\n                        columnDefs={column.accountColumnDefs} //컬럼명\n                        rowSelection=\"multiple\"\n                        getRowStyle={function(param) {\n                            return { 'text-align': 'center' };\n                        }} //body 가운데 정렬\n                        onGridReady={onGridReady}\n                        autoGroupColumnDef={column.autoGroupColumnDef}\n                        rowData={deliveryCompleteData}\n                        suppressRowClickSelection={true}\n                    />\n                </div>\n            </List>\n            <div>\n                <DialogActions>\n                    <Button variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={SumDelivery}>\n                        납품마감\n                    </Button>\n                </DialogActions>\n            </div>\n        </div>\n    );\n};\n\nexport default Delivery;\n"]},"metadata":{},"sourceType":"module"}