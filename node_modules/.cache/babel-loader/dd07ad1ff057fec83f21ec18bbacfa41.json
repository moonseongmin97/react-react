{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\logistic\\\\production\\\\page\\\\MRP\\\\MrpDialog.js\";\nimport React, { useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport mrpListColumn from './MRPColumn';\nimport UseStyles from './UseStyles';\nimport { TextField, Button } from '@material-ui/core';\nimport useInput from 'util/useInput';\nimport { today } from 'erp/hr/util/lib';\n\nconst MrpDialog = ({\n  checkData,\n  setCheckData,\n  searchMrpList,\n  MrpSimulatorList,\n  MrpRegisterList,\n  mrpRegisterGridApi\n}) => {\n  const fromDate = useInput(today);\n  const classes = UseStyles();\n  const [mrpDataList, setMrpDataList] = useState(MrpSimulatorList);\n  const [gridApi, setGridApi] = useState(null);\n  console.log(mrpDataList);\n  useEffect(() => {\n    const size = checkData.length;\n\n    for (let a = 0; a < size; a++) {\n      var mpsNo = checkData[a].mpsNo;\n    }\n\n    searchMrpList({\n      mpsNoListStr: mpsNo\n    });\n    setCheckData(null);\n  }, []);\n\n  const onClickMrpInsert = () => {\n    gridApi.selectAll();\n    var selectedData = gridApi.getSelectedRows();\n    MrpRegisterList({\n      mrpRegisterDate: fromDate.value,\n      batchList: MrpSimulatorList\n    });\n    console.log(selectedData);\n    gridApi.updateRowData({\n      remove: selectedData\n    });\n    mrpRegisterGridApi.setRowData([]);\n  };\n\n  const Grind = prams => {\n    setGridApi(prams.api);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: mrpListColumn,\n    title: 'MRP  SIMULATION',\n    list: MrpSimulatorList,\n    api: Grind,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"grid-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: 'fromDate',\n    label: '소요량 전개일자',\n    type: 'date',\n    defaultValue: fromDate.value,\n    onChange: fromDate.onChange,\n    className: classes.textField,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '2vh'\n    },\n    onClick: onClickMrpInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\uC804\\uAC1C \\uACB0\\uACFC MRP\\uB4F1\\uB85D\"))));\n};\n\nexport default MrpDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/logistic/production/page/MRP/MrpDialog.js"],"names":["React","useEffect","useState","MyGrid","mrpListColumn","UseStyles","TextField","Button","useInput","today","MrpDialog","checkData","setCheckData","searchMrpList","MrpSimulatorList","MrpRegisterList","mrpRegisterGridApi","fromDate","classes","mrpDataList","setMrpDataList","gridApi","setGridApi","console","log","size","length","a","mpsNo","mpsNoListStr","onClickMrpInsert","selectAll","selectedData","getSelectedRows","mrpRegisterDate","value","batchList","updateRowData","remove","setRowData","Grind","prams","api","onChange","textField","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport mrpListColumn from './MRPColumn';\nimport UseStyles from './UseStyles';\nimport { TextField, Button } from '@material-ui/core';\nimport useInput from 'util/useInput';\nimport { today } from 'erp/hr/util/lib';\n\nconst MrpDialog = ({ checkData, setCheckData, searchMrpList, MrpSimulatorList, MrpRegisterList, mrpRegisterGridApi }) => {\n    const fromDate = useInput(today);\n    const classes = UseStyles();\n    const [mrpDataList, setMrpDataList] = useState(MrpSimulatorList);\n    const [gridApi, setGridApi] = useState(null);\n    console.log(mrpDataList);\n\n    useEffect(() => {\n\n        const size = checkData.length;\n        for (let a = 0; a < size; a++) {\n            var mpsNo = checkData[a].mpsNo;\n        }\n\n        searchMrpList({ mpsNoListStr: mpsNo });\n\n        setCheckData(null);\n    }, []);\n\n    const onClickMrpInsert = () => {\n        gridApi.selectAll();\n        var selectedData = gridApi.getSelectedRows();\n\n        MrpRegisterList({ mrpRegisterDate: fromDate.value, batchList: MrpSimulatorList });\n\n        console.log(selectedData);\n\n        gridApi.updateRowData({ remove: selectedData });\n\n        mrpRegisterGridApi.setRowData([]);\n    };\n\n    const Grind = prams => {\n        \n        setGridApi(prams.api);\n    };\n\n    return (\n        <>\n            <MyGrid\n                column={mrpListColumn}\n                title={'MRP  SIMULATION'}\n                list={MrpSimulatorList}\n                api={Grind}\n            >\n                <div id=\"grid-wrapper\">\n                    <TextField\n                        id={'fromDate'}\n                        label={'소요량 전개일자'}\n                        type={'date'}\n                        defaultValue={fromDate.value}\n                        onChange={fromDate.onChange}\n                        className={classes.textField}\n                        variant=\"outlined\"\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ marginRight: '1vh', marginTop: '2vh' }}\n                        onClick={onClickMrpInsert}\n                    >\n                        전개 결과 MRP등록\n                    </Button>\n                </div>\n            </MyGrid>\n        </>\n    );\n};\n\nexport default MrpDialog;\n"]},"metadata":{},"sourceType":"module"}