{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\sales\\\\page\\\\Estimate\\\\EstimateRegister\\\\Presentational\\\\CustomerDialog.js\";\nimport Axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport * as api from 'erp/logistic/sales/api';\nimport useAsync from 'util/useAsync';\n\nconst CustomerDialog = props => {\n  const [list, setList] = useState([]);\n  const column = {\n    columnDefs: [{\n      headerName: '상세코드번호',\n      field: 'customerCode',\n      width: 100\n    }, {\n      headerName: '상세코드이름',\n      field: 'customerName',\n      width: 100\n    }]\n  };\n  const [customer, searchCustomerFetch] = useAsync(() => api.searchCustomer(), [], false);\n\n  const onCellClicked = params => {\n    //console.log(params.data);\n    props.onCellClicked(params);\n    props.close();\n  };\n  /*\n  useEffect(() => {\n      Axios.get('http://localhost:8282/hr/basicInfo/searchCustomer', {\n          params: {\n              searchCondition: 'ALL',\n              workplaceCode: ''\n          }\n      })\n          .then(response => {\n              setList(response.data.gridRowJson);\n              console.log(response.data.gridRowJson);\n          })\n          .catch(e => {\n              console.log(e);\n          });\n  }, []);\n  */\n\n\n  return React.createElement(MyGrid, {\n    style: {\n      height: '10vh'\n    },\n    column: column,\n    title: '거래처 검색',\n    list: customer.data ? customer.data.gridRowJson : null,\n    onCellClicked: onCellClicked,\n    rowSelection: \"single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};\n\nexport default CustomerDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/sales/page/Estimate/EstimateRegister/Presentational/CustomerDialog.js"],"names":["Axios","React","useCallback","useEffect","useState","MyGrid","api","useAsync","CustomerDialog","props","list","setList","column","columnDefs","headerName","field","width","customer","searchCustomerFetch","searchCustomer","onCellClicked","params","close","height","data","gridRowJson"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMQ,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CACR;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE,cAA/B;AAA+CC,MAAAA,KAAK,EAAE;AAAtD,KADQ,EAER;AAAEF,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE,cAA/B;AAA+CC,MAAAA,KAAK,EAAE;AAAtD,KAFQ;AADD,GAAf;AAOA,QAAM,CAACC,QAAD,EAAWC,mBAAX,IAAkCX,QAAQ,CAAC,MAAKD,GAAG,CAACa,cAAJ,EAAN,EAA4B,EAA5B,EAAgC,KAAhC,CAAhD;;AACA,QAAMC,aAAa,GAAGC,MAAM,IAAI;AAC5B;AACAZ,IAAAA,KAAK,CAACW,aAAN,CAAoBC,MAApB;AACAZ,IAAAA,KAAK,CAACa,KAAN;AACH,GAJD;AAKA;;;;;;;;;;;;;;;;;;;AAiBA,SACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,MAAM,EAAEX,MAFZ;AAGI,IAAA,KAAK,EAAE,QAHX;AAII,IAAA,IAAI,EAAEK,QAAQ,CAACO,IAAT,GAAgBP,QAAQ,CAACO,IAAT,CAAcC,WAA9B,GAA4C,IAJtD;AAKI,IAAA,aAAa,EAAEL,aALnB;AAMI,IAAA,YAAY,EAAC,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CA1CD;;AA4CA,eAAeZ,cAAf","sourcesContent":["import Axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport * as api from 'erp/logistic/sales/api';\nimport useAsync from 'util/useAsync';\n\nconst CustomerDialog = props => {\n    const [list, setList] = useState([]);\n    const column = {\n        columnDefs: [\n            { headerName: '상세코드번호', field: 'customerCode', width: 100 },\n            { headerName: '상세코드이름', field: 'customerName', width: 100 }\n        ]\n    };\n\n    const [customer, searchCustomerFetch] = useAsync(() =>api.searchCustomer(), [], false);\n    const onCellClicked = params => {\n        //console.log(params.data);\n        props.onCellClicked(params);\n        props.close();\n    };\n    /*\n    useEffect(() => {\n        Axios.get('http://localhost:8282/hr/basicInfo/searchCustomer', {\n            params: {\n                searchCondition: 'ALL',\n                workplaceCode: ''\n            }\n        })\n            .then(response => {\n                setList(response.data.gridRowJson);\n                console.log(response.data.gridRowJson);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }, []);\n*/\n    return (\n        <MyGrid\n            style={{ height: '10vh' }}\n            column={column}\n            title={'거래처 검색'}\n            list={customer.data ? customer.data.gridRowJson : null}\n            onCellClicked={onCellClicked}\n            rowSelection=\"single\"\n        />\n    );\n};\n\nexport default CustomerDialog;\n"]},"metadata":{},"sourceType":"module"}