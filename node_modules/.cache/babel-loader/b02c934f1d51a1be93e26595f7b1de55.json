{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\base\\\\page\\\\ClientInfo\\\\FinanceClientInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { saveFinanInfo, searchFinanInfo } from 'erp/logistic/base/action/BasicInfoAction';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux'; //****************************2020-11-25 박미노****************************************** */\n\nfunction FinanceClientInfo(props) {\n  const [dataList, setDataList] = useState([]);\n  const [gridRow, setGridRow] = useState();\n  const dispatch = useDispatch();\n  const column = {\n    columnDefs: [{\n      headerName: '금융거래처 코드',\n      field: 'accountAssociatesCode',\n      headerCheckboxSelection: true,\n      headerCheckboxSelectionFilteredOnly: true,\n      checkboxSelection: true\n    }, {\n      headerName: '사업장코드',\n      field: 'workplaceCode',\n      width: 140,\n      editable: true\n    }, {\n      headerName: '금융거래처명',\n      field: 'accountAssociatesName',\n      width: 200,\n      editable: true\n    }, {\n      headerName: '금융거래처타입',\n      field: 'accountAssociatesType',\n      width: 130,\n      editable: true\n    }, {\n      headerName: '계좌번호',\n      field: 'accountNumber',\n      editable: true\n    }, {\n      headerName: '금융기관코드',\n      field: 'financialInstituteCode',\n      width: 100,\n      editable: true\n    }, {\n      headerName: '금융기관명',\n      field: 'financialInstituteName',\n      width: 100,\n      editable: true\n    }, {\n      headerName: '비고',\n      field: 'financialInstituteNote',\n      hide: true,\n      editable: true\n    }, {\n      headerName: 'status',\n      field: 'status'\n    }]\n  }; //***********************************2020-12-02 최지은 금융거래처 정보추가 & 일괄저장 **************************************************** */\n\n  useEffect(() => {\n    dispatch(searchFinanInfo({\n      searchCondition: 'ALL',\n      workplaceCode: ''\n    }));\n  }, []);\n  const FinanInfoList = useSelector(state => state.logistic.basicinfo.FinanInfoList);\n\n  const api = params => {\n    setGridRow(params.api);\n  }; //금융거래처 정보 추가\n\n\n  const addFinanInfo = () => {\n    gridRow.selectAll();\n    const newRow = newRowData();\n    gridRow.updateRowData({\n      add: [newRow],\n      addindex: ''\n    });\n    gridRow.deselectAll();\n  };\n\n  const newRowData = () => {\n    const newRow = {\n      workplaceCode: 'BRC-01',\n      accountAssociatesCode: '저장시 지정됨',\n      status: 'INSERT'\n    };\n    return newRow;\n  }; //셀편집시작\n\n\n  const onRowChange = params => {\n    console.log(params);\n\n    if (params.data.status === 'normal') {\n      params.data.status = 'UPDATE';\n    }\n  }; //일괄저장\n\n\n  const onSaveClick = () => {\n    const deleteRow = gridRow.getSelectedRows();\n\n    for (var a = 0; a < deleteRow.length; a++) {\n      deleteRow[a].status = 'DELETE';\n    }\n\n    gridRow.selectAll();\n    const rows = gridRow.getSelectedRows();\n    const rowCount = gridRow.getDisplayedRowCount();\n\n    if (!window.confirm('저장하시겠습니까?')) {\n      alert('취소되었습니다.');\n      gridRow.deselectAll();\n      return;\n    } else {\n      for (var i = 0; i < rowCount; i++) {\n        if (rows[i].accountAssociatesName === undefined || rows[i].accountAssociatesType === undefined) {\n          alert('금융거래처명과 거래처타입을 모두 입력해주세요.');\n          gridRow.deselectAll();\n          return;\n        }\n\n        delete rows[i].errorCode;\n        delete rows[i].errorMsg;\n        delete rows[i].chk;\n      }\n\n      dispatch(saveFinanInfo(rows));\n      gridRow.deselectAll();\n    }\n\n    dispatch(searchFinanInfo({\n      searchCondition: 'ALL',\n      workplaceCode: ''\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(MyGrid, {\n    column: column,\n    title: '금융 거래처',\n    list: FinanInfoList //onCellClicked={onCellClicked}\n    ,\n    rowSelection: \"multiple\",\n    api: api,\n    onCellEditingStarted: onRowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh'\n    },\n    onClick: addFinanInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\uAE08\\uC735\\uAC70\\uB798\\uCC98 \\uC815\\uBCF4 \\uCD94\\uAC00\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh'\n    },\n    onClick: onSaveClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\uC77C\\uAD04\\uC800\\uC7A5\")));\n}\n\nexport default FinanceClientInfo;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/base/page/ClientInfo/FinanceClientInfo.js"],"names":["React","useEffect","useState","MyGrid","saveFinanInfo","searchFinanInfo","axios","Button","useDispatch","useSelector","FinanceClientInfo","props","dataList","setDataList","gridRow","setGridRow","dispatch","column","columnDefs","headerName","field","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","checkboxSelection","width","editable","hide","searchCondition","workplaceCode","FinanInfoList","state","logistic","basicinfo","api","params","addFinanInfo","selectAll","newRow","newRowData","updateRowData","add","addindex","deselectAll","accountAssociatesCode","status","onRowChange","console","log","data","onSaveClick","deleteRow","getSelectedRows","a","length","rows","rowCount","getDisplayedRowCount","window","confirm","alert","i","accountAssociatesName","undefined","accountAssociatesType","errorCode","errorMsg","chk","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { saveFinanInfo, searchFinanInfo } from 'erp/logistic/base/action/BasicInfoAction';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n//****************************2020-11-25 박미노****************************************** */\n\nfunction FinanceClientInfo(props) {\n    const [dataList, setDataList] = useState([]);\n    const [gridRow, setGridRow] = useState();\n    const dispatch = useDispatch();\n\n    const column = {\n        columnDefs: [\n            {\n                headerName: '금융거래처 코드',\n                field: 'accountAssociatesCode',\n                headerCheckboxSelection: true,\n                headerCheckboxSelectionFilteredOnly: true,\n                checkboxSelection: true\n            },\n            { headerName: '사업장코드', field: 'workplaceCode', width: 140, editable: true },\n            {\n                headerName: '금융거래처명',\n                field: 'accountAssociatesName',\n                width: 200,\n                editable: true\n            },\n            {\n                headerName: '금융거래처타입',\n                field: 'accountAssociatesType',\n                width: 130,\n                editable: true\n            },\n            { headerName: '계좌번호', field: 'accountNumber', editable: true },\n            {\n                headerName: '금융기관코드',\n                field: 'financialInstituteCode',\n                width: 100,\n                editable: true\n            },\n            {\n                headerName: '금융기관명',\n                field: 'financialInstituteName',\n                width: 100,\n                editable: true\n            },\n            { headerName: '비고', field: 'financialInstituteNote', hide: true, editable: true },\n            { headerName: 'status', field: 'status' }\n        ]\n    };\n\n    //***********************************2020-12-02 최지은 금융거래처 정보추가 & 일괄저장 **************************************************** */\n\n    useEffect(() => {\n        dispatch(searchFinanInfo({ searchCondition: 'ALL', workplaceCode: '' }));\n    }, []);\n\n    const  FinanInfoList  = useSelector(state => state.logistic.basicinfo.FinanInfoList);\n\n    const api = params => {\n        setGridRow(params.api);\n    };\n\n    //금융거래처 정보 추가\n    const addFinanInfo = () => {\n        gridRow.selectAll();\n        const newRow = newRowData();\n        gridRow.updateRowData({ add: [newRow], addindex: '' });\n        gridRow.deselectAll();\n    };\n\n    const newRowData = () => {\n        const newRow = {\n            workplaceCode: 'BRC-01',\n            accountAssociatesCode: '저장시 지정됨',\n            status: 'INSERT'\n        };\n        return newRow;\n    };\n\n    //셀편집시작\n    const onRowChange = params => {\n        console.log(params);\n        if (params.data.status === 'normal') {\n            params.data.status = 'UPDATE';\n        }\n    };\n\n    //일괄저장\n    const onSaveClick = () => {\n        const deleteRow = gridRow.getSelectedRows();\n        for (var a = 0; a < deleteRow.length; a++) {\n            deleteRow[a].status = 'DELETE';\n        }\n\n        gridRow.selectAll();\n        const rows = gridRow.getSelectedRows();\n        const rowCount = gridRow.getDisplayedRowCount();\n\n        if (!window.confirm('저장하시겠습니까?')) {\n            alert('취소되었습니다.');\n            gridRow.deselectAll();\n            return;\n        } else {\n            for (var i = 0; i < rowCount; i++) {\n                if (\n                    rows[i].accountAssociatesName === undefined ||\n                    rows[i].accountAssociatesType === undefined\n                ) {\n                    alert('금융거래처명과 거래처타입을 모두 입력해주세요.');\n                    gridRow.deselectAll();\n                    return;\n                }\n                delete rows[i].errorCode;\n                delete rows[i].errorMsg;\n                delete rows[i].chk;\n            }\n            dispatch(saveFinanInfo(rows));\n            gridRow.deselectAll();\n        }\n        dispatch(searchFinanInfo({ searchCondition: 'ALL', workplaceCode: '' }));\n    };\n\n    return (\n        <>\n            <div></div>\n            <MyGrid\n                column={column}\n                title={'금융 거래처'}\n                list={FinanInfoList}\n                //onCellClicked={onCellClicked}\n                rowSelection=\"multiple\"\n                api={api}\n                onCellEditingStarted={onRowChange}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh' }}\n                    onClick={addFinanInfo}\n                >\n                    금융거래처 정보 추가\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh' }}\n                    onClick={onSaveClick}\n                >\n                    일괄저장\n                </Button>\n            </MyGrid>\n        </>\n    );\n}\n\nexport default FinanceClientInfo;\n"]},"metadata":{},"sourceType":"module"}