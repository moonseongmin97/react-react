{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\common\\\\page\\\\layout\\\\Header\\\\Header.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { AppBar, Toolbar, IconButton, InputBase, Menu, MenuItem, Fab //Tabs,\n//Tab\n} from '@material-ui/core';\nimport { Menu as MenuIcon, MailOutline as MailIcon, NotificationsNone as NotificationsIcon, Person as AccountIcon, Search as SearchIcon, Send as SendIcon, ArrowBack as ArrowBackIcon } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport Mapping from './Map/Mapping'; // styles\n\nimport useStyles from './styles'; // components\n\nimport { Badge, Typography } from 'util/StyleComponents/Wrappers/Wrappers';\nimport Notification from 'util/StyleComponents/Notification/Notification';\nimport UserAvatar from 'util/StyleComponents/UserAvatar/UserAvatar';\nimport * as types from 'common/reducer/commonReducer'; // darkMode\n\nimport { useThemeSwitcher } from 'mui-theme-switcher';\nimport Brightness3OutlinedIcon from '@material-ui/icons/Brightness3Outlined';\nimport Brightness7OutlinedIcon from '@material-ui/icons/Brightness7Outlined';\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function Header(props) {\n  var classes = useStyles();\n  const {\n    handleLogOut,\n    empInfo\n  } = props;\n  const dispatch = useDispatch();\n  const isSidebarOpened = useSelector(({\n    sideBarReducer\n  }) => sideBarReducer.isSidebarOpened, []); // local\n\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openMapping = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const {\n    dark,\n    toggleDark\n  } = useThemeSwitcher();\n  const icon = !dark ? React.createElement(Brightness3OutlinedIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : React.createElement(Brightness7OutlinedIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    style: {\n      backgroundColor: 'gray'\n    },\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: isSidebarOpened\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    style: {\n      backgroundColor: 'steelblue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: () => dispatch({\n      type: types.TOGGLE_SIDEBAR\n    }),\n    edge: \"start\",\n    className: clsx(classes.menuButton, isSidebarOpened && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    weight: \"medium\" //className={classes.logotype}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Seoul It ERP\"), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(IconButton //  맵 아이콘\n  , {\n    color: \"inherit\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"mail-menu\",\n    onClick: openMapping,\n    className: classes.headerMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(ExploreIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(Mapping, {\n    open: isModalOpen,\n    close: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"mail-menu\",\n    className: classes.headerMenuButton,\n    onClick: toggleDark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, icon), React.createElement(IconButton // 사람모양 아이콘\n  , {\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\",\n    className: classes.headerMenuButton,\n    \"aria-controls\": \"profile-menu\",\n    onClick: e => setProfileMenu(e.currentTarget),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(AccountIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(Menu // 메일 아이콘 누르면 나오는 메뉴\n  , {\n    id: \"mail-menu\",\n    open: Boolean(mailMenu),\n    anchorEl: mailMenu,\n    onClose: () => setMailMenu(null),\n    MenuListProps: {\n      className: classes.headerMenuList\n    },\n    className: classes.headerMenu,\n    classes: {\n      paper: classes.profileMenu\n    },\n    disableAutoFocusItem: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    weight: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"New Messages\"), React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    component: \"a\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, messages.length, \" New Messages\")), messages.map(message => React.createElement(MenuItem, {\n    key: message.id,\n    className: classes.messageNotification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.messageNotificationSide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    color: message.variant,\n    name: message.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, message.time)), React.createElement(\"div\", {\n    className: classNames(classes.messageNotificationSide, classes.messageNotificationBodySide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    weight: \"medium\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, message.name), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, message.message)))), React.createElement(Fab, {\n    variant: \"extended\",\n    color: \"primary\",\n    \"aria-label\": \"Add\",\n    className: classes.sendMessageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Send New Message\", React.createElement(SendIcon, {\n    className: classes.sendButtonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }))), React.createElement(Menu // 종모양 아이콘 누르면 나오는 메뉴\n  , {\n    id: \"notifications-menu\",\n    open: Boolean(notificationsMenu),\n    anchorEl: notificationsMenu,\n    onClose: () => setNotificationsMenu(null),\n    className: classes.headerMenu,\n    disableAutoFocusItem: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, notifications.map(notification => React.createElement(MenuItem, {\n    key: notification.id,\n    onClick: () => setNotificationsMenu(null),\n    className: classes.headerMenuItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(Notification, Object.assign({}, notification, {\n    typographyVariant: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }))))), React.createElement(Menu // 사람모양 아이콘 누르면 나오는 메뉴\n  , {\n    id: \"profile-menu\",\n    open: Boolean(profileMenu),\n    anchorEl: profileMenu,\n    onClose: () => setProfileMenu(null),\n    className: classes.headerMenu,\n    classes: {\n      paper: classes.profileMenu\n    },\n    disableAutoFocusItem: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    weight: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, empInfo.empName), React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    component: \"a\",\n    color: \"primary\",\n    href: \"https://flatlogic.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Flalogic.com\")), React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), \" Profile\"), React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }), \" Tasks\"), React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }), \" Messages\"), React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    color: \"primary\",\n    onClick: () => handleLogOut(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"Sign Out\"))))));\n}\nconst messages = [{\n  id: 0,\n  variant: 'warning',\n  name: 'Jane Hew',\n  message: 'Hey! How is it going?',\n  time: '9:32'\n}, {\n  id: 1,\n  variant: 'success',\n  name: 'Lloyd Brown',\n  message: 'Check out my new Dashboard',\n  time: '9:18'\n}, {\n  id: 2,\n  variant: 'primary',\n  name: 'Mark Winstein',\n  message: 'I want rearrange the appointment',\n  time: '9:15'\n}, {\n  id: 3,\n  variant: 'secondary',\n  name: 'Liana Dutti',\n  message: 'Good news from sale department',\n  time: '9:09'\n}];\nconst notifications = [{\n  id: 0,\n  color: 'warning',\n  message: 'Check out this awesome ticket'\n}, {\n  id: 1,\n  color: 'success',\n  type: 'info',\n  message: 'What is the best way to get ...'\n}, {\n  id: 2,\n  color: 'secondary',\n  type: 'notification',\n  message: 'This is just a simple notification'\n}, {\n  id: 3,\n  color: 'primary',\n  type: 'e-commerce',\n  message: '12 new orders has arrived today'\n}];","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/common/page/layout/Header/Header.js"],"names":["React","useState","clsx","AppBar","Toolbar","IconButton","InputBase","Menu","MenuItem","Fab","MenuIcon","MailOutline","MailIcon","NotificationsNone","NotificationsIcon","Person","AccountIcon","Search","SearchIcon","Send","SendIcon","ArrowBack","ArrowBackIcon","classNames","ExploreIcon","Mapping","useStyles","Badge","Typography","Notification","UserAvatar","types","useThemeSwitcher","Brightness3OutlinedIcon","Brightness7OutlinedIcon","useDispatch","useSelector","Header","props","classes","handleLogOut","empInfo","dispatch","isSidebarOpened","sideBarReducer","mailMenu","setMailMenu","isMailsUnread","setIsMailsUnread","notificationsMenu","setNotificationsMenu","isNotificationsUnread","setIsNotificationsUnread","profileMenu","setProfileMenu","isSearchOpen","setSearchOpen","isModalOpen","setIsModalOpen","openMapping","closeModal","dark","toggleDark","icon","root","headerIcon","backgroundColor","appBar","appBarShift","type","TOGGLE_SIDEBAR","menuButton","hide","grow","headerMenuButton","e","currentTarget","Boolean","className","headerMenuList","headerMenu","paper","profileMenuUser","profileMenuLink","messages","length","map","message","id","messageNotification","messageNotificationSide","variant","name","time","messageNotificationBodySide","sendMessageButton","sendButtonIcon","notifications","notification","headerMenuItem","empName","profileMenuItem","profileMenuIcon","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACIC,MADJ,EAEIC,OAFJ,EAGIC,UAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,QANJ,EAOIC,GAPJ,CAQI;AACA;AATJ,OAUO,mBAVP;AAWA,SACIF,IAAI,IAAIG,QADZ,EAEIC,WAAW,IAAIC,QAFnB,EAGIC,iBAAiB,IAAIC,iBAHzB,EAIIC,MAAM,IAAIC,WAJd,EAKIC,MAAM,IAAIC,UALd,EAMIC,IAAI,IAAIC,QANZ,EAOIC,SAAS,IAAIC,aAPjB,QAQO,oBARP;AASA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,wCAAlC;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,8BAAvB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,MAAIC,OAAO,GAAGb,SAAS,EAAvB;AACA,QAAM;AAAEc,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BH,KAAlC;AAEA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,eAAe,GAAGP,WAAW,CAAC,CAAC;AAAEQ,IAAAA;AAAF,GAAD,KAAwBA,cAAc,CAACD,eAAxC,EAAyD,EAAzD,CAAnC,CALkC,CAOlC;;AACA,MAAI,CAACE,QAAD,EAAWC,WAAX,IAA0B7C,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI,CAAC8C,aAAD,EAAgBC,gBAAhB,IAAoC/C,QAAQ,CAAC,IAAD,CAAhD;AACA,MAAI,CAACgD,iBAAD,EAAoBC,oBAApB,IAA4CjD,QAAQ,CAAC,IAAD,CAAxD;AACA,MAAI,CAACkD,qBAAD,EAAwBC,wBAAxB,IAAoDnD,QAAQ,CAAC,IAAD,CAAhE;AACA,MAAI,CAACoD,WAAD,EAAcC,cAAd,IAAgCrD,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAI,CAACsD,YAAD,EAAeC,aAAf,IAAgCvD,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACwD,WAAD,EAAcC,cAAd,IAAgCzD,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAM0D,WAAW,GAAG,MAAM;AACtBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAGA,QAAME,UAAU,GAAG,MAAM;AACrBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAIA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuB9B,gBAAgB,EAA7C;AACA,QAAM+B,IAAI,GAAG,CAACF,IAAD,GACT,oBAAC,uBAAD;AAAyB,IAAA,OAAO,EAAE;AAAEG,MAAAA,IAAI,EAAEzB,OAAO,CAAC0B;AAAhB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAGT,oBAAC,uBAAD;AAAyB,IAAA,OAAO,EAAE;AAAED,MAAAA,IAAI,EAAEzB,OAAO,CAAC0B;AAAhB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAMA,SACI;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAACyB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KADX;AAEI,IAAA,QAAQ,EAAC,OAFb;AAGI,IAAA,SAAS,EAAEhE,IAAI,CAACqC,OAAO,CAAC4B,MAAT,EAAiB;AAC5B,OAAC5B,OAAO,CAAC6B,WAAT,GAAuBzB;AADK,KAAjB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEuB,MAAAA,eAAe,EAAE;AAAnB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,kBAAW,aAFf;AAGI,IAAA,OAAO,EAAE,MACLxB,QAAQ,CAAC;AACL2B,MAAAA,IAAI,EAAEtC,KAAK,CAACuC;AADP,KAAD,CAJhB;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,SAAS,EAAEpE,IAAI,CAACqC,OAAO,CAACgC,UAAT,EAAqB5B,eAAe,IAAIJ,OAAO,CAACiC,IAAhD,CATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ,EAcI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAC,IADZ;AAEI,IAAA,MAAM,MAFV;AAGI,IAAA,MAAM,EAAC,QAHX,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,EAyBI;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACkC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EAgEI,oBAAC,UAAD,CAAY;AAAZ;AACI,IAAA,KAAK,EAAC,SADV;AAEI,qBAAc,MAFlB;AAGI,qBAAc,WAHlB;AAII,IAAA,OAAO,EAAEd,WAJb;AAKI,IAAA,SAAS,EAAEpB,OAAO,CAACmC,gBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAEV,MAAAA,IAAI,EAAEzB,OAAO,CAAC0B;AAAhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CAhEJ,EA2EI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAER,WAAf;AAA4B,IAAA,KAAK,EAAEG,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EJ,EA6FI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,qBAAc,MAFlB;AAGI,qBAAc,WAHlB;AAII,IAAA,SAAS,EAAErB,OAAO,CAACmC,gBAJvB;AAKI,IAAA,OAAO,EAAEZ,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKC,IAPL,CA7FJ,EAsGI,oBAAC,UAAD,CAAY;AAAZ;AACI,qBAAc,MADlB;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAExB,OAAO,CAACmC,gBAHvB;AAII,qBAAc,cAJlB;AAKI,IAAA,OAAO,EAAEC,CAAC,IAAIrB,cAAc,CAACqB,CAAC,CAACC,aAAH,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAEZ,MAAAA,IAAI,EAAEzB,OAAO,CAAC0B;AAAhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAtGJ,EA+GI,oBAAC,IAAD,CAAM;AAAN;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,IAAI,EAAEY,OAAO,CAAChC,QAAD,CAFjB;AAGI,IAAA,QAAQ,EAAEA,QAHd;AAII,IAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD,CAJ9B;AAKI,IAAA,aAAa,EAAE;AAAEgC,MAAAA,SAAS,EAAEvC,OAAO,CAACwC;AAArB,KALnB;AAMI,IAAA,SAAS,EAAExC,OAAO,CAACyC,UANvB;AAOI,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE1C,OAAO,CAACc;AAAjB,KAPb;AAQI,IAAA,oBAAoB,MARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAAC2C,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAII,oBAAC,UAAD;AACI,IAAA,SAAS,EAAE3C,OAAO,CAAC4C,eADvB;AAEI,IAAA,SAAS,EAAC,GAFd;AAGI,IAAA,KAAK,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKC,QAAQ,CAACC,MALd,kBAJJ,CAVJ,EAsBKD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IACjB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAvB;AAA2B,IAAA,SAAS,EAAEjD,OAAO,CAACkD,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAElD,OAAO,CAACmD,uBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,OAAO,CAACI,OAA3B;AAAoC,IAAA,IAAI,EAAEJ,OAAO,CAACK,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAmC,IAAA,eAAe,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,CAACM,IADb,CAFJ,CADJ,EAOI;AACI,IAAA,SAAS,EAAEtE,UAAU,CACjBgB,OAAO,CAACmD,uBADS,EAEjBnD,OAAO,CAACuD,2BAFS,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,QAAnB;AAA4B,IAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OAAO,CAACK,IADb,CANJ,EASI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,eAAe,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,CAACA,OADb,CATJ,CAPJ,CADH,CAtBL,EA6CI,oBAAC,GAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,kBAAW,KAHf;AAII,IAAA,SAAS,EAAEhD,OAAO,CAACwD,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAOI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAExD,OAAO,CAACyD,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CA7CJ,CA/GJ,EAsKI,oBAAC,IAAD,CAAM;AAAN;AACI,IAAA,EAAE,EAAC,oBADP;AAEI,IAAA,IAAI,EAAEnB,OAAO,CAAC5B,iBAAD,CAFjB;AAGI,IAAA,QAAQ,EAAEA,iBAHd;AAII,IAAA,OAAO,EAAE,MAAMC,oBAAoB,CAAC,IAAD,CAJvC;AAKI,IAAA,SAAS,EAAEX,OAAO,CAACyC,UALvB;AAMI,IAAA,oBAAoB,MANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKiB,aAAa,CAACX,GAAd,CAAkBY,YAAY,IAC3B,oBAAC,QAAD;AACI,IAAA,GAAG,EAAEA,YAAY,CAACV,EADtB;AAEI,IAAA,OAAO,EAAE,MAAMtC,oBAAoB,CAAC,IAAD,CAFvC;AAGI,IAAA,SAAS,EAAEX,OAAO,CAAC4D,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,YAAD,oBAAkBD,YAAlB;AAAgC,IAAA,iBAAiB,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,CADH,CARL,CAtKJ,EAwLI,oBAAC,IAAD,CAAM;AAAN;AACI,IAAA,EAAE,EAAC,cADP;AAEI,IAAA,IAAI,EAAErB,OAAO,CAACxB,WAAD,CAFjB;AAGI,IAAA,QAAQ,EAAEA,WAHd;AAII,IAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,IAAD,CAJjC;AAKI,IAAA,SAAS,EAAEf,OAAO,CAACyC,UALvB;AAMI,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE1C,OAAO,CAACc;AAAjB,KANb;AAOI,IAAA,oBAAoB,MAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAAC2C,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzC,OAAO,CAAC2D,OADb,CADJ,EAII,oBAAC,UAAD;AACI,IAAA,SAAS,EAAE7D,OAAO,CAAC4C,eADvB;AAEI,IAAA,SAAS,EAAC,GAFd;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,IAAI,EAAC,uBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CATJ,EAsBI,oBAAC,QAAD;AACI,IAAA,SAAS,EAAE5D,UAAU,CAACgB,OAAO,CAAC8D,eAAT,EAA0B9D,OAAO,CAAC4D,cAAlC,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE5D,OAAO,CAAC+D,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,aAtBJ,EA2BI,oBAAC,QAAD;AACI,IAAA,SAAS,EAAE/E,UAAU,CAACgB,OAAO,CAAC8D,eAAT,EAA0B9D,OAAO,CAAC4D,cAAlC,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE5D,OAAO,CAAC+D,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,WA3BJ,EAgCI,oBAAC,QAAD;AACI,IAAA,SAAS,EAAE/E,UAAU,CAACgB,OAAO,CAAC8D,eAAT,EAA0B9D,OAAO,CAAC4D,cAAlC,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE5D,OAAO,CAAC+D,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,cAhCJ,EAqCI;AAAK,IAAA,SAAS,EAAE/D,OAAO,CAAC2C,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAE3C,OAAO,CAAC4C,eADvB;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,OAAO,EAAE,MAAM3C,YAAY,EAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CArCJ,CAxLJ,CAPJ,CADJ,CADJ;AAoPH;AAED,MAAM4C,QAAQ,GAAG,CACb;AACII,EAAAA,EAAE,EAAE,CADR;AAEIG,EAAAA,OAAO,EAAE,SAFb;AAGIC,EAAAA,IAAI,EAAE,UAHV;AAIIL,EAAAA,OAAO,EAAE,uBAJb;AAKIM,EAAAA,IAAI,EAAE;AALV,CADa,EAQb;AACIL,EAAAA,EAAE,EAAE,CADR;AAEIG,EAAAA,OAAO,EAAE,SAFb;AAGIC,EAAAA,IAAI,EAAE,aAHV;AAIIL,EAAAA,OAAO,EAAE,4BAJb;AAKIM,EAAAA,IAAI,EAAE;AALV,CARa,EAeb;AACIL,EAAAA,EAAE,EAAE,CADR;AAEIG,EAAAA,OAAO,EAAE,SAFb;AAGIC,EAAAA,IAAI,EAAE,eAHV;AAIIL,EAAAA,OAAO,EAAE,kCAJb;AAKIM,EAAAA,IAAI,EAAE;AALV,CAfa,EAsBb;AACIL,EAAAA,EAAE,EAAE,CADR;AAEIG,EAAAA,OAAO,EAAE,WAFb;AAGIC,EAAAA,IAAI,EAAE,aAHV;AAIIL,EAAAA,OAAO,EAAE,gCAJb;AAKIM,EAAAA,IAAI,EAAE;AALV,CAtBa,CAAjB;AA+BA,MAAMI,aAAa,GAAG,CAClB;AAAET,EAAAA,EAAE,EAAE,CAAN;AAASe,EAAAA,KAAK,EAAE,SAAhB;AAA2BhB,EAAAA,OAAO,EAAE;AAApC,CADkB,EAElB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIe,EAAAA,KAAK,EAAE,SAFX;AAGIlC,EAAAA,IAAI,EAAE,MAHV;AAIIkB,EAAAA,OAAO,EAAE;AAJb,CAFkB,EAQlB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIe,EAAAA,KAAK,EAAE,WAFX;AAGIlC,EAAAA,IAAI,EAAE,cAHV;AAIIkB,EAAAA,OAAO,EAAE;AAJb,CARkB,EAclB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIe,EAAAA,KAAK,EAAE,SAFX;AAGIlC,EAAAA,IAAI,EAAE,YAHV;AAIIkB,EAAAA,OAAO,EAAE;AAJb,CAdkB,CAAtB","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n    AppBar,\n    Toolbar,\n    IconButton,\n    InputBase,\n    Menu,\n    MenuItem,\n    Fab\n    //Tabs,\n    //Tab\n} from '@material-ui/core';\nimport {\n    Menu as MenuIcon,\n    MailOutline as MailIcon,\n    NotificationsNone as NotificationsIcon,\n    Person as AccountIcon,\n    Search as SearchIcon,\n    Send as SendIcon,\n    ArrowBack as ArrowBackIcon\n} from '@material-ui/icons';\nimport classNames from 'classnames';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport Mapping from './Map/Mapping';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport { Badge, Typography } from 'util/StyleComponents/Wrappers/Wrappers';\nimport Notification from 'util/StyleComponents/Notification/Notification';\nimport UserAvatar from 'util/StyleComponents/UserAvatar/UserAvatar';\n\nimport * as types from 'common/reducer/commonReducer';\n\n// darkMode\nimport { useThemeSwitcher } from 'mui-theme-switcher';\nimport Brightness3OutlinedIcon from '@material-ui/icons/Brightness3Outlined';\nimport Brightness7OutlinedIcon from '@material-ui/icons/Brightness7Outlined';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Header(props) {\n    var classes = useStyles();\n    const { handleLogOut, empInfo } = props;\n\n    const dispatch = useDispatch();\n    const isSidebarOpened = useSelector(({ sideBarReducer }) => sideBarReducer.isSidebarOpened, []);\n\n    // local\n    var [mailMenu, setMailMenu] = useState(null);\n    var [isMailsUnread, setIsMailsUnread] = useState(true);\n    var [notificationsMenu, setNotificationsMenu] = useState(null);\n    var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n    var [profileMenu, setProfileMenu] = useState(null);\n    var [isSearchOpen, setSearchOpen] = useState(false);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const openMapping = () => {\n        setIsModalOpen(true);\n    };\n    const closeModal = () => {\n        setIsModalOpen(false);\n    };\n\n    const { dark, toggleDark } = useThemeSwitcher();\n    const icon = !dark ? (\n        <Brightness3OutlinedIcon classes={{ root: classes.headerIcon }} />\n    ) : (\n        <Brightness7OutlinedIcon classes={{ root: classes.headerIcon }} />\n    );\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                style={{ backgroundColor: 'gray' }}\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: isSidebarOpened\n                })}\n            >\n                <Toolbar style={{ backgroundColor: 'steelblue' }}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() =>\n                            dispatch({\n                                type: types.TOGGLE_SIDEBAR\n                            })\n                        }\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, isSidebarOpened && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        weight=\"medium\"\n                        //className={classes.logotype}\n                    >\n                        Seoul It ERP\n                    </Typography>\n                    {/* <Typography className={classes.logotype} variant=\"h6\" noWrap>\n            Seoul It ERP\n          </Typography> */}\n                    <div className={classes.grow} />\n                    {/* <div //  돋보기 ( 검색 ) 아이콘\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div> */}\n                    {/* <IconButton //  종모양 아이콘\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n                    <IconButton //  맵 아이콘\n                        color=\"inherit\"\n                        aria-haspopup=\"true\"\n                        aria-controls=\"mail-menu\"\n                        onClick={openMapping}\n                        className={classes.headerMenuButton}\n                    >\n                        <Badge color=\"warning\">\n                            <ExploreIcon classes={{ root: classes.headerIcon }} />\n                        </Badge>\n                    </IconButton>\n                    <Mapping open={isModalOpen} close={closeModal} />\n                    {/* <IconButton // 메세지 아이콘\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n                    <IconButton\n                        color=\"inherit\"\n                        aria-haspopup=\"true\"\n                        aria-controls=\"mail-menu\"\n                        className={classes.headerMenuButton}\n                        onClick={toggleDark}\n                    >\n                        {icon}\n                    </IconButton>\n                    <IconButton // 사람모양 아이콘\n                        aria-haspopup=\"true\"\n                        color=\"inherit\"\n                        className={classes.headerMenuButton}\n                        aria-controls=\"profile-menu\"\n                        onClick={e => setProfileMenu(e.currentTarget)}\n                    >\n                        <AccountIcon classes={{ root: classes.headerIcon }} />\n                    </IconButton>\n                    <Menu // 메일 아이콘 누르면 나오는 메뉴\n                        id=\"mail-menu\"\n                        open={Boolean(mailMenu)}\n                        anchorEl={mailMenu}\n                        onClose={() => setMailMenu(null)}\n                        MenuListProps={{ className: classes.headerMenuList }}\n                        className={classes.headerMenu}\n                        classes={{ paper: classes.profileMenu }}\n                        disableAutoFocusItem\n                    >\n                        <div className={classes.profileMenuUser}>\n                            <Typography variant=\"h4\" weight=\"medium\">\n                                New Messages\n                            </Typography>\n                            <Typography\n                                className={classes.profileMenuLink}\n                                component=\"a\"\n                                color=\"secondary\"\n                            >\n                                {messages.length} New Messages\n                            </Typography>\n                        </div>\n                        {messages.map(message => (\n                            <MenuItem key={message.id} className={classes.messageNotification}>\n                                <div className={classes.messageNotificationSide}>\n                                    <UserAvatar color={message.variant} name={message.name} />\n                                    <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                                        {message.time}\n                                    </Typography>\n                                </div>\n                                <div\n                                    className={classNames(\n                                        classes.messageNotificationSide,\n                                        classes.messageNotificationBodySide\n                                    )}\n                                >\n                                    <Typography weight=\"medium\" gutterBottom>\n                                        {message.name}\n                                    </Typography>\n                                    <Typography color=\"text\" colorBrightness=\"secondary\">\n                                        {message.message}\n                                    </Typography>\n                                </div>\n                            </MenuItem>\n                        ))}\n                        <Fab\n                            variant=\"extended\"\n                            color=\"primary\"\n                            aria-label=\"Add\"\n                            className={classes.sendMessageButton}\n                        >\n                            Send New Message\n                            <SendIcon className={classes.sendButtonIcon} />\n                        </Fab>\n                    </Menu>\n                    <Menu // 종모양 아이콘 누르면 나오는 메뉴\n                        id=\"notifications-menu\"\n                        open={Boolean(notificationsMenu)}\n                        anchorEl={notificationsMenu}\n                        onClose={() => setNotificationsMenu(null)}\n                        className={classes.headerMenu}\n                        disableAutoFocusItem\n                    >\n                        {notifications.map(notification => (\n                            <MenuItem\n                                key={notification.id}\n                                onClick={() => setNotificationsMenu(null)}\n                                className={classes.headerMenuItem}\n                            >\n                                <Notification {...notification} typographyVariant=\"inherit\" />\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                    <Menu // 사람모양 아이콘 누르면 나오는 메뉴\n                        id=\"profile-menu\"\n                        open={Boolean(profileMenu)}\n                        anchorEl={profileMenu}\n                        onClose={() => setProfileMenu(null)}\n                        className={classes.headerMenu}\n                        classes={{ paper: classes.profileMenu }}\n                        disableAutoFocusItem\n                    >\n                        <div className={classes.profileMenuUser}>\n                            <Typography variant=\"h4\" weight=\"medium\">\n                                {empInfo.empName}\n                            </Typography>\n                            <Typography\n                                className={classes.profileMenuLink}\n                                component=\"a\"\n                                color=\"primary\"\n                                href=\"https://flatlogic.com\"\n                            >\n                                Flalogic.com\n                            </Typography>\n                        </div>\n                        <MenuItem\n                            className={classNames(classes.profileMenuItem, classes.headerMenuItem)}\n                        >\n                            <AccountIcon className={classes.profileMenuIcon} /> Profile\n                        </MenuItem>\n                        <MenuItem\n                            className={classNames(classes.profileMenuItem, classes.headerMenuItem)}\n                        >\n                            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n                        </MenuItem>\n                        <MenuItem\n                            className={classNames(classes.profileMenuItem, classes.headerMenuItem)}\n                        >\n                            <AccountIcon className={classes.profileMenuIcon} /> Messages\n                        </MenuItem>\n                        <div className={classes.profileMenuUser}>\n                            <Typography\n                                className={classes.profileMenuLink}\n                                color=\"primary\"\n                                onClick={() => handleLogOut()}\n                            >\n                                Sign Out\n                            </Typography>\n                        </div>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nconst messages = [\n    {\n        id: 0,\n        variant: 'warning',\n        name: 'Jane Hew',\n        message: 'Hey! How is it going?',\n        time: '9:32'\n    },\n    {\n        id: 1,\n        variant: 'success',\n        name: 'Lloyd Brown',\n        message: 'Check out my new Dashboard',\n        time: '9:18'\n    },\n    {\n        id: 2,\n        variant: 'primary',\n        name: 'Mark Winstein',\n        message: 'I want rearrange the appointment',\n        time: '9:15'\n    },\n    {\n        id: 3,\n        variant: 'secondary',\n        name: 'Liana Dutti',\n        message: 'Good news from sale department',\n        time: '9:09'\n    }\n];\n\nconst notifications = [\n    { id: 0, color: 'warning', message: 'Check out this awesome ticket' },\n    {\n        id: 1,\n        color: 'success',\n        type: 'info',\n        message: 'What is the best way to get ...'\n    },\n    {\n        id: 2,\n        color: 'secondary',\n        type: 'notification',\n        message: 'This is just a simple notification'\n    },\n    {\n        id: 3,\n        color: 'primary',\n        type: 'e-commerce',\n        message: '12 new orders has arrived today'\n    }\n];\n"]},"metadata":{},"sourceType":"module"}