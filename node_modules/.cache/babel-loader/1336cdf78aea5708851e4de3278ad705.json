{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\affair\\\\page\\\\EmpAssign\\\\EmpAssign.js\";\nimport React, { useState } from 'react';\nimport UseStyles from './UseStyles';\nimport { Paper, TextField, Button, Grid, AppBar, InputLabel, Box, Typography, Toolbar, MenuItem, Select, FormControl, OutlinedInput } from '@material-ui/core';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport useAxios from 'util/useAxios';\nimport useInput from 'util/useInput';\nimport AssignInput from './AssignInput';\nimport { useDispatch } from 'react-redux';\nimport { REST_ATTD_REQUEST } from 'erp/hr/attendance/reducer/RestReducer';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport EmpDialog from './EmpDialog';\n\nfunction EmpAssign({\n  searchAssign,\n  assignData\n}) {\n  const columnDefs = AssignInput;\n  const classes = UseStyles();\n  const [EmpList, setEmpList] = useState([]);\n  const [openD, setOpenD] = useState(false);\n  const fromDate = useInput('2021-01-01');\n  const toDate = useInput('2021-12-31');\n  let selectedInput = document.getElementsByName('attdRestTypeCode')[0]; //오늘 날짜\n\n  let today = moment().format('YYYY-MM-DD');\n\n  const codeDivision = element => {\n    if (typeof element == 'undefined') return '';else {\n      // console.log(element.value);\n      return element.value;\n    }\n  };\n\n  const [assignDate, setassignDate] = useState(today);\n  const attdRestTypeCode = useInput();\n  const cause = useInput();\n  const cost = useInput();\n  const startTime = useInput();\n  const endTime = useInput();\n  const dispatch = useDispatch();\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0); // React.useEffect(() => {\n  //     setLabelWidth(inputLabel.current.offsetWidth);\n  // }, []);\n  // 수정\n\n  const [CurrentDept, setCurrentDept] = useState('');\n  const [MoveDept, setMoveDept] = useState('');\n  const [EmpName, setEmpName] = useState('');\n  const [deptCode, setdeptCode] = useState('');\n  const [EmpCode, setEmpCode] = useState('');\n  const [DeptName, setDeptName] = useState('');\n\n  const searchEmp = () => {\n    setOpenD(true);\n    Axios.get('http://localhost:8282/hr/affair/empList').then(response => {\n      console.log(response.data.empList);\n      setEmpList(response.data.empList);\n    }).catch(e => {\n      alert(e);\n    });\n  }; //다이얼로그 셀 클릭\n\n\n  const DialogCellClick = e => {\n    console.log(e.data);\n    setEmpName(e.data.empName);\n    setdeptCode(e.data.deptCode);\n    setEmpCode(e.data.empCode);\n    setDeptName(e.data.detailCodeName);\n    setOpenD(false);\n  };\n\n  const currentDeptClick = e => {\n    setCurrentDept(e.target.value);\n  };\n\n  const moveDeptClick = e => {\n    setMoveDept(e.target.value);\n  };\n\n  const appointment = e => {\n    if (!EmpName) {\n      alert('이름을 입력하세요');\n      return;\n    }\n\n    if (!CurrentDept) {\n      alert('현재 부서를 선택하세요');\n      return;\n    }\n\n    if (!MoveDept) {\n      alert('이동할 부서를 선택하세요');\n      return;\n    }\n\n    Axios.get('http://localhost:8282/hr/affair/waitingAssign', {\n      params: {\n        CurrentDept,\n        MoveDept,\n        EmpCode,\n        assignDate\n      }\n    });\n    window.location.replace('/app/hr/affair/employmentAssign');\n  };\n\n  const search = () => {\n    searchAssign(fromDate.value, toDate.value);\n  };\n\n  console.log(assignData);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.leftPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    className: classes.subCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\uC778\\uC0AC\\uBC1C\\uB839\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"assignDate\",\n    label: \"\\uBC1C\\uB839 \\uC77C\\uC790\",\n    type: \"date\",\n    variant: \"outlined\",\n    defaultValue: assignDate,\n    onChange: e => {\n      setassignDate(e.target.value);\n    },\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: EmpName,\n    rowSelection: 'single',\n    label: \"\\uC9C1\\uC6D0\\uBA85\",\n    onClick: searchEmp,\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"outlined-cost-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uBD80\\uC11C\"), React.createElement(Select, {\n    input: React.createElement(OutlinedInput, {\n      labelWidth: labelWidth,\n      name: \"cost\",\n      id: \"outlined-cost-simple\",\n      onChange: currentDeptClick,\n      value: CurrentDept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: deptCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, DeptName))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"outlined-cost-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"\\uBC1C\\uB839 \\uBD80\\uC11C\"), React.createElement(Select, {\n    input: React.createElement(OutlinedInput, {\n      labelWidth: labelWidth,\n      name: \"cost\",\n      id: \"outlined-cost-simple\",\n      onChange: moveDeptClick,\n      value: MoveDept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"DPT-01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"\\uCD1D\\uBB34\\uBD80\"), React.createElement(MenuItem, {\n    value: \"DPT-02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"\\uC601\\uC5C5\\uBD80\"), React.createElement(MenuItem, {\n    value: \"DPT-03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\uC0DD\\uC0B0\\uBD80\"), React.createElement(MenuItem, {\n    value: \"DPT-04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"\\uAD6C\\uB9E4\\uBD80\"), React.createElement(MenuItem, {\n    value: \"DPT-05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"\\uC778\\uC0AC\\uBD80\"), React.createElement(MenuItem, {\n    value: \"DPT-06\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"\\uD64D\\uBCF4\\uBD80\"), React.createElement(MenuItem, {\n    value: \"DPT-07\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"\\uAC1C\\uBC1C\\uBD80\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(Box, {\n    textAlign: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: appointment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"\\uBC1C\\uB839\")))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.rightPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    className: classes.subCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"\\uC778\\uC0AC\\uBC1C\\uB839 \\uD604\\uD669\\uC870\\uD68C\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: 'fromDate',\n    label: '검색날짜',\n    type: 'date',\n    defaultValue: fromDate.value,\n    onChange: fromDate.onChange,\n    className: classes.textField,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }), \"~\", React.createElement(TextField, {\n    id: 'toDate',\n    label: '검색날짜',\n    type: 'date',\n    defaultValue: toDate.value,\n    onChange: toDate.onChange,\n    className: classes.textField,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: 'outlined',\n    color: 'primary',\n    onClick: search,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\")), React.createElement(\"div\", {\n    className: 'ag-theme-material',\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: columnDefs,\n    rowData: assignData ? assignData : [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }))))), React.createElement(EmpDialog, {\n    open: openD,\n    setOpenD: setOpenD,\n    EmpList: EmpList // setSearchName={setSearchName}\n    // setWorkplaceCode={setWorkplaceCode}\n    // onGridReady={onGridReady}\n    // DeptColDefs={DeptColDefs}\n    ,\n    DialogCellClick: DialogCellClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }));\n}\n\nexport default EmpAssign;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/affair/page/EmpAssign/EmpAssign.js"],"names":["React","useState","UseStyles","Paper","TextField","Button","Grid","AppBar","InputLabel","Box","Typography","Toolbar","MenuItem","Select","FormControl","OutlinedInput","AgGridReact","useAxios","useInput","AssignInput","useDispatch","REST_ATTD_REQUEST","moment","Axios","EmpDialog","EmpAssign","searchAssign","assignData","columnDefs","classes","EmpList","setEmpList","openD","setOpenD","fromDate","toDate","selectedInput","document","getElementsByName","today","format","codeDivision","element","value","assignDate","setassignDate","attdRestTypeCode","cause","cost","startTime","endTime","dispatch","inputLabel","useRef","labelWidth","setLabelWidth","CurrentDept","setCurrentDept","MoveDept","setMoveDept","EmpName","setEmpName","deptCode","setdeptCode","EmpCode","setEmpCode","DeptName","setDeptName","searchEmp","get","then","response","console","log","data","empList","catch","e","alert","DialogCellClick","empName","empCode","detailCodeName","currentDeptClick","target","moveDeptClick","appointment","params","window","location","replace","search","leftPaper","subCategory","textField","shrink","rightPaper","onChange","button","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport UseStyles from './UseStyles';\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Button,\r\n    Grid,\r\n    AppBar,\r\n    InputLabel,\r\n    Box,\r\n    Typography,\r\n    Toolbar,\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    OutlinedInput\r\n} from '@material-ui/core';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\nimport useAxios from 'util/useAxios';\r\nimport useInput from 'util/useInput';\r\nimport AssignInput from './AssignInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REST_ATTD_REQUEST } from 'erp/hr/attendance/reducer/RestReducer';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport EmpDialog from './EmpDialog';\r\n\r\nfunction EmpAssign({ searchAssign, assignData }) {\r\n    const columnDefs = AssignInput;\r\n    const classes = UseStyles();\r\n    const [EmpList, setEmpList] = useState([]);\r\n    const [openD, setOpenD] = useState(false);\r\n    const fromDate = useInput('2021-01-01');\r\n    const toDate = useInput('2021-12-31');\r\n    let selectedInput = document.getElementsByName('attdRestTypeCode')[0];\r\n    //오늘 날짜\r\n    let today = moment().format('YYYY-MM-DD');\r\n\r\n    const codeDivision = element => {\r\n        if (typeof element == 'undefined') return '';\r\n        else {\r\n            // console.log(element.value);\r\n            return element.value;\r\n        }\r\n    };\r\n\r\n    const [assignDate, setassignDate] = useState(today);\r\n    const attdRestTypeCode = useInput();\r\n    const cause = useInput();\r\n    const cost = useInput();\r\n    const startTime = useInput();\r\n    const endTime = useInput();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    // React.useEffect(() => {\r\n    //     setLabelWidth(inputLabel.current.offsetWidth);\r\n    // }, []);\r\n\r\n    // 수정\r\n    const [CurrentDept, setCurrentDept] = useState('');\r\n    const [MoveDept, setMoveDept] = useState('');\r\n    const [EmpName, setEmpName] = useState('');\r\n    const [deptCode, setdeptCode] = useState('');\r\n    const [EmpCode, setEmpCode] = useState('');\r\n    const [DeptName, setDeptName] = useState('');\r\n\r\n    const searchEmp = () => {\r\n        setOpenD(true);\r\n        Axios.get('http://localhost:8282/hr/affair/empList') \r\n            .then(response => {\r\n                console.log(response.data.empList);\r\n                setEmpList(response.data.empList);\r\n            })\r\n            .catch(e => {\r\n                alert(e);\r\n            });\r\n    };\r\n\r\n    //다이얼로그 셀 클릭\r\n    const DialogCellClick = e => {\r\n        console.log(e.data);\r\n        setEmpName(e.data.empName);\r\n        setdeptCode(e.data.deptCode);\r\n        setEmpCode(e.data.empCode);\r\n        setDeptName(e.data.detailCodeName);\r\n        setOpenD(false);\r\n    };\r\n\r\n    const currentDeptClick = e => {\r\n        setCurrentDept(e.target.value);\r\n    };\r\n\r\n    const moveDeptClick = e => {\r\n        setMoveDept(e.target.value);\r\n    };\r\n\r\n    const appointment = e => {\r\n        if (!EmpName) {\r\n            alert('이름을 입력하세요');\r\n            return;\r\n        }\r\n        if (!CurrentDept) {\r\n            alert('현재 부서를 선택하세요');\r\n            return;\r\n        }\r\n        if (!MoveDept) {\r\n            alert('이동할 부서를 선택하세요');\r\n            return;\r\n        }\r\n        Axios.get('http://localhost:8282/hr/affair/waitingAssign', {\r\n            params: { CurrentDept, MoveDept, EmpCode, assignDate }\r\n        });\r\n        window.location.replace('/app/hr/affair/employmentAssign');\r\n    };\r\n\r\n    const search = () => {\r\n        searchAssign(fromDate.value, toDate.value);\r\n    };\r\n\r\n    console.log(assignData);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}></Grid>\r\n                <Grid item xs={4}>\r\n                    <Paper className={classes.leftPaper}>\r\n                        <AppBar position=\"relative\" className={classes.subCategory}>\r\n                            <Toolbar>\r\n                                <Typography variant=\"h5\">인사발령</Typography>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <br />\r\n                        <form>\r\n                            <TextField\r\n                                id=\"assignDate\"\r\n                                label=\"발령 일자\"\r\n                                type=\"date\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={assignDate}\r\n                                onChange={e => {\r\n                                    setassignDate(e.target.value);\r\n                                }}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                            />\r\n                            <br />\r\n                            <br />\r\n                            <TextField\r\n                                value={EmpName}\r\n                                rowSelection={'single'}\r\n                                label=\"직원명\"\r\n                                onClick={searchEmp}\r\n                                className={classes.textField}\r\n                                variant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                            ></TextField>\r\n                            <br />\r\n                            <br />\r\n                            <FormControl variant=\"outlined\" className={classes.textField}>\r\n                                <InputLabel htmlFor=\"outlined-cost-simple\">현재 부서</InputLabel>\r\n                                <Select\r\n                                    input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={labelWidth}\r\n                                            name=\"cost\"\r\n                                            id=\"outlined-cost-simple\"\r\n                                            onChange={currentDeptClick}\r\n                                            value={CurrentDept}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <MenuItem value={deptCode}>{DeptName}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br />\r\n                            <br />\r\n                            <FormControl variant=\"outlined\" className={classes.textField}>\r\n                                <InputLabel htmlFor=\"outlined-cost-simple\">발령 부서</InputLabel>\r\n                                <Select\r\n                                    input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={labelWidth}\r\n                                            name=\"cost\"\r\n                                            id=\"outlined-cost-simple\"\r\n                                            onChange={moveDeptClick}\r\n                                            value={MoveDept}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <MenuItem value=\"DPT-01\">총무부</MenuItem>\r\n                                    <MenuItem value=\"DPT-02\">영업부</MenuItem>\r\n                                    <MenuItem value=\"DPT-03\">생산부</MenuItem>\r\n                                    <MenuItem value=\"DPT-04\">구매부</MenuItem>\r\n                                    <MenuItem value=\"DPT-05\">인사부</MenuItem>\r\n                                    <MenuItem value=\"DPT-06\">홍보부</MenuItem>\r\n                                    <MenuItem value=\"DPT-07\">개발부</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                        <br />\r\n                        <br />\r\n                        <Box textAlign=\"right\">\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={appointment}>\r\n                                발령\r\n                            </Button>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Paper className={classes.rightPaper}>\r\n                        <AppBar position=\"relative\" className={classes.subCategory}>\r\n                            <Toolbar>\r\n                                <Typography variant=\"h5\">인사발령 현황조회</Typography>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <br />\r\n                        <div>\r\n                            <TextField\r\n                                id={'fromDate'}\r\n                                label={'검색날짜'}\r\n                                type={'date'}\r\n                                defaultValue={fromDate.value}\r\n                                onChange={fromDate.onChange}\r\n                                className={classes.textField}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            ~\r\n                            <TextField\r\n                                id={'toDate'}\r\n                                label={'검색날짜'}\r\n                                type={'date'}\r\n                                defaultValue={toDate.value}\r\n                                onChange={toDate.onChange}\r\n                                className={classes.textField}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <Button\r\n                                variant={'outlined'}\r\n                                color={'primary'}\r\n                                onClick={search}\r\n                                className={classes.button}\r\n                            >\r\n                                조회\r\n                            </Button>\r\n                        </div>\r\n                        <div\r\n                            className={'ag-theme-material'}\r\n                            style={{\r\n                                height: '400px',\r\n                                width: '100%'\r\n                            }}\r\n                        >\r\n                            <AgGridReact\r\n                                columnDefs={columnDefs}\r\n                                rowData={assignData ? assignData : []}\r\n                            />\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <EmpDialog\r\n                open={openD}\r\n                setOpenD={setOpenD}\r\n                EmpList={EmpList}\r\n                // setSearchName={setSearchName}\r\n                // setWorkplaceCode={setWorkplaceCode}\r\n                // onGridReady={onGridReady}\r\n                // DeptColDefs={DeptColDefs}\r\n                DialogCellClick={DialogCellClick}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmpAssign;\r\n"]},"metadata":{},"sourceType":"module"}