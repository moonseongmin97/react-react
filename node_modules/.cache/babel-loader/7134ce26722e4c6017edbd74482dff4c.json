{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\outsourc\\\\page\\\\Order\\\\OrderResist.js\";\n//2020-12-04 64기 정준혁\nimport React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport { today } from 'erp/hr/util/lib';\nimport Swal from 'sweetalert2';\nimport OutSourcOrderableColumn from './OutSourcOrderableColumn';\nimport useAsync from 'util/useAsync';\nimport moment from 'moment';\nimport * as api from '../../api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport AmountDialog from './AmountDialog';\nimport Axios from 'axios';\n\nconst OrderRegist = () => {\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(today);\n  const [condition, setCondition] = useState('claimDate');\n  const [openAmountDialog, setOpenAmountDialog] = useState(false);\n  const [itemCost, setItemCost] = useState(null);\n  const [gridApi, setGridApi] = useState();\n  const [orderableList, orderableListFetch] = useAsync(param => api.searchOrderableList(param), [], true);\n\n  const basicInfo = (startDate, endDate) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const onChangeDate = e => {\n    console.log(e);\n\n    if (e.target.id === 'startDate') {\n      setStartDate(e.target.value);\n    } else {\n      setEndDate(e.target.value);\n    }\n  };\n\n  const onClicked = () => {\n    const param = {\n      searchDateCondition: condition,\n      startDate: startDate,\n      endDate: endDate\n    };\n    orderableListFetch(param);\n  };\n\n  const conditionChange = e => {\n    setCondition(e.target.value);\n  };\n\n  const handleOpenDialog = params => {\n    if (params.colDef.field === 'outsourcAmount' || params.colDef.field === 'unitPriceOfOutsourc') setOpenAmountDialog(true);\n  };\n\n  const handleCloseAmountDialog = params => {\n    // console.log(params);\n    setOpenAmountDialog(false);\n  };\n\n  const handleSearchItemCode = () => {\n    // console.log(gridApiEstimateDetail.getSelectedRows())\n    var row = gridApi.getSelectedRows();\n    let param = {\n      itemCode: row[0].itemCode\n    };\n    Axios.get('http://localhost:8282/logi/outsourc/getStandardUnitPrice', {\n      params: param\n    }).then(response => {\n      setItemCost(response.data.gridRowJson);\n      console.log(response.data.gridRowJson); // console.log(itemCost);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  function onGridReadyEstimateDetail(params) {\n    setGridApi(params.api);\n    params.api.sizeColumnsToFit();\n  }\n\n  const regist = () => {\n    const rows = gridApi.getSelectedRows();\n    console.log(rows);\n    let bool = false;\n    rows.forEach(el => {\n      bool = bool || parseInt(el.necessaryAmount) < parseInt(el.outsourcAmount);\n\n      if (bool) {\n        return Swal.fire({\n          icon: 'error',\n          title: '외주수량 초과'\n        });\n      }\n    });\n    if (bool) return; //Axios.post('http://localhost:8282/logi/outsourc/insertOutsourc',rows);\n\n    Axios.post('http://localhost:4000/erp/logi/outsourc/insertOutsourc', rows);\n    console.log(\"외주 발주 함\");\n    gridApi.updateRowData({\n      remove: rows\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: OutSourcOrderableColumn,\n    title: '외주 발주 등록',\n    onCellClicked: handleOpenDialog,\n    rowSelection: \"multiple\",\n    components: {\n      datePicker: getDatePicker()\n    },\n    list: orderableList.data ? orderableList.data.gridRowJson : null,\n    api: onGridReadyEstimateDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: regist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC \\uBC1C\\uC8FC \\uB4F1\\uB85D\")), React.createElement(\"div\", {\n    align: \"left\",\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"searchDateCondition\",\n    name: \"searchDateCondition\",\n    defaultValue: \"claimDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"claimDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"dueDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uC644\\uB8CC\\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))), React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    basicInfo: basicInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC \\uBC1C\\uC8FC \\uB4F1\\uB85D \\uAC00\\uB2A5 \\uB9AC\\uC2A4\\uD2B8 \\uC870\\uD68C\")), React.createElement(MyDialog, {\n    open: openAmountDialog,\n    close: handleCloseAmountDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(AmountDialog, {\n    close: handleCloseAmountDialog,\n    handleSearchItemCode: handleSearchItemCode,\n    itemCost: itemCost,\n    gridApi: gridApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })));\n};\n\nexport default OrderRegist;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/outsourc/page/Order/OrderResist.js"],"names":["React","useState","useCallback","MyCalendar","MyGrid","Button","getDatePicker","today","Swal","OutSourcOrderableColumn","useAsync","moment","api","Radio","RadioGroup","FormControlLabel","MyDialog","AmountDialog","Axios","OrderRegist","Date","format","startDate","setStartDate","endDate","setEndDate","condition","setCondition","openAmountDialog","setOpenAmountDialog","itemCost","setItemCost","gridApi","setGridApi","orderableList","orderableListFetch","param","searchOrderableList","basicInfo","onChangeDate","e","console","log","target","id","value","onClicked","searchDateCondition","conditionChange","handleOpenDialog","params","colDef","field","handleCloseAmountDialog","handleSearchItemCode","row","getSelectedRows","itemCode","get","then","response","data","gridRowJson","catch","onGridReadyEstimateDetail","sizeColumnsToFit","regist","rows","bool","forEach","el","parseInt","necessaryAmount","outsourcAmount","fire","icon","title","post","updateRowData","remove","datePicker","float","marginRight","marginTop"],"mappings":"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","sourcesContent":["//2020-12-04 64기 정준혁\nimport React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport { today } from 'erp/hr/util/lib';\nimport Swal from 'sweetalert2';\nimport OutSourcOrderableColumn from './OutSourcOrderableColumn';\nimport useAsync from 'util/useAsync';\nimport moment from 'moment';\nimport * as api from '../../api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport AmountDialog from './AmountDialog';\nimport Axios from 'axios';\n\nconst OrderRegist = () => {\n\n    let today = moment(new Date()).format('yyyy-MM-DD');\n    const [startDate, setStartDate] = useState(today);\n    const [endDate, setEndDate] = useState(today);\n    const [condition, setCondition] = useState('claimDate');\n    const [openAmountDialog, setOpenAmountDialog] = useState(false);\n    const [itemCost, setItemCost] = useState(null);\n    const [gridApi, setGridApi] = useState();\n\n    const [orderableList, orderableListFetch] = useAsync((param) =>api.searchOrderableList(param), [], true);\n\n    const basicInfo = (startDate, endDate) => {\n        setStartDate(startDate);\n        setEndDate(endDate);\n    };\n\n    const onChangeDate = e => {\n        console.log(e);\n        if (e.target.id === 'startDate') {\n            setStartDate(e.target.value);\n        } else {\n            setEndDate(e.target.value);\n        }\n    };\n\n    const onClicked = () =>{\n        const param = {\n            searchDateCondition: condition,\n            startDate: startDate,\n            endDate: endDate\n        }\n        orderableListFetch(param);\n    };\n\n    const conditionChange = e => {\n        setCondition(e.target.value);\n    };\n\n    \n    const handleOpenDialog = params => {\n    if (\n        params.colDef.field === 'outsourcAmount' ||\n        params.colDef.field === 'unitPriceOfOutsourc')\n            setOpenAmountDialog(true);\n    };\n    const handleCloseAmountDialog = params => {\n        // console.log(params);\n        setOpenAmountDialog(false);\n    };\n    const handleSearchItemCode = () => {\n        // console.log(gridApiEstimateDetail.getSelectedRows())\n\n        var row = gridApi.getSelectedRows();\n        let param = {\n            itemCode: row[0].itemCode\n        };\n        Axios.get('http://localhost:8282/logi/outsourc/getStandardUnitPrice', {\n            params: param\n        })\n            .then(response => {\n                setItemCost(response.data.gridRowJson);\n                console.log(response.data.gridRowJson);\n                // console.log(itemCost);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    function onGridReadyEstimateDetail(params) {\n        setGridApi(params.api);\n        params.api.sizeColumnsToFit();\n    }\n\n    const regist = () =>\n    {\n        const rows = gridApi.getSelectedRows();\n        console.log(rows);\n\n        let bool = false;\n\n        rows.forEach(el => {\n            bool = bool||(parseInt(el.necessaryAmount) < parseInt(el.outsourcAmount));\n            if(bool){\n                return Swal.fire({\n                    icon: 'error',\n                    title: '외주수량 초과'\n                });\n            }\n        });\n        if(bool) return;\n        //Axios.post('http://localhost:8282/logi/outsourc/insertOutsourc',rows);\n\n        Axios.post('http://localhost:4000/erp/logi/outsourc/insertOutsourc',rows);\n\n        console.log(\"외주 발주 함\");\n\n        gridApi.updateRowData({remove:rows});\n    }\n\n    return (\n        <>\n            <MyGrid\n                column={OutSourcOrderableColumn}\n                title={'외주 발주 등록'}\n                onCellClicked={handleOpenDialog}\n                rowSelection=\"multiple\"\n                components={{ datePicker: getDatePicker() }}\n                list={orderableList.data ? orderableList.data.gridRowJson : null}\n                api={onGridReadyEstimateDetail}\n            >\n                <div style={{ float: 'left' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ marginRight: '1vh', marginTop: '1vh' }}\n                        onClick={regist}\n                    >\n                        외주 발주 등록\n                    </Button>\n                </div>\n                <div align=\"left\" style={{ float: 'left' }}>\n                    <RadioGroup\n                        row\n                        aria-label=\"searchDateCondition\"\n                        name=\"searchDateCondition\"\n                        defaultValue=\"claimDate\"\n                    >\n                        <FormControlLabel\n                            value=\"claimDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                        <FormControlLabel\n                            value=\"dueDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 완료기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                    </RadioGroup>\n                </div>\n                <MyCalendar  onChangeDate={onChangeDate} basicInfo={basicInfo}/>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={onClicked}\n                >\n                    외주 발주 등록 가능 리스트 조회\n                </Button>\n            </MyGrid>\n\n            <MyDialog open={openAmountDialog} close={handleCloseAmountDialog}>\n                    <AmountDialog\n                        close={handleCloseAmountDialog}\n                        handleSearchItemCode={handleSearchItemCode}\n                        itemCost={itemCost}\n                        gridApi={gridApi}\n                    />\n                </MyDialog>\n        </>\n    );\n};\n\nexport default OrderRegist;"]},"metadata":{},"sourceType":"module"}