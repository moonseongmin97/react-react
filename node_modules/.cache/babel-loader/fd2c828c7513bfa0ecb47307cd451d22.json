{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\util\\\\MyGrid.js\";\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport './CSS/Grid.css';\n\nconst MyGrid = ({\n  columnDefinition,\n  rowData,\n  onGridReady,\n  onCellEditingStopped,\n  style,\n  paginationAutoPageSize,\n  pagination\n}) => {\n  const getRowStyle = param => {\n    if (param.node.rowPinned) {\n      return {\n        'font-weight': 'bold',\n        background: '#dddddd'\n      };\n    }\n\n    return {\n      'text-align': 'center'\n    };\n  };\n\n  let divStyle;\n\n  if (style === undefined) {\n    divStyle = {\n      height: '100%',\n      width: '80%'\n    };\n  } else {\n    divStyle = style;\n  }\n\n  return React.createElement(\"div\", {\n    align: \"center\",\n    className: 'ag-theme-material',\n    skipHeaderOnAutoSize: \"true\",\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      'text-align': 'center'\n    },\n    style: divStyle,\n    cellStyle: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: columnDefinition,\n    rowData: rowData,\n    defaultColDef: {\n      resizable: true,\n      sortable: true\n    },\n    rowSelection: \"single\",\n    getRowStyle: getRowStyle,\n    suppressHorizontalScroll: \"true\",\n    onGridReady: onGridReady,\n    onCellEditingStopped: onCellEditingStopped,\n    paginationAutoPageSize: paginationAutoPageSize,\n    pagination: pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nexport default MyGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/util/MyGrid.js"],"names":["React","AgGridReact","MyGrid","columnDefinition","rowData","onGridReady","onCellEditingStopped","style","paginationAutoPageSize","pagination","getRowStyle","param","node","rowPinned","background","divStyle","undefined","height","width","textAlign","resizable","sortable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;AACA,OAAO,gBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACZC,EAAAA,gBADY;AAEZC,EAAAA,OAFY;AAGZC,EAAAA,WAHY;AAIZC,EAAAA,oBAJY;AAKZC,EAAAA,KALY;AAMZC,EAAAA,sBANY;AAOZC,EAAAA;AAPY,CAAD,KAQT;AACF,QAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAIA,KAAK,CAACC,IAAN,CAAWC,SAAf,EAA0B;AACtB,aAAO;AAAE,uBAAe,MAAjB;AAAyBC,QAAAA,UAAU,EAAE;AAArC,OAAP;AACH;;AACD,WAAO;AAAE,oBAAc;AAAhB,KAAP;AACH,GALD;;AAMA,MAAIC,QAAJ;;AACA,MAAIR,KAAK,KAAKS,SAAd,EAAyB;AACrBD,IAAAA,QAAQ,GAAG;AACPE,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;AAIH,GALD,MAKO;AACHH,IAAAA,QAAQ,GAAGR,KAAX;AACH;;AAED,SACI;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,SAAS,EAAE,mBAFf;AAGI,IAAA,oBAAoB,EAAC,MAHzB;AAII,IAAA,eAAe,EAAC,MAJpB;AAKI,IAAA,aAAa,EAAC,MALlB;AAMI,IAAA,YAAY,EAAC,MANjB;AAOI,IAAA,oBAAoB,EAAC,MAPzB;AAQI,IAAA,QAAQ,EAAE;AAAE,oBAAc;AAAhB,KARd;AASI,IAAA,KAAK,EAAEQ,QATX;AAUI,IAAA,SAAS,EAAE;AAAEI,MAAAA,SAAS,EAAE;AAAb,KAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAEhB,gBADhB;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,aAAa,EAAE;AAAEgB,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAHnB;AAII,IAAA,YAAY,EAAC,QAJjB;AAKI,IAAA,WAAW,EAAEX,WALjB;AAMI,IAAA,wBAAwB,EAAC,MAN7B;AAOI,IAAA,WAAW,EAAEL,WAPjB;AAQI,IAAA,oBAAoB,EAAEC,oBAR1B;AASI,IAAA,sBAAsB,EAAEE,sBAT5B;AAUI,IAAA,UAAU,EAAEC,UAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AA2BH,CApDD;;AAsDA,eAAeP,MAAf","sourcesContent":["import React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport './CSS/Grid.css';\n\nconst MyGrid = ({\n    columnDefinition,\n    rowData,\n    onGridReady,\n    onCellEditingStopped,\n    style,\n    paginationAutoPageSize,\n    pagination\n}) => {\n    const getRowStyle = param => {\n        if (param.node.rowPinned) {\n            return { 'font-weight': 'bold', background: '#dddddd' };\n        }\n        return { 'text-align': 'center' };\n    };\n    let divStyle;\n    if (style === undefined) {\n        divStyle = {\n            height: '100%',\n            width: '80%',\n        };\n    } else {\n        divStyle = style;\n    }\n\n    return (\n        <div\n            align=\"center\"\n            className={'ag-theme-material'}\n            skipHeaderOnAutoSize=\"true\"\n            enableColResize=\"true\"\n            enableSorting=\"true\"\n            enableFilter=\"true\"\n            enableRangeSelection=\"true\"\n            rowStyle={{ 'text-align': 'center' }}\n            style={divStyle}\n            cellStyle={{ textAlign: 'center' }}\n        >\n            <AgGridReact\n                columnDefs={columnDefinition}\n                rowData={rowData}\n                defaultColDef={{ resizable: true, sortable: true }}\n                rowSelection=\"single\"\n                getRowStyle={getRowStyle}\n                suppressHorizontalScroll=\"true\"\n                onGridReady={onGridReady}\n                onCellEditingStopped={onCellEditingStopped}\n                paginationAutoPageSize={paginationAutoPageSize}\n                pagination={pagination}\n            />\n        </div>\n    );\n};\n\nexport default MyGrid;"]},"metadata":{},"sourceType":"module"}