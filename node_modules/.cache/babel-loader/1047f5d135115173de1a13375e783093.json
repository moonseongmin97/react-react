{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\sales\\\\page\\\\Delivery\\\\DeliveryInfo.js\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nfunction DeliveryInfo(props) {\n  const [list, setList] = useState();\n  const column = {\n    columnDefs: [{\n      headerName: '납품번호',\n      field: 'deliveryNo'\n    }, {\n      headerName: '견적번호',\n      field: 'estimateNo',\n      hide: true\n    }, {\n      headerName: '수주번호',\n      field: 'contractNo',\n      hide: true\n    }, {\n      headerName: '수주상세일련번호',\n      field: 'contractDetailNo',\n      hide: true\n    }, {\n      headerName: '거래처코드',\n      field: 'customerCode',\n      hide: true\n    }, {\n      headerName: '처리자코드',\n      field: 'personCodeInCharge'\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode',\n      hide: true\n    }, {\n      headerName: '품목명',\n      field: 'itemName'\n    }, {\n      headerName: '단위',\n      field: 'unitOfDelivery'\n    }, {\n      headerName: '납품수량',\n      field: 'deliveryAmount'\n    }, {\n      headerName: '단가',\n      field: 'unitPrice',\n      cellRenderer: function (params) {\n        var num = params.value + '';\n        var point = num.length % 3;\n        var len = num.length;\n        var str = num.substring(0, point);\n\n        while (point < len) {\n          if (str != '') str += ',';\n          str += num.substring(point, point + 3);\n          point += 3;\n        }\n\n        return str;\n      }\n    }, {\n      headerName: '총액',\n      field: 'sumPrice',\n      cellRenderer: function (params) {\n        var num = params.value + '';\n        var point = num.length % 3;\n        var len = num.length;\n        var str = num.substring(0, point);\n\n        while (point < len) {\n          if (str != '') str += ',';\n          str += num.substring(point, point + 3);\n          point += 3;\n        }\n\n        return str;\n      }\n    }, {\n      headerName: '납품날짜',\n      field: 'deliverydate'\n    }, {\n      headerName: '배송지',\n      field: 'deliveryPlaceName'\n    }, {\n      headerName: '마감여부',\n      field: 'finalizeStatus'\n    }]\n  };\n  useEffect(() => {\n    Axios.get('http://localhost:8282/logi/logistics/sales/searchDeliveryInfoList').then(response => {\n      setList(response.data.gridRowJson);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  return React.createElement(MyGrid, {\n    column: column,\n    title: '납품 현황',\n    list: list,\n    size: '68vh',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n}\n\nexport default DeliveryInfo;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/sales/page/Delivery/DeliveryInfo.js"],"names":["Axios","React","useEffect","useState","MyGrid","DeliveryInfo","props","list","setList","column","columnDefs","headerName","field","hide","cellRenderer","params","num","value","point","length","len","str","substring","get","then","response","data","gridRowJson","catch","e","console","log"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MyGrid from 'util/LogiUtil/MyGrid';\r\n\r\nfunction DeliveryInfo(props) {\r\n    const [list, setList] = useState();\r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: '납품번호', field: 'deliveryNo' },\r\n            { headerName: '견적번호', field: 'estimateNo', hide: true },\r\n            { headerName: '수주번호', field: 'contractNo', hide: true },\r\n            { headerName: '수주상세일련번호', field: 'contractDetailNo', hide: true },\r\n            { headerName: '거래처코드', field: 'customerCode', hide: true },\r\n            { headerName: '처리자코드', field: 'personCodeInCharge' },\r\n            { headerName: '품목코드', field: 'itemCode', hide: true },\r\n            { headerName: '품목명', field: 'itemName' },\r\n            { headerName: '단위', field: 'unitOfDelivery' },\r\n            { headerName: '납품수량', field: 'deliveryAmount' },\r\n            {\r\n                headerName: '단가',\r\n                field: 'unitPrice',\r\n                cellRenderer: function(params) {\r\n                    var num = params.value + '';\r\n                    var point = num.length % 3;\r\n                    var len = num.length;\r\n                    var str = num.substring(0, point);\r\n                    while (point < len) {\r\n                        if (str != '') str += ',';\r\n                        str += num.substring(point, point + 3);\r\n                        point += 3;\r\n                    }\r\n                    return str;\r\n                }\r\n            },\r\n            {\r\n                headerName: '총액',\r\n                field: 'sumPrice',\r\n                cellRenderer: function(params) {\r\n                    var num = params.value + '';\r\n                    var point = num.length % 3;\r\n                    var len = num.length;\r\n                    var str = num.substring(0, point);\r\n                    while (point < len) {\r\n                        if (str != '') str += ',';\r\n                        str += num.substring(point, point + 3);\r\n                        point += 3;\r\n                    }\r\n                    return str;\r\n                }\r\n            },\r\n            { headerName: '납품날짜', field: 'deliverydate' },\r\n            { headerName: '배송지', field: 'deliveryPlaceName' },\r\n            { headerName: '마감여부', field: 'finalizeStatus' }\r\n        ]\r\n    };\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8282/logi/logistics/sales/searchDeliveryInfoList')\r\n            .then(response => {\r\n                setList(response.data.gridRowJson);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }, []);\r\n    return <MyGrid column={column} title={'납품 현황'} list={list} size={'68vh'}></MyGrid>;\r\n}\r\n\r\nexport default DeliveryInfo;\r\n"]},"metadata":{},"sourceType":"module"}