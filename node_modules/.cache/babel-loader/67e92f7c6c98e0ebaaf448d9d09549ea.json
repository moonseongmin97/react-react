{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\attendance\\\\page\\\\CorporateEducation\\\\EduAttendeeGrid.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport $ from \"jquery\";\nimport \"jquery-ui/ui/widgets/datepicker\";\nimport \"jquery-ui-dist/jquery-ui.css\";\nimport \"./CorporateEducation.css\";\nimport AttendeeDialog from \"./attendeeDialog\";\nimport { Button } from \"@material-ui/core\";\nconst rowHeight = \"35\";\nconst initialValue = {\n  classCode: \"\",\n  empNo: \"\",\n  empName: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  totalHours: \"\",\n  attendanceScore: \"\",\n  testScore: \"\",\n  totalScore: \"\",\n  actualCharge: \"\",\n  status: \"\",\n  cost: \"\"\n};\n\nconst EduAttendeeDetail = ({\n  data,\n  classList,\n  attendeeList,\n  deleteAttendeeRequest,\n  updateAttendeeRequest,\n  attendeeListRequest,\n  classBriefRequest,\n  handleFormSubmit\n}) => {\n  var classNameOld = sessionStorage.getItem(\"classinfo-className\");\n  var classCodeOld = sessionStorage.getItem(\"classinfo-classCode\");\n  console.log(\"classCodeOld\", classCodeOld);\n  console.log(\"classNameOld\", classNameOld);\n  const [reload, setReload] = useState(false);\n  useEffect(() => {\n    getAttendeeList(classCodeOld);\n  }, [reload]);\n\n  const getAttendeeList = classCode => {\n    if (reload === true) {\n      attendeeListRequest({\n        classCode: classCode\n      });\n      setReload(false);\n    }\n  };\n\n  const Grid = [{\n    headerName: \"교육코드\",\n    field: \"classCode\",\n    editable: false,\n    hide: true\n  }, {\n    headerName: \"사원번호\",\n    field: \"empNo\",\n    editable: false\n  }, {\n    headerName: \"사원명\",\n    field: \"empName\",\n    editable: false\n  }, {\n    headerName: \"시작일\",\n    field: \"startDate\",\n    editable: true,\n    cellEditor: \"datePicker\"\n  }, {\n    headerName: \"종료일\",\n    field: \"endDate\",\n    editable: true,\n    cellEditor: \"datePicker\"\n  }, {\n    headerName: \"교육시간\",\n    field: \"totalHours\",\n    editable: true\n  }, {\n    headerName: \"출석점수\",\n    field: \"attendanceScore\",\n    editable: true\n  }, {\n    headerName: \"평가점수\",\n    field: \"testScore\",\n    editable: true\n  }, {\n    headerName: \"총점\",\n    field: \"totalScore\",\n    editable: true\n  }, {\n    headerName: \"교육비용\",\n    field: \"cost\",\n    editable: true\n  }, {\n    headerName: \"실부담금\",\n    field: \"actualCharge\",\n    editable: true\n  }, {\n    headerName: \"이수여부\",\n    field: \"status\",\n    editable: true\n  }];\n  const defaultColDef = {\n    sortable: true,\n    flex: 1,\n    cellClass: \"grid-cell-centered\"\n  };\n  const buttonStyle = {\n    marginBottom: \"12px\",\n    marginRight: \"5px\",\n    color: 'white',\n    backgroundColor: 'powderblue'\n  };\n\n  function getDatePicker() {\n    function Datepicker() {}\n\n    Datepicker.prototype.init = function (params) {\n      this.eInput = document.createElement(\"input\");\n      this.eInput.value = params.value;\n      this.eInput.classList.add(\"ag-input\");\n      this.eInput.style.height = \"100%\";\n      $(this.eInput).datepicker({\n        dateFormat: \"yy-mm-dd\"\n      });\n    };\n\n    Datepicker.prototype.getGui = function () {\n      return this.eInput;\n    };\n\n    Datepicker.prototype.afterGuiAttached = function () {\n      this.eInput.focus();\n      this.eInput.select();\n    };\n\n    Datepicker.prototype.getValue = function () {\n      return this.eInput.value;\n    };\n\n    Datepicker.prototype.destroy = function () {};\n\n    Datepicker.prototype.isPopup = function () {\n      return false;\n    };\n\n    return Datepicker;\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [formData, setFormData] = useState(initialValue);\n  const [deleteParam, setDeleteParam] = useState({\n    classCode: \"\",\n    empNo: \"\"\n  });\n  const [updateParam, setUpdateParam] = useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFormData(initialValue);\n  };\n\n  const onChange = e => {\n    const {\n      value,\n      id\n    } = e.target; //console.log(\"onchange\", value, id);\n\n    setFormData({ ...formData,\n      [id]: value\n    });\n  };\n\n  const handleUpdate = oldData => {\n    setUpdateParam(oldData);\n    const confirm = window.confirm(\"선택한 행을 수정하시겠습니까?\", oldData);\n\n    if (confirm) {\n      updateAttendeeRequest(updateParam);\n      setReload(true); //getAttendeeList(classCodeOld);\n      //console.log(\"updateParam\",updateParam)\n    }\n  };\n\n  const onSelectionChanged = event => {\n    //console.log(\"되냐??????\",event.api.getSelectedRows());\n    var selectedRow = event.api.getSelectedRows();\n    var selectedempNo = event.api.getSelectedRows()[0].empNo;\n    var selectedclasscode = event.api.getSelectedRows()[0].classCode;\n    setDeleteParam({\n      empNo: selectedempNo,\n      classCode: selectedclasscode\n    });\n    setUpdateParam(...selectedRow);\n  }; //deleting a user\n\n\n  const handleDelete = deleteParam => {\n    setReload(false);\n    const confirm = window.confirm(\"선택한 행을 삭제하시겠습니까?\", deleteParam);\n\n    if (confirm) {\n      deleteAttendeeRequest(deleteParam);\n      setReload(true); //getAttendeeList(classCodeOld);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    direction: \"row\",\n    style: {\n      height: \"500px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: buttonStyle,\n    onClick: () => handleUpdate(updateParam),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"\\uC218\\uC815\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: buttonStyle,\n    onClick: () => handleDelete(deleteParam),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\")), React.createElement(\"div\", {\n    className: \"ag-theme-balham\",\n    style: {\n      height: \"400px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    width: \"90%\",\n    columnDefs: Grid,\n    rowData: data,\n    rowHeight: rowHeight,\n    defaultColDef: defaultColDef,\n    rowSelection: \"single\",\n    getAttendeeList: getAttendeeList,\n    handleUpdate: handleUpdate,\n    handleDelete: handleDelete,\n    onSelectionChanged: onSelectionChanged,\n    components: {\n      datePicker: getDatePicker()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(AttendeeDialog, {\n    open: open,\n    handleClose: handleClose,\n    data: formData,\n    onChange: onChange,\n    handleUpdate: handleUpdate,\n    getDatePicker: getDatePicker,\n    components: {\n      datePicker: getDatePicker()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }))));\n};\n\nexport default EduAttendeeDetail;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/attendance/page/CorporateEducation/EduAttendeeGrid.js"],"names":["React","useEffect","useState","AgGridReact","$","AttendeeDialog","Button","rowHeight","initialValue","classCode","empNo","empName","startDate","endDate","totalHours","attendanceScore","testScore","totalScore","actualCharge","status","cost","EduAttendeeDetail","data","classList","attendeeList","deleteAttendeeRequest","updateAttendeeRequest","attendeeListRequest","classBriefRequest","handleFormSubmit","classNameOld","sessionStorage","getItem","classCodeOld","console","log","reload","setReload","getAttendeeList","Grid","headerName","field","editable","hide","cellEditor","defaultColDef","sortable","flex","cellClass","buttonStyle","marginBottom","marginRight","color","backgroundColor","getDatePicker","Datepicker","prototype","init","params","eInput","document","createElement","value","add","style","height","datepicker","dateFormat","getGui","afterGuiAttached","focus","select","getValue","destroy","isPopup","open","setOpen","formData","setFormData","deleteParam","setDeleteParam","updateParam","setUpdateParam","handleClickOpen","handleClose","onChange","e","id","target","handleUpdate","oldData","confirm","window","onSelectionChanged","event","selectedRow","api","getSelectedRows","selectedempNo","selectedclasscode","handleDelete","width","justifyContent","textAlign","datePicker"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\nimport $ from \"jquery\";\r\nimport \"jquery-ui/ui/widgets/datepicker\";\r\nimport \"jquery-ui-dist/jquery-ui.css\";\r\nimport \"./CorporateEducation.css\";\r\nimport AttendeeDialog from \"./attendeeDialog\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst rowHeight = \"35\";\r\n\r\nconst initialValue = {\r\n  classCode: \"\",\r\n  empNo:\"\",\r\n  empName:\"\",\r\n  startDate: \"\",\r\n  endDate: \"\",\r\n  totalHours:\"\",\r\n  attendanceScore: \"\",\r\n  testScore:\"\",\r\n  totalScore: \"\",\r\n  actualCharge:\"\",\r\n  status:\"\",\r\n  cost: \"\",\r\n};\r\n\r\nconst EduAttendeeDetail = ({\r\n  data,\r\n  classList,\r\n  attendeeList,\r\n  deleteAttendeeRequest,\r\n  updateAttendeeRequest,\r\n  attendeeListRequest,\r\n  classBriefRequest,\r\n  handleFormSubmit\r\n}) => {\r\n\r\n  var classNameOld = sessionStorage.getItem(\"classinfo-className\");\r\n  var classCodeOld = sessionStorage.getItem(\"classinfo-classCode\");\r\n  console.log(\"classCodeOld\",classCodeOld)\r\n  console.log(\"classNameOld\",classNameOld)\r\n\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAttendeeList(classCodeOld)\r\n  }, [reload]);\r\n\r\n  const getAttendeeList = (classCode) => {\r\n    if(reload===true){\r\n      attendeeListRequest({\r\n        classCode:classCode,\r\n      });\r\n      setReload(false);\r\n      }\r\n    }\r\n\r\n  const Grid = [\r\n    {\r\n      headerName: \"교육코드\",\r\n      field: \"classCode\",\r\n      editable: false,\r\n      hide:true,\r\n    },\r\n    {\r\n      headerName: \"사원번호\",\r\n      field: \"empNo\",\r\n      editable: false,\r\n    },\r\n    {\r\n      headerName: \"사원명\",\r\n      field: \"empName\",\r\n      editable: false,\r\n    },\r\n    {\r\n      headerName: \"시작일\",\r\n      field: \"startDate\",\r\n      editable: true,\r\n      cellEditor: \"datePicker\",\r\n    },\r\n    {\r\n      headerName: \"종료일\",\r\n      field: \"endDate\",\r\n      editable: true,\r\n      cellEditor: \"datePicker\",\r\n    },\r\n    {\r\n      headerName: \"교육시간\",\r\n      field: \"totalHours\",\r\n      editable: true,\r\n    },\r\n    {\r\n      headerName: \"출석점수\",\r\n      field: \"attendanceScore\",\r\n      editable: true,\r\n    },{\r\n      headerName: \"평가점수\",\r\n      field: \"testScore\",\r\n      editable: true,\r\n    },\r\n    {\r\n      headerName: \"총점\",\r\n      field: \"totalScore\",\r\n      editable: true,\r\n    },\r\n    {\r\n      headerName: \"교육비용\",\r\n      field: \"cost\",\r\n      editable: true,\r\n    },\r\n    {\r\n      headerName: \"실부담금\",\r\n      field: \"actualCharge\",\r\n      editable: true,\r\n    },\r\n    {\r\n      headerName: \"이수여부\",\r\n      field: \"status\",\r\n      editable: true,\r\n    },\r\n  ];\r\n\r\n  const defaultColDef = {\r\n    sortable: true,\r\n    flex: 1,\r\n    cellClass: \"grid-cell-centered\",\r\n  };\r\n  \r\n  const buttonStyle = {\r\n    marginBottom: \"12px\", \r\n    marginRight:\"5px\", \r\n    color:'white', \r\n    backgroundColor:'powderblue',\r\n  };\r\n\r\n  function getDatePicker() {\r\n    function Datepicker() {}\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement(\"input\");\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add(\"ag-input\");\r\n      this.eInput.style.height = \"100%\";\r\n      $(this.eInput).datepicker({ dateFormat: \"yy-mm-dd\" });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () {};\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [formData, setFormData] = useState(initialValue);\r\n  const [deleteParam, setDeleteParam] = useState({classCode:\"\",empNo:\"\"});\r\n  const [updateParam, setUpdateParam] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setFormData(initialValue);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { value, id } = e.target;\r\n    //console.log(\"onchange\", value, id);\r\n    setFormData({ ...formData, [id]: value });\r\n  };\r\n\r\n  const handleUpdate = (oldData) => {\r\n    setUpdateParam(oldData)\r\n    const confirm = window.confirm(\r\n    \"선택한 행을 수정하시겠습니까?\", oldData\r\n    );\r\n   \r\n    if (confirm) {\r\n      updateAttendeeRequest(updateParam);\r\n      setReload(true);\r\n      //getAttendeeList(classCodeOld);\r\n      //console.log(\"updateParam\",updateParam)\r\n    }\r\n  };\r\n\r\n  const onSelectionChanged=(event)=>{\r\n    //console.log(\"되냐??????\",event.api.getSelectedRows());\r\n    var selectedRow=event.api.getSelectedRows()\r\n    var selectedempNo=event.api.getSelectedRows()[0].empNo\r\n    var selectedclasscode=event.api.getSelectedRows()[0].classCode\r\n    setDeleteParam({empNo:selectedempNo,classCode:selectedclasscode})\r\n    setUpdateParam(...selectedRow)\r\n}\r\n\r\n  //deleting a user\r\n  const handleDelete = (deleteParam) => {\r\n    setReload(false);\r\n    const confirm = window.confirm(\r\n      \"선택한 행을 삭제하시겠습니까?\", deleteParam\r\n    );\r\n      \r\n    if (confirm) {\r\n      deleteAttendeeRequest(deleteParam);\r\n      setReload(true);\r\n      //getAttendeeList(classCodeOld);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div direction=\"row\"  style={{\r\n      height: \"500px\",\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",}}>\r\n\r\n    <div align=\"right\" >\r\n      <Button variant=\"contained\" style={buttonStyle} onClick={()=>handleUpdate(updateParam)}>수정</Button>\r\n      <Button variant=\"contained\" style={buttonStyle} onClick={()=>handleDelete(deleteParam)}>삭제</Button>\r\n    </div>\r\n        \r\n    <div className={\"ag-theme-balham\"}\r\n      style={{\r\n      height: \"400px\",\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    }}>\r\n\r\n      <AgGridReact\r\n        width=\"90%\"\r\n        columnDefs={Grid}\r\n        rowData={data}\r\n        rowHeight={rowHeight}\r\n        defaultColDef={defaultColDef}\r\n        rowSelection=\"single\"\r\n        getAttendeeList={getAttendeeList}\r\n        handleUpdate={handleUpdate}\r\n        handleDelete={handleDelete}\r\n        onSelectionChanged={onSelectionChanged}\r\n        components={{datePicker: getDatePicker()}}\r\n      />\r\n\r\n      <AttendeeDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        data={formData}\r\n        onChange={onChange}\r\n        handleUpdate={handleUpdate}\r\n        getDatePicker={getDatePicker}\r\n        components={{datePicker: getDatePicker()}}\r\n      />\r\n      </div>\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default EduAttendeeDetail;\r\n"]},"metadata":{},"sourceType":"module"}