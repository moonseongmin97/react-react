{"ast":null,"code":"import { useReducer, useEffect } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n\n    case 'ERROR':\n      return {\n        loading: false,\n        data: null,\n        error: action.error\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nfunction useAsync(callback, deps = [], skip = false) {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: false\n  });\n\n  const fetchData = async param => {\n    console.log(param);\n    dispatch({\n      type: 'LOADING'\n    });\n\n    try {\n      const data = await callback(param);\n      dispatch({\n        type: 'SUCCESS',\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: 'ERROR',\n        error: e\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (skip) return;\n    fetchData(); // eslint 설정을 다음 줄에서만 비활성화\n    // eslint-disable-next-line\n  }, deps);\n  return [state, fetchData];\n}\n\nexport default useAsync;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/util/useAsync.js"],"names":["useReducer","useEffect","reducer","state","action","type","loading","data","error","Error","useAsync","callback","deps","skip","dispatch","fetchData","param","console","log","e"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,SAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBL,MAAM,CAACC,IAAK,EAAhD,CAAN;AApBJ;AAsBD;;AAED,SAASK,QAAT,CAAkBC,QAAlB,EAA4BC,IAAI,GAAG,EAAnC,EAAuCC,IAAI,GAAG,KAA9C,EAAqD;AACnD,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBd,UAAU,CAACE,OAAD,EAAU;AAC5CI,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA,KAAK,EAAE;AAHqC,GAAV,CAApC;;AAMA,QAAMO,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAME,IAAI,GAAG,MAAMI,QAAQ,CAACK,KAAD,CAA3B;AACAF,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,SAAR;AAAmBE,QAAAA;AAAnB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOY,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,KAAK,EAAEW;AAAxB,OAAD,CAAR;AACD;AACF,GATD;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAJ,EAAU;AACVE,IAAAA,SAAS,GAFK,CAGd;AACA;AACD,GALQ,EAKNH,IALM,CAAT;AAOA,SAAO,CAACT,KAAD,EAAQY,SAAR,CAAP;AACD;;AAED,eAAeL,QAAf","sourcesContent":["import { useReducer, useEffect } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n    case 'ERROR':\n      return {\n        loading: false,\n        data: null,\n        error: action.error\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nfunction useAsync(callback, deps = [], skip = false) {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: false\n  });\n\n  const fetchData = async (param) => {\n    console.log(param)\n    dispatch({ type: 'LOADING' });\n    try {\n      const data = await callback(param);\n      dispatch({ type: 'SUCCESS', data });\n    } catch (e) {\n      dispatch({ type: 'ERROR', error: e });\n    }\n  };\n\n  useEffect(() => {\n    if (skip) return;\n    fetchData();\n    // eslint 설정을 다음 줄에서만 비활성화\n    // eslint-disable-next-line\n  }, deps);\n\n  return [state, fetchData];\n}\n\nexport default useAsync;"]},"metadata":{},"sourceType":"module"}