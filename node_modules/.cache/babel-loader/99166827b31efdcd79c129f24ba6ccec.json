{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\outsourc\\\\page\\\\Order\\\\OrderInfo.js\";\nimport React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport { today } from 'erp/hr/util/lib';\nimport Swal from 'sweetalert2';\nimport OutSourcInfoColumn from './OutSourcInfoColumn';\nimport useAsync from 'util/useAsync';\nimport moment from 'moment';\nimport * as api from '../../api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from \"axios\";\n\nconst OrderInfo = () => {\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(today);\n  const [condition, setCondition] = useState('claimDate');\n  const [outsoutcInfoList, outsourcInfoListFetch] = useAsync(param => api.searchOutsourcInfoList(param), [], true);\n\n  const basicInfo = (startDate, endDate) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const onChangeDate = e => {\n    console.log(e);\n\n    if (e.target.id === 'startDate') {\n      setStartDate(e.target.value);\n    } else {\n      setEndDate(e.target.value);\n    }\n  };\n\n  const onClicked = useCallback(() => {\n    const param = {\n      searchDateCondition: condition,\n      startDate: startDate,\n      endDate: endDate\n    };\n    outsourcInfoListFetch(param);\n  }, [condition, endDate, outsourcInfoListFetch, startDate]);\n\n  const conditionChange = e => {\n    setCondition(e.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: OutSourcInfoColumn,\n    title: '외주 발주 조회',\n    onCellClicked: undefined,\n    rowSelection: \"single\",\n    components: {\n      datePicker: getDatePicker()\n    },\n    list: outsoutcInfoList.data ? outsoutcInfoList.data.gridRowJson : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    align: \"left\",\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"searchDateCondition\",\n    name: \"searchDateCondition\",\n    defaultValue: \"claimDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"claimDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"dueDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uC644\\uB8CC\\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    basicInfo: basicInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC \\uBC1C\\uC8FC \\uC870\\uD68C\")));\n};\n\nexport default OrderInfo;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/outsourc/page/Order/OrderInfo.js"],"names":["React","useState","useCallback","MyCalendar","MyGrid","Button","getDatePicker","today","Swal","OutSourcInfoColumn","useAsync","moment","api","Radio","RadioGroup","FormControlLabel","axios","OrderInfo","Date","format","startDate","setStartDate","endDate","setEndDate","condition","setCondition","outsoutcInfoList","outsourcInfoListFetch","param","searchOutsourcInfoList","basicInfo","onChangeDate","e","console","log","target","id","value","onClicked","searchDateCondition","conditionChange","undefined","datePicker","data","gridRowJson","float","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport { today } from 'erp/hr/util/lib';\nimport Swal from 'sweetalert2';\nimport OutSourcInfoColumn from './OutSourcInfoColumn';\nimport useAsync from 'util/useAsync';\nimport moment from 'moment';\nimport * as api from '../../api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from \"axios\";\n\nconst OrderInfo = () => {\n\n    let today = moment(new Date()).format('yyyy-MM-DD');\n    const [startDate, setStartDate] = useState(today);\n    const [endDate, setEndDate] = useState(today);\n    const [condition, setCondition] = useState('claimDate');\n\n    const [outsoutcInfoList, outsourcInfoListFetch] = useAsync((param) =>api.searchOutsourcInfoList(param), [], true);\n\n    const basicInfo = (startDate, endDate) => {\n        setStartDate(startDate);\n        setEndDate(endDate);\n    };\n\n    const onChangeDate = e => {\n        console.log(e);\n        if (e.target.id === 'startDate') {\n            setStartDate(e.target.value);\n        } else {\n            setEndDate(e.target.value);\n        }\n    };\n\n    const onClicked = useCallback(() =>{\n        const param = {\n            searchDateCondition: condition,\n            startDate: startDate,\n            endDate: endDate\n        }\n       outsourcInfoListFetch(param);\n\n    },[condition, endDate, outsourcInfoListFetch, startDate]);\n\n    const conditionChange = e => {\n        setCondition(e.target.value);\n    };\n\n    return (\n        <>\n            <MyGrid\n                column={OutSourcInfoColumn}\n                title={'외주 발주 조회'}\n                onCellClicked={undefined}\n                rowSelection=\"single\"\n                components={{ datePicker: getDatePicker() }}\n                list={outsoutcInfoList.data?outsoutcInfoList.data.gridRowJson:null}\n            >\n                                <div align=\"left\" style={{ float: 'left' }}>\n                    <RadioGroup\n                        row\n                        aria-label=\"searchDateCondition\"\n                        name=\"searchDateCondition\"\n                        defaultValue=\"claimDate\"\n                    >\n                        <FormControlLabel\n                            value=\"claimDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                        <FormControlLabel\n                            value=\"dueDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 완료기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                    </RadioGroup>\n                </div>\n                <MyCalendar onChangeDate={onChangeDate} basicInfo={basicInfo}/>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={onClicked}\n                >\n                    외주 발주 조회\n                </Button>\n            </MyGrid>\n        </>\n    );\n};\n\nexport default OrderInfo;"]},"metadata":{},"sourceType":"module"}