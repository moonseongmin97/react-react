{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\common\\\\page\\\\dashboard\\\\covid\\\\Contents.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\nimport Axios from 'axios';\n\nfunction Contents() {\n  const [confirmedData, setconfirmedData] = useState({});\n  const [qurantinedData, setqurantinedData] = useState({});\n  const [comparedData, setcomparedData] = useState({});\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const res = await Axios.get('https://api.covid19api.com/total/dayone/country/kr');\n      makeData(res.data);\n    };\n\n    const makeData = items => {\n      const arr = items.reduce((acc, cur) => {\n        const currentDate = new Date(cur.Date);\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        const date = currentDate.getDate();\n        const confirmed = cur.Confirmed;\n        const active = cur.Active;\n        const death = cur.Deaths;\n        const recovered = cur.Recovered;\n        const findItem = acc.find(a => a.year === year && a.month === month);\n\n        if (!findItem) {\n          acc.push({\n            year,\n            month,\n            date,\n            confirmed,\n            active,\n            death,\n            recovered\n          });\n        }\n\n        if (findItem && findItem.date < date) {\n          findItem.active = active;\n          findItem.death = death;\n          findItem.date = date;\n          findItem.year = year;\n          findItem.month = month;\n          findItem.recovered = recovered;\n          findItem.confirmed = confirmed;\n        }\n\n        return acc;\n      }, []);\n      const labels = arr.map(a => `${a.month + 1}월`);\n      setconfirmedData({\n        labels,\n        datasets: [{\n          label: '국내 누적 확진자',\n          backgroundColor: 'salmon',\n          fill: true,\n          data: arr.map(a => a.active)\n        }]\n      });\n      setqurantinedData({\n        labels,\n        datasets: [{\n          label: '월별 격리자 현황',\n          borderColor: 'salmon',\n          fill: false,\n          data: arr.map(a => a.death)\n        }]\n      });\n      const last = arr[arr.length - 1];\n      setcomparedData({\n        labels: ['확진자', '격리해제', '사망'],\n        datasets: [{\n          label: '누적 확진, 해제, 사망 비율',\n          backgroundColor: ['#ff3d67', '#059bff', '#ffc233'],\n          borderColor: ['#ff3d67', '#059bff', '#ffc233'],\n          fill: false,\n          data: [last.confirmed, last.recovered, last.death]\n        }]\n      });\n    };\n\n    fetchEvents();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uAD6D\\uB0B4 \\uCF54\\uB85C\\uB098 \\uD604\\uD669\"), React.createElement(\"div\", {\n    className: \"contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    data: confirmedData,\n    options: ({\n      titile: {\n        display: true,\n        text: '누적 확진자 추이',\n        fontsize: 16\n      }\n    }, {\n      legend: {\n        display: true,\n        position: 'bottom'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: qurantinedData,\n    options: ({\n      titile: {\n        display: true,\n        text: '월별 격리자 현황',\n        fontsize: 16\n      }\n    }, {\n      legend: {\n        display: true,\n        position: 'bottom'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: comparedData,\n    options: ({\n      titile: {\n        display: true,\n        text: `누적 확진, 해제, 사망 (${new Date().getMonth + 1}월)`,\n        fontsize: 16\n      }\n    }, {\n      legend: {\n        display: true,\n        position: 'bottom'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))));\n}\n\nexport default Contents;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/common/page/dashboard/covid/Contents.js"],"names":["React","useState","useEffect","Bar","Doughnut","Line","Axios","Contents","confirmedData","setconfirmedData","qurantinedData","setqurantinedData","comparedData","setcomparedData","fetchEvents","res","get","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","a","push","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","titile","display","text","fontsize","legend","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\nimport Axios from 'axios';\r\n\r\nfunction Contents() {\r\n    const [confirmedData, setconfirmedData] = useState({});\r\n    const [qurantinedData, setqurantinedData] = useState({});\r\n    const [comparedData, setcomparedData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            const res = await Axios.get('https://api.covid19api.com/total/dayone/country/kr');\r\n            makeData(res.data);\r\n        };\r\n        const makeData = items => {\r\n            const arr = items.reduce((acc, cur) => {\r\n                const currentDate = new Date(cur.Date);\r\n                const year = currentDate.getFullYear();\r\n                const month = currentDate.getMonth();\r\n                const date = currentDate.getDate();\r\n                const confirmed = cur.Confirmed;\r\n                const active = cur.Active;\r\n                const death = cur.Deaths;\r\n                const recovered = cur.Recovered;\r\n\r\n                const findItem = acc.find(a => a.year === year && a.month === month);\r\n                if (!findItem) {\r\n                    acc.push({\r\n                        year,\r\n                        month,\r\n                        date,\r\n                        confirmed,\r\n                        active,\r\n                        death,\r\n                        recovered\r\n                    });\r\n                }\r\n                if (findItem && findItem.date < date) {\r\n                    findItem.active = active;\r\n                    findItem.death = death;\r\n                    findItem.date = date;\r\n                    findItem.year = year;\r\n                    findItem.month = month;\r\n                    findItem.recovered = recovered;\r\n                    findItem.confirmed = confirmed;\r\n                }\r\n                return acc;\r\n            }, []);\r\n\r\n            const labels = arr.map(a => `${a.month + 1}월`);\r\n            setconfirmedData({\r\n                labels,\r\n                datasets: [\r\n                    {\r\n                        label: '국내 누적 확진자',\r\n                        backgroundColor: 'salmon',\r\n                        fill: true,\r\n                        data: arr.map(a => a.active)\r\n                    }\r\n                ]\r\n            });\r\n            setqurantinedData({\r\n                labels,\r\n                datasets: [\r\n                    {\r\n                        label: '월별 격리자 현황',\r\n                        borderColor: 'salmon',\r\n                        fill: false,\r\n                        data: arr.map(a => a.death)\r\n                    }\r\n                ]\r\n            });\r\n            const last = arr[arr.length - 1];\r\n            setcomparedData({\r\n                labels: ['확진자', '격리해제', '사망'],\r\n                datasets: [\r\n                    {\r\n                        label: '누적 확진, 해제, 사망 비율',\r\n                        backgroundColor: ['#ff3d67', '#059bff', '#ffc233'],\r\n                        borderColor: ['#ff3d67', '#059bff', '#ffc233'],\r\n                        fill: false,\r\n                        data: [last.confirmed, last.recovered, last.death]\r\n                    }\r\n                ]\r\n            });\r\n        };\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <h2>국내 코로나 현황</h2>\r\n                <div className=\"contents\">\r\n                    <div>\r\n                        <Bar\r\n                            data={confirmedData}\r\n                            options={\r\n                                ({\r\n                                    titile: {\r\n                                        display: true,\r\n                                        text: '누적 확진자 추이',\r\n                                        fontsize: 16\r\n                                    }\r\n                                },\r\n                                { legend: { display: true, position: 'bottom' } })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Line\r\n                            data={qurantinedData}\r\n                            options={\r\n                                ({\r\n                                    titile: {\r\n                                        display: true,\r\n                                        text: '월별 격리자 현황',\r\n                                        fontsize: 16\r\n                                    }\r\n                                },\r\n                                { legend: { display: true, position: 'bottom' } })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Doughnut\r\n                            data={comparedData}\r\n                            options={\r\n                                ({\r\n                                    titile: {\r\n                                        display: true,\r\n                                        text: `누적 확진, 해제, 사망 (${new Date().getMonth +\r\n                                            1}월)`,\r\n                                        fontsize: 16\r\n                                    }\r\n                                },\r\n                                { legend: { display: true, position: 'bottom' } })\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contents;\r\n"]},"metadata":{},"sourceType":"module"}