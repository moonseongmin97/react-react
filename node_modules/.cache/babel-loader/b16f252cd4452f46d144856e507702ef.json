{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\production\\\\page\\\\MRP\\\\MrpInfo.js\";\nimport React, { useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Axios from 'axios';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport moment from 'moment';\n\nfunction MrpInfo(props) {\n  const [list, setList] = useState([]);\n  const columns = {\n    columnDefs: [{\n      headerName: '소요량취합번호',\n      field: 'mrpGatheringNo'\n    }, {\n      headerName: '구매 및 생산여부',\n      field: 'orderOrProductionStatus'\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode'\n    }, {\n      headerName: '품목명',\n      field: 'itemName'\n    }, {\n      headerName: '단위',\n      field: 'unitOfMrpGathering'\n    }, {\n      headerName: '필요수량',\n      field: 'necessaryAmount'\n    }, {\n      headerName: '납기일',\n      field: 'dueDate'\n    }, {\n      headerName: '지시일',\n      field: 'claimDate'\n    }]\n  };\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(today);\n  const [condition, setCondition] = useState('claimDate');\n\n  const basicInfo = (startDate, endDate) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const onChangeDate = e => {\n    console.log(e);\n\n    if (e.target.id === 'startDate') {\n      setStartDate(e.target.value);\n    } else {\n      setEndDate(e.target.value);\n    }\n  };\n\n  const conditionChange = e => {\n    setCondition(e.target.value);\n  };\n\n  const searchClick = () => {\n    try {\n      Axios.get('http://localhost:8282/logi/logistics/production/searchMrpGathering', {\n        params: {\n          searchDateCondition: condition,\n          startDate: startDate,\n          endDate: endDate\n        }\n      }).then(function (respones) {\n        console.log(respones.data.errorMsg);\n        console.log(respones.data.errorCode);\n        setList(respones.data.gridRowJson);\n      });\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(MyGrid, {\n    column: columns,\n    title: '소요량 전개 / 취합 조회',\n    list: list,\n    rowSelection: \"multiple\",\n    onGridReady: event => {\n      event.api.sizeColumnsToFit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    align: \"left\",\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"searchDateCondition\",\n    name: \"searchDateCondition\",\n    defaultValue: \"claimDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"claimDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"dueDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uC644\\uB8CC\\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    basicInfo: basicInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: searchClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uC18C\\uC694\\uB7C9\\uCDE8\\uD569 \\uC870\\uD68C\")));\n}\n\nexport default MrpInfo;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/production/page/MRP/MrpInfo.js"],"names":["React","useState","MyGrid","Button","Radio","RadioGroup","FormControlLabel","Axios","MyCalendar","moment","MrpInfo","props","list","setList","columns","columnDefs","headerName","field","today","Date","format","startDate","setStartDate","endDate","setEndDate","condition","setCondition","basicInfo","onChangeDate","e","console","log","target","id","value","conditionChange","searchClick","get","params","searchDateCondition","then","respones","data","errorMsg","errorCode","gridRowJson","alert","event","api","sizeColumnsToFit","float","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Axios from 'axios';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport moment from 'moment';\n\nfunction MrpInfo(props) {\n    const [list, setList] = useState([]);\n    const columns = {\n        columnDefs: [\n            { headerName: '소요량취합번호', field: 'mrpGatheringNo' },\n            { headerName: '구매 및 생산여부', field: 'orderOrProductionStatus' },\n            { headerName: '품목코드', field: 'itemCode' },\n            { headerName: '품목명', field: 'itemName' },\n            { headerName: '단위', field: 'unitOfMrpGathering' },\n            { headerName: '필요수량', field: 'necessaryAmount' },\n            { headerName: '납기일', field: 'dueDate' },\n            { headerName: '지시일', field: 'claimDate' }\n        ]\n    };\n\n    let today = moment(new Date()).format('yyyy-MM-DD');\n    const [startDate, setStartDate] = useState(today);\n    const [endDate, setEndDate] = useState(today);\n    const [condition, setCondition] = useState('claimDate');\n\n    const basicInfo = (startDate, endDate) => {\n        setStartDate(startDate);\n        setEndDate(endDate);\n    };\n\n    const onChangeDate = e => {\n        console.log(e);\n        if (e.target.id === 'startDate') {\n            setStartDate(e.target.value);\n        } else {\n            setEndDate(e.target.value);\n        }\n    };\n\n    const conditionChange = e => {\n        setCondition(e.target.value);\n    };\n\n    const searchClick = () => {\n        try {\n            Axios.get('http://localhost:8282/logi/logistics/production/searchMrpGathering', {\n                params: {\n                    searchDateCondition: condition,\n                    startDate: startDate,\n                    endDate: endDate\n                }\n            }).then(function(respones) {\n                console.log(respones.data.errorMsg);\n                console.log(respones.data.errorCode);\n\n                setList(respones.data.gridRowJson);\n            });\n        } catch (e) {\n            alert(e);\n        }\n    };\n\n    return (\n        <div>\n            <MyGrid\n                column={columns}\n                title={'소요량 전개 / 취합 조회'}\n                list={list}\n                rowSelection=\"multiple\"\n                onGridReady={event => {\n                    event.api.sizeColumnsToFit();\n                }}\n            >\n                <div align=\"left\" style={{ float: 'left' }}>\n                    <RadioGroup\n                        row\n                        aria-label=\"searchDateCondition\"\n                        name=\"searchDateCondition\"\n                        defaultValue=\"claimDate\"\n                    >\n                        <FormControlLabel\n                            value=\"claimDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                        <FormControlLabel\n                            value=\"dueDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 완료기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                    </RadioGroup>\n                </div>\n                <MyCalendar onChangeDate={onChangeDate} basicInfo={basicInfo} />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={searchClick}\n                >\n                    소요량취합 조회\n                </Button>\n            </MyGrid>\n        </div>\n    );\n}\n\nexport default MrpInfo;\n"]},"metadata":{},"sourceType":"module"}