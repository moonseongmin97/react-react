{"ast":null,"code":"//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@최 예 솔@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n//*************************  일용직 관리 조회 최예솔_211221********************************** */\nexport const SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS = 'dayworker/SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS';\nexport const SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE = 'dayworker/SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE'; //*************************  일용직 관리 조회 종료********************************** */\n// 일용직 등록의 경우 DB에 바로 데이터를 넣는 것이기 때문에 REDUCER에서 처리할 필요가 없다. \n//*************************  일용직 관리 삭제 최예솔_211221********************************** */\n\nexport const DAY_WORKER_DELETE_TYPE_SUCEESS = 'dayworker/DAY_WORKER_DELETE_TYPE_SUCEESS';\nexport const DAY_WORKER_DELETE_TYPE_FAILURE = 'dayworker/DAY_WORKER_DELETE_TYPE_FAILURE'; //*************************  일용직 관리 삭제 종료********************************** */\n\nconst initialState = {\n  dayworkerData: [],\n  errorMsg: '',\n  errorCode: ''\n};\n\nconst dayworker = (state = initialState, action) => {\n  switch (action.type) {\n    //**********일용직 관리 조회 시작 최예솔 2021-12-21*******************************************\n    case SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS:\n      console.log('최예솔 일용직 관리 조회');\n      console.log(action);\n      return { ...state,\n        dayworkerData: action.payload.dayWorkerList //CONTROLLER에 있는 이름이다.\n\n      };\n    // case SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE:\n    //     return {\n    //         ...state,\n    //         errorCode:2,\n    //         errorMsg: '요청값을 받아오는데 실패하였습니다.'\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport default dayworker;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/dayworker/reducer/DayWorkerReducer.js"],"names":["SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS","SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE","DAY_WORKER_DELETE_TYPE_SUCEESS","DAY_WORKER_DELETE_TYPE_FAILURE","initialState","dayworkerData","errorMsg","errorCode","dayworker","state","action","type","console","log","payload","dayWorkerList"],"mappings":"AAAA;AAEA;AACA,OAAO,MAAMA,qCAAqC,GAAG,iDAA9C;AACP,OAAO,MAAMC,qCAAqC,GAAG,iDAA9C,C,CACP;AAEA;AAEA;;AACA,OAAO,MAAMC,8BAA8B,GAAG,0CAAvC;AACP,OAAO,MAAMC,8BAA8B,GAAG,0CAAvC,C,CACP;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKX,qCAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA,aAAa,EAAEK,MAAM,CAACI,OAAP,CAAeC,aAF3B,CAE2C;;AAF3C,OAAP;AAIJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACI,aAAON,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,SAAf","sourcesContent":["//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@최 예 솔@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n\r\n//*************************  일용직 관리 조회 최예솔_211221********************************** */\r\nexport const SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS = 'dayworker/SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS';\r\nexport const SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE = 'dayworker/SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE';\r\n//*************************  일용직 관리 조회 종료********************************** */\r\n\r\n// 일용직 등록의 경우 DB에 바로 데이터를 넣는 것이기 때문에 REDUCER에서 처리할 필요가 없다. \r\n\r\n//*************************  일용직 관리 삭제 최예솔_211221********************************** */\r\nexport const DAY_WORKER_DELETE_TYPE_SUCEESS = 'dayworker/DAY_WORKER_DELETE_TYPE_SUCEESS';\r\nexport const DAY_WORKER_DELETE_TYPE_FAILURE = 'dayworker/DAY_WORKER_DELETE_TYPE_FAILURE';\r\n//*************************  일용직 관리 삭제 종료********************************** */\r\n\r\nconst initialState = {\r\n    dayworkerData: [],\r\n    errorMsg: '',\r\n    errorCode: ''\r\n};\r\n\r\nconst dayworker = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //**********일용직 관리 조회 시작 최예솔 2021-12-21*******************************************\r\n        case SEARCH_DAY_WORKER_SELECT_TYPE_SUCCESS:\r\n            console.log('최예솔 일용직 관리 조회');\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                dayworkerData: action.payload.dayWorkerList   //CONTROLLER에 있는 이름이다.\r\n            }\r\n        // case SEARCH_DAY_WORKER_SELECT_TYPE_FAILURE:\r\n        //     return {\r\n        //         ...state,\r\n        //         errorCode:2,\r\n        //         errorMsg: '요청값을 받아오는데 실패하였습니다.'\r\n        //     }\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dayworker;"]},"metadata":{},"sourceType":"module"}