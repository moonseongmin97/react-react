{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\account\\\\base\\\\page\\\\AccountForm\\\\AccountTreeView.js\";\n//********************************** 2020-08-26 정대현 추가 **********************************\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as types from \"../../reducer/BaseReducer\";\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\",\n    flexGrow: 2,\n    maxWidth: 250\n  }\n});\nlet treeData = {\n  accountLevel: \"\",\n  accountName: \"\",\n  accountCode: \"\",\n  accountCharacter: \"\",\n  accountInnerCode: \"\",\n  parentAccountInnerCode: \"\",\n  accountDivision: \"\",\n  groupCode: \"\",\n  editable: \"\",\n  leaf: \"\"\n};\n\nconst AccountTreeview = ({\n  setAccountInfo,\n  setAccountName\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: types.SEARCH_ACCOUNT_REQUEST\n    });\n  }, []);\n  const data = useSelector(({\n    AccReducer\n  }) => AccReducer.BaseReducer.accountList, []);\n  const classes = useStyles();\n  data.filter((element, index) => {\n    let innerData = { ...treeData\n    };\n\n    if (element.accountName === \"특수계정과목\" || element.accountName === \"사용자설정계정과목\" || element.leaf === \"1\") {\n      return false;\n    }\n\n    if (element.accountLevel === \"0\") {\n      treeData.accountLevel = element.accountLevel;\n      treeData.accountName = element.accountName;\n      treeData.accountCode = element.accountCode;\n      treeData.accountCharacter = element.accountCharacter;\n      treeData.accountInnerCode = element.accountInnerCode;\n      treeData.parentAccountInnerCode = element.parentAccountInnerCode;\n      treeData.accountDivision = element.accountDivision;\n      treeData.groupCode = element.groupCode;\n      treeData.editable = element.editable;\n      treeData.leaf = element.leaf;\n      treeData.children = [];\n    } else {\n      innerData.accountLevel = element.accountLevel;\n      innerData.accountName = element.accountName;\n      innerData.accountCode = element.accountCode;\n      innerData.accountCharacter = element.accountCharacter;\n      innerData.accountInnerCode = element.accountInnerCode;\n      innerData.parentAccountInnerCode = element.parentAccountInnerCode;\n      innerData.accountDivision = element.accountDivision;\n      innerData.groupCode = element.groupCode;\n      innerData.editable = element.editable;\n      innerData.leaf = element.leaf;\n    }\n\n    if (element.leaf !== \"1\") {\n      innerData.children = [];\n    }\n\n    if (element.accountLevel === \"1\") {\n      treeData.children.push(innerData);\n    } else if (element.accountLevel === \"2\" || element.accountLevel === \"3\") {\n      treeData.children.map(e => {\n        if (e.accountInnerCode === element.parentAccountInnerCode) {\n          e.children.push(innerData);\n        } else {\n          e.children.map(ele => {\n            if (ele.accountInnerCode === element.parentAccountInnerCode) {\n              ele.children.push(innerData);\n            }\n          });\n        }\n      });\n    }\n  });\n\n  const renderTree = node => React.createElement(TreeItem, {\n    key: node.accountInnerCode,\n    nodeId: node.accountInnerCode,\n    label: node.accountName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, Array.isArray(node.children) ? node.children.map(node => renderTree(node)) : null);\n\n  let accArr = [];\n\n  const onSelect = (event, value) => {\n    let arr = value.split(\"-\");\n    let firstV = arr[0];\n    let secondV = arr[1];\n    let cal = secondV - firstV;\n    let aName = \"\";\n\n    if (cal < 100) {\n      data.filter((element, index) => {\n        if (element.accountInnerCode === value && (element.accountLevel === \"3\" || element.accountLevel === \"2\")) {\n          aName = element.accountName;\n        }\n\n        if (element.leaf !== \"1\" || element.accountName === \"사용자설정계정과목\") {\n          return false;\n        }\n\n        if (element.parentAccountInnerCode === value) {\n          let accountInfo = {};\n          accountInfo.accountInnerCode = element.accountInnerCode;\n          accountInfo.parentAccountInnerCode = element.parentAccountInnerCode;\n          accountInfo.accountCode = element.accountCode;\n          accountInfo.accountName = element.accountName;\n          accountInfo.accountCharacter = element.accountCharacter;\n          accountInfo.accountDivision = element.accountDivision;\n          accountInfo.groupCode = element.groupCode;\n          accountInfo.editable = element.editable;\n          accArr.push(accountInfo);\n        }\n      });\n    }\n\n    setAccountName(aName);\n    setAccountInfo(accArr);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(TreeView, {\n    className: classes.root,\n    defaultCollapseIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }),\n    defaultExpandIcon: React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }),\n    onNodeSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, renderTree(treeData)));\n};\n\nexport default AccountTreeview;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/account/base/page/AccountForm/AccountTreeView.js"],"names":["React","useEffect","makeStyles","TreeView","ExpandMoreIcon","ChevronRightIcon","TreeItem","useDispatch","useSelector","types","useStyles","root","height","flexGrow","maxWidth","treeData","accountLevel","accountName","accountCode","accountCharacter","accountInnerCode","parentAccountInnerCode","accountDivision","groupCode","editable","leaf","AccountTreeview","setAccountInfo","setAccountName","dispatch","type","SEARCH_ACCOUNT_REQUEST","data","AccReducer","BaseReducer","accountList","classes","filter","element","index","innerData","children","push","map","e","ele","renderTree","node","Array","isArray","accArr","onSelect","event","value","arr","split","firstV","secondV","cal","aName","accountInfo"],"mappings":"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","sourcesContent":["//********************************** 2020-08-26 정대현 추가 **********************************\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as types from \"../../reducer/BaseReducer\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\",\n    flexGrow: 2,\n    maxWidth: 250,\n  },\n});\n\nlet treeData = {\n  accountLevel: \"\",\n  accountName: \"\",\n  accountCode: \"\",\n  accountCharacter: \"\",\n  accountInnerCode: \"\",\n  parentAccountInnerCode: \"\",\n  accountDivision: \"\",\n  groupCode: \"\",\n  editable: \"\",\n  leaf: \"\",\n};\n\nconst AccountTreeview = ({ setAccountInfo, setAccountName }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: types.SEARCH_ACCOUNT_REQUEST });\n  }, []);\n\n  const data = useSelector(({ AccReducer }) => AccReducer.BaseReducer.accountList, []);\n  const classes = useStyles();\n\n  data.filter((element, index) => {\n    let innerData = {\n      ...treeData,\n    };\n\n    if (\n      element.accountName === \"특수계정과목\" ||\n      element.accountName === \"사용자설정계정과목\" ||\n      element.leaf === \"1\"\n    ) {\n      return false;\n    }\n    if (element.accountLevel === \"0\") {\n      treeData.accountLevel = element.accountLevel;\n      treeData.accountName = element.accountName;\n      treeData.accountCode = element.accountCode;\n      treeData.accountCharacter = element.accountCharacter;\n      treeData.accountInnerCode = element.accountInnerCode;\n      treeData.parentAccountInnerCode = element.parentAccountInnerCode;\n      treeData.accountDivision = element.accountDivision;\n      treeData.groupCode = element.groupCode;\n      treeData.editable = element.editable;\n      treeData.leaf = element.leaf;\n      treeData.children = [];\n    } else {\n      innerData.accountLevel = element.accountLevel;\n      innerData.accountName = element.accountName;\n      innerData.accountCode = element.accountCode;\n      innerData.accountCharacter = element.accountCharacter;\n      innerData.accountInnerCode = element.accountInnerCode;\n      innerData.parentAccountInnerCode = element.parentAccountInnerCode;\n      innerData.accountDivision = element.accountDivision;\n      innerData.groupCode = element.groupCode;\n      innerData.editable = element.editable;\n      innerData.leaf = element.leaf;\n    }\n\n    if (element.leaf !== \"1\") {\n      innerData.children = [];\n    }\n\n    if (element.accountLevel === \"1\") {\n      treeData.children.push(innerData);\n    } else if (element.accountLevel === \"2\" || element.accountLevel === \"3\") {\n      treeData.children.map(e => {\n        if (e.accountInnerCode === element.parentAccountInnerCode) {\n          e.children.push(innerData);\n        } else {\n          e.children.map(ele => {\n            if (ele.accountInnerCode === element.parentAccountInnerCode) {\n              ele.children.push(innerData);\n            }\n          });\n        }\n      });\n    }\n  });\n\n  const renderTree = node => (\n    <TreeItem\n      key={node.accountInnerCode}\n      nodeId={node.accountInnerCode}\n      label={node.accountName}\n    >\n      {Array.isArray(node.children)\n        ? node.children.map(node => renderTree(node))\n        : null}\n    </TreeItem>\n  );\n\n  let accArr = [];\n\n  const onSelect = (event, value) => {\n    let arr = value.split(\"-\");\n    let firstV = arr[0];\n    let secondV = arr[1];\n    let cal = secondV - firstV;\n    let aName = \"\";\n    if (cal < 100) {\n      data.filter((element, index) => {\n        if (\n          element.accountInnerCode === value &&\n          (element.accountLevel === \"3\" || element.accountLevel === \"2\")\n        ) {\n          aName = element.accountName;\n        }\n        if (\n          element.leaf !== \"1\" ||\n          element.accountName === \"사용자설정계정과목\"\n        ) {\n          return false;\n        }\n        if (element.parentAccountInnerCode === value) {\n          let accountInfo = {};\n          accountInfo.accountInnerCode = element.accountInnerCode;\n          accountInfo.parentAccountInnerCode = element.parentAccountInnerCode;\n          accountInfo.accountCode = element.accountCode;\n          accountInfo.accountName = element.accountName;\n          accountInfo.accountCharacter = element.accountCharacter;\n          accountInfo.accountDivision = element.accountDivision;\n          accountInfo.groupCode = element.groupCode;\n          accountInfo.editable = element.editable;\n          accArr.push(accountInfo);\n        }\n      });\n    }\n    setAccountName(aName);\n    setAccountInfo(accArr);\n  };\n\n  return (\n    <>\n      <TreeView\n        className={classes.root}\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        onNodeSelect={onSelect}\n      >\n        {renderTree(treeData)}\n      </TreeView>\n    </>\n  );\n};\n\nexport default AccountTreeview;\n"]},"metadata":{},"sourceType":"module"}