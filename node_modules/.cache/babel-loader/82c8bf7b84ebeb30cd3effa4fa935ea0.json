{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\common\\\\page\\\\layout\\\\Sidebar\\\\Sidebar.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as types from '../../../reducer/commonReducer';\nimport { Divider, Drawer, IconButton, List } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { Home as HomeIcon // ArrowBack as ArrowBackIcon,\n} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport PersonIcon from '@material-ui/icons/Person'; // styles\n\nimport useStyles from './styles'; //asdas\n// components\n\nimport MenuStructure from '../menu/menuStructure'; // import AdditionalFuncion from \"common/menu/Page/additionalFunction\";\n\nimport SidebarLink from './components/SidebarLink/SidebarLink';\n\nfunction Sidebar(props) {\n  const dispatch = useDispatch();\n  const isSidebarOpened = useSelector(({\n    sideBarReducer\n  }) => sideBarReducer.isSidebarOpened, []);\n  var classes = useStyles();\n  /*\n  console.log(\"Sidebar.js: \"+props.location);\n  for (let key in props) {\n   console.log(props[key]);\n  }\n  for (let key in props.location) {\n  console.log(props.location[key]);\n  }\n  */\n  // local\n  // var [isPermanent, setPermanent] = useState(true);\n  // useEffect(() => {\n  //   window.addEventListener(\"resize\", handleWindowWidthChange);\n  //   handleWindowWidthChange();\n  //   return () => {\n  //     window.removeEventListener(\"resize\", handleWindowWidthChange);\n  //   };\n  // });\n  // 메뉴바가 아닌 일반적인 기능들을 하게될 메뉴 만들기위한 structure\n\n  const mainStructure = [{\n    id: 0,\n    menuName: '메인 홈',\n    menuUrl: '/app/dashboard',\n    icon: React.createElement(HomeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })\n  }, {\n    id: 100,\n    menuName: '코로나 현황',\n    menuUrl: '/app/dashboard/covid19',\n    icon: React.createElement(EqualizerIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })\n  }, {\n    id: 200,\n    menuName: '찾아 오시는 길',\n    menuUrl: '/app/dashboard/map',\n    icon: React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })\n  }];\n  return React.createElement(Drawer, {\n    backdropprops: {\n      style: {\n        position: 'absolute'\n      }\n    },\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    open: isSidebarOpened,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => dispatch({\n      type: types.TOGGLE_SIDEBAR\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.sidebarList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, mainStructure.map(link => React.createElement(SidebarLink, Object.assign({\n    key: link.id,\n    location: props.location,\n    isSidebarOpened: isSidebarOpened,\n    authorityLevel: \"main\"\n  }, link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))), React.createElement(MenuStructure, {\n    isSidebarOpened: isSidebarOpened,\n    location: props.location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))); // ##################################################################\n  // function handleWindowWidthChange() {\n  //   var windowWidth = window.innerWidth;\n  //   var breakpointWidth = theme.breakpoints.values.md;\n  //   var isSmallScreen = windowWidth < breakpointWidth;\n  //   if (isSmallScreen && isPermanent) {\n  //     setPermanent(false);\n  //   } else if (!isSmallScreen && !isPermanent) {\n  //     setPermanent(true);\n  //   }\n  // }\n}\n\nexport default withRouter(Sidebar);","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/common/page/layout/Sidebar/Sidebar.js"],"names":["React","useDispatch","useSelector","types","Divider","Drawer","IconButton","List","ChevronLeftIcon","Home","HomeIcon","withRouter","EqualizerIcon","PersonIcon","useStyles","MenuStructure","SidebarLink","Sidebar","props","dispatch","isSidebarOpened","sideBarReducer","classes","mainStructure","id","menuName","menuUrl","icon","style","position","drawer","paper","drawerPaper","drawerHeader","type","TOGGLE_SIDEBAR","sidebarList","map","link","location"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as types from '../../../reducer/commonReducer';\nimport { Divider, Drawer, IconButton, List } from '@material-ui/core';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {\n    Home as HomeIcon\n    // ArrowBack as ArrowBackIcon,\n} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\n// styles\nimport useStyles from './styles';\n//asdas\n\n// components\nimport MenuStructure from '../menu/menuStructure';\n// import AdditionalFuncion from \"common/menu/Page/additionalFunction\";\nimport SidebarLink from './components/SidebarLink/SidebarLink';\n\nfunction Sidebar(props) {\n    const dispatch = useDispatch();\n    const isSidebarOpened = useSelector(({ sideBarReducer }) => sideBarReducer.isSidebarOpened, []);\n\n    var classes = useStyles();\n\n    /*\n\n  console.log(\"Sidebar.js: \"+props.location);\n\n  for (let key in props) {\n\n    console.log(props[key]);\n\n}\n\nfor (let key in props.location) {\n\n  console.log(props.location[key]);\n\n}\n*/\n    // local\n    // var [isPermanent, setPermanent] = useState(true);\n\n    // useEffect(() => {\n    //   window.addEventListener(\"resize\", handleWindowWidthChange);\n    //   handleWindowWidthChange();\n\n    //   return () => {\n    //     window.removeEventListener(\"resize\", handleWindowWidthChange);\n    //   };\n    // });\n\n    // 메뉴바가 아닌 일반적인 기능들을 하게될 메뉴 만들기위한 structure\n    const mainStructure = [\n        {\n            id: 0,\n            menuName: '메인 홈',\n            menuUrl: '/app/dashboard',\n            icon: <HomeIcon />\n        },\n        {\n            id: 100,\n            menuName: '코로나 현황',\n            menuUrl: '/app/dashboard/covid19',\n            icon: <EqualizerIcon />\n        },\n        {\n            id: 200,\n            menuName: '찾아 오시는 길',\n            menuUrl: '/app/dashboard/map',\n            icon: <PersonIcon />\n        }\n    ];\n\n    return (\n        <Drawer\n            backdropprops={{ style: { position: 'absolute' } }}\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            classes={{\n                paper: classes.drawerPaper\n            }}\n            open={isSidebarOpened}\n        >\n            <div className={classes.drawerHeader}>\n                <IconButton\n                    onClick={() =>\n                        dispatch({\n                            type: types.TOGGLE_SIDEBAR\n                        })\n                    }\n                >\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List className={classes.sidebarList}>\n                <div>\n                    {mainStructure.map(link => (\n                        <SidebarLink\n                            key={link.id}\n                            location={props.location}\n                            isSidebarOpened={isSidebarOpened}\n                            authorityLevel=\"main\"\n                            {...link}\n                        />\n                    ))}\n                </div>\n                {/* 사이드 바에 홈 */}\n                <MenuStructure isSidebarOpened={isSidebarOpened} location={props.location} />\n                {/* <AdditionalFuncion\n          isSidebarOpened={isSidebarOpened}\n          location={props.location}\n        /> */}\n            </List>\n        </Drawer>\n    );\n\n    // ##################################################################\n    // function handleWindowWidthChange() {\n    //   var windowWidth = window.innerWidth;\n    //   var breakpointWidth = theme.breakpoints.values.md;\n    //   var isSmallScreen = windowWidth < breakpointWidth;\n\n    //   if (isSmallScreen && isPermanent) {\n    //     setPermanent(false);\n    //   } else if (!isSmallScreen && !isPermanent) {\n    //     setPermanent(true);\n    //   }\n    // }\n}\n\nexport default withRouter(Sidebar);\n"]},"metadata":{},"sourceType":"module"}