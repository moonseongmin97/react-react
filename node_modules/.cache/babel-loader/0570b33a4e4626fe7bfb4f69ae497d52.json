{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\affair\\\\page\\\\EmploymentManage\\\\EmploymentManage.js\";\nimport React, { useState, useCallback, memo, useEffect } from 'react';\nimport { Paper, TextField, Button, Grid, AppBar, InputLabel, Typography, Toolbar, MenuItem, Select, FormControl, OutlinedInput, NativeSelect } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport UseStyles from \"./UseStyles\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\nimport useInput from \"util/useInput\";\nimport EmploymentManageInput from \"./EmploymentManageInput\";\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nconst EmploymentManage = props => {\n  const classes = UseStyles();\n  const fromDate = useInput(\"2020-01-01\");\n  const toDate = useInput(\"2020-12-31\");\n  const columnDefs = EmploymentManageInput;\n  const radioValue = useInput();\n  const [checkData, setCheckData] = useState(0);\n  const deptName = useInput();\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8282/hr/base/deptList\").then(response => {\n      console.log(\"list1111\", response.data.list);\n      setList(response.data.list);\n    }).catch(e => {\n      console.log(\"!!!!!!!!!!!!\" + e);\n    });\n  }, []);\n  const selList = list.map(ele => {\n    return React.createElement(MenuItem, {\n      value: ele.deptName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, ele.deptName);\n  });\n\n  const employmentManage = () => {\n    console.log(fromDate.value);\n    console.log(toDate.value);\n    console.log(deptName.value);\n\n    if (deptName.value === undefined) {\n      alert('부서를 선택해 주세요.');\n      return;\n    }\n\n    props.searchEmploymentManageList({\n      deptName: deptName.value,\n      startDate: fromDate.value,\n      endDate: toDate.value\n    });\n  };\n\n  const handleChange = event => {\n    radioValue.setValue(event.target.value);\n    const size = checkData.length;\n\n    for (let a = 0; a < size; a++) {\n      if (event.target.value === '승인') {\n        checkData[a].approvalStatus = 'apploval';\n      } else if (event.target.value === '승인취소') {\n        checkData[a].approvalStatus = 'cancel';\n      } else {\n        checkData[a].applovalStatus = 'return';\n      }\n    }\n  };\n\n  const updateEmploymentManage = () => {\n    props.update(checkData, deptName.value, fromDate.value, toDate.value);\n  };\n\n  const onRowSelected = useCallback(e => {\n    console.log(e.api.getSelectedRows());\n    setCheckData(e.api.getSelectedRows());\n  }, []);\n\n  const onChangeDeptCode = e => {\n    console.log(e.target.value);\n    deptName.setValue(e.target.value);\n  };\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.mainPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\uC7AC\\uC9C1\\uC99D\\uBA85\\uAD00\\uB9AC\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.searchTextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"outlined-cost-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\\uBD80\\uC11C\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    name: \"demo-simple-select-outlined\",\n    onChange: onChangeDeptCode,\n    inputProps: {\n      name: 'labal',\n      id: 'outlined-cost-simple'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, selList)), React.createElement(TextField, {\n    id: \"fromDate\",\n    label: \"신청일자\",\n    type: \"date\",\n    defaultValue: fromDate.value,\n    onChange: fromDate.onChange,\n    className: classes.textField,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), \"~\", React.createElement(TextField, {\n    id: \"toDate\",\n    label: \"신청일자\",\n    type: \"date\",\n    defaultValue: toDate.value,\n    onChange: toDate.onChange,\n    className: classes.textField,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.searchButton,\n    onClick: employmentManage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.radio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"position\",\n    value: radioValue.value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"\\uC2B9\\uC778\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }),\n    label: \"\\uC2B9\\uC778\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"\\uC2B9\\uC778\\uCDE8\\uC18C\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }),\n    label: \"\\uC2B9\\uC778\\uCDE8\\uC18C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"\\uBC18\\uB824\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }),\n    label: \"\\uBC18\\uB824\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    name: \"confirm\",\n    onClick: updateEmploymentManage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"\\uD655\\uC815\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ag-theme-material\",\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: columnDefs,\n    rowData: props.EmploymentManageList,\n    suppressRowClickSelection: \"true\",\n    onRowSelected: onRowSelected,\n    onGridReady: event => {\n      event.api.sizeColumnsToFit();\n    },\n    onGridSizeChanged: event => {\n      event.api.sizeColumnsToFit();\n    },\n    rowSelection: \"multiple\" //여러개선택가능 \n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }))));\n};\n\nexport default EmploymentManage;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/affair/page/EmploymentManage/EmploymentManage.js"],"names":["React","useState","useCallback","memo","useEffect","Paper","TextField","Button","Grid","AppBar","InputLabel","Typography","Toolbar","MenuItem","Select","FormControl","OutlinedInput","NativeSelect","axios","UseStyles","AgGridReact","useInput","EmploymentManageInput","RadioGroup","FormControlLabel","Radio","EmploymentManage","props","classes","fromDate","toDate","columnDefs","radioValue","checkData","setCheckData","deptName","list","setList","get","then","response","console","log","data","catch","e","selList","map","ele","employmentManage","value","undefined","alert","searchEmploymentManageList","startDate","endDate","handleChange","event","setValue","target","size","length","a","approvalStatus","applovalStatus","updateEmploymentManage","update","onRowSelected","api","getSelectedRows","onChangeDeptCode","mainPaper","searchTextField","name","id","onChange","textField","searchButton","radio","height","width","EmploymentManageList","sizeColumnsToFit"],"mappings":"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","sourcesContent":["import React,{useState,useCallback,memo,useEffect} from 'react';\nimport {\n    Paper, TextField, Button, Grid, AppBar, InputLabel, Typography, Toolbar, MenuItem, Select,\n    FormControl, OutlinedInput, NativeSelect\n  } from \"@material-ui/core\"\n  import axios from \"axios\";\n  import UseStyles from \"./UseStyles\";\n  import { AgGridReact } from \"ag-grid-react\";\n  import \"ag-grid-community/dist/styles/ag-grid.css\";\n  import \"ag-grid-community/dist/styles/ag-theme-material.css\";\n  import useInput from \"util/useInput\";\n  import EmploymentManageInput from \"./EmploymentManageInput\";\n  import RadioGroup from '@material-ui/core/RadioGroup';\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\n  import Radio from '@material-ui/core/Radio';\n\n\n\nconst EmploymentManage=(props)=>{\n    const classes = UseStyles();\n    const fromDate = useInput(\"2020-01-01\");\n    const toDate = useInput(\"2020-12-31\");\n    const columnDefs = EmploymentManageInput;\n    const radioValue = useInput();\n    const [checkData, setCheckData] = useState(0);\n    const deptName = useInput();\n    const [list,setList]=useState([]);\n   \n\n\n    useEffect(() => {\n      axios\n          .get(\"http://localhost:8282/hr/base/deptList\")\n          .then(response => {\n              console.log(\"list1111\",response.data.list);\n              setList(response.data.list)\n          })\n          .catch(e => {\n              console.log(\"!!!!!!!!!!!!\" + e);\n          });\n  }, []);\n\n  const selList =list.map(\n    (ele)=> {\n        return <MenuItem value={ele.deptName}>{ele.deptName}</MenuItem>\n    }\n)\n\n\n\n\nconst employmentManage=()=>{\n\n  console.log(fromDate.value);\n  console.log(toDate.value);\n  console.log(deptName.value);\n  if (deptName.value === undefined) {\n    alert('부서를 선택해 주세요.')\n    return;\n  }\n  \n  props.searchEmploymentManageList({ deptName: deptName.value, startDate: fromDate.value, endDate: toDate.value });\n};\n\n\n\n\nconst handleChange=(event)=>{\n\n  radioValue.setValue(event.target.value);\n  const size = checkData.length;\n  for (let a = 0; a < size; a++) {\n    if (event.target.value === '승인') {\n      checkData[a].approvalStatus = 'apploval';\n    } else if (event.target.value === '승인취소') {\n      checkData[a].approvalStatus = 'cancel';\n    } else {\n      checkData[a].applovalStatus = 'return';\n    }\n  }\n};\n\nconst updateEmploymentManage=()=>{\n  props.update(checkData, deptName.value,fromDate.value,toDate.value);\n\n}\n\nconst onRowSelected = useCallback((e) => {\n  console.log(e.api.getSelectedRows());\n  setCheckData(e.api.getSelectedRows())\n}, [])\n\n\nconst onChangeDeptCode=(e)=>{\n  \n\n  console.log(e.target.value);\n\n  deptName.setValue(e.target.value);\n\n  \n\n}\n    return(\n      <Grid item xs={12}>\n      <Paper className={classes.mainPaper}>\n        <AppBar  position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h5\">재직증명관리</Typography>\n          </Toolbar>\n        </AppBar>\n        <br />\n        <div>\n          <FormControl variant=\"outlined\" className={classes.searchTextField}>\n            <InputLabel\n\n              htmlFor=\"outlined-cost-simple\"\n            >\n              조회부서\n                </InputLabel>\n              <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            name=\"demo-simple-select-outlined\"\n                            onChange={onChangeDeptCode}\n                            inputProps={{\n                              name: 'labal',\n                              id: 'outlined-cost-simple',\n                            }}\n                        >\n                          {selList}  \n                </Select>\n\n          </FormControl>\n          <TextField\n            id={\"fromDate\"}\n            label={\"신청일자\"}\n            type={\"date\"}\n            defaultValue={fromDate.value}\n            onChange={fromDate.onChange}\n            className={classes.textField}\n            variant=\"outlined\"\n          />\n              ~\n              <TextField\n            id={\"toDate\"}\n            label={\"신청일자\"}\n            type={\"date\"}\n            defaultValue={toDate.value}\n            onChange={toDate.onChange}\n            className={classes.textField}\n            variant=\"outlined\"\n          />\n          <Button\n            variant={\"outlined\"}\n            color={\"primary\"}\n            className={classes.searchButton}\n            onClick={employmentManage}\n          >\n            조회\n              </Button>\n        </div>\n        <br />\n        <div className={classes.radio}>\n          <FormControl component=\"fieldset\" >\n            <RadioGroup row aria-label=\"position\" value={radioValue.value} onChange={handleChange} >\n              <FormControlLabel value=\"승인\" control={<Radio />} label=\"승인\" />\n              <FormControlLabel value=\"승인취소\" control={<Radio />} label=\"승인취소\" />\n              <FormControlLabel value=\"반려\" control={<Radio />} label=\"반려\" />\n            </RadioGroup>\n          </FormControl>\n          <Button\n            variant={\"outlined\"}\n            color={\"primary\"}\n            name={\"confirm\"}\n            onClick={updateEmploymentManage}\n          >\n            확정\n              </Button>\n        </div>\n        <br />\n        <div\n          className={\"ag-theme-material\"}\n          style={{\n            height: \"400px\",\n            width: \"100%\"\n          }}\n        >\n          <AgGridReact\n            columnDefs={columnDefs}\n            rowData={props.EmploymentManageList}\n            suppressRowClickSelection={\"true\"}\n            onRowSelected={onRowSelected}\n            onGridReady={(event) => {\n              event.api.sizeColumnsToFit();             \n            }}\n            onGridSizeChanged={event => {\n              event.api.sizeColumnsToFit();\n            }}\n            rowSelection=\"multiple\" //여러개선택가능 \n          />\n        </div>\n      </Paper>\n\n    </Grid>\n\n    )\n};\nexport default EmploymentManage;"]},"metadata":{},"sourceType":"module"}