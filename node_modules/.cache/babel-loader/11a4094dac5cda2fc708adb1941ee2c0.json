{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { AUTHORITY_REQUEST, LOGIN_REQUEST } from '../reducer/commonReducer';\nimport { loginSuccess, loginFailure, login, logout, authority, authorityFailure, authoritySuccess } from '../reducer/commonReducer';\nimport { MENU_LIST_REQUEST } from '../reducer/commonReducer';\nimport { menuAll, menuAccount, menuHr, menuLogi } from '../reducer/commonReducer';\nimport history from 'util/history';\n\nfunction* logInOutSaga(action) {\n  try {\n    if (!!sessionStorage.getItem('id_token')) {\n      yield put(logout());\n      sessionStorage.clear();\n    } else {\n      yield put(login());\n      const {\n        data\n      } = yield axios.post(`http://localhost:4000/erp/sys/login`, {\n        empCode: action.payload.empCode,\n        password: action.payload.password,\n        companyCode: action.payload.companyCode,\n        workplaceCode: action.payload.workplaceCode\n      });\n      const empInfo = data.empInfo;\n\n      if (!empInfo) {\n        yield put(loginFailure(data));\n      } else {\n        yield put(loginSuccess(empInfo)); //sessionStorage.clear();\n\n        sessionStorage.setItem('id_token', action.payload.empCode);\n        sessionStorage.setItem('pw_token', action.payload.password);\n        sessionStorage.setItem('companyCode_token', action.payload.companyCode);\n        sessionStorage.setItem('workplaceCode_token', action.payload.workplaceCode);\n        sessionStorage.setItem('empNameInfo_token', empInfo.empName);\n        sessionStorage.setItem('empCodeInfo_token', empInfo.empCode);\n        sessionStorage.setItem('deptCodeInfo_token', empInfo.deptCode);\n        sessionStorage.setItem('positionCodeInfo_token', empInfo.positionCode);\n        sessionStorage.setItem('businessPlaceCodeInfo_token', empInfo.businessPlaceCode);\n        sessionStorage.setItem('authorityCodeInfo_token', empInfo.authorityCode);\n        sessionStorage.setItem('workPlace_token', empInfo.workplaceName);\n        sessionStorage.setItem('deptNameInfo_token', empInfo.deptName);\n        sessionStorage.setItem('authorityLevel_token', empInfo.authorityLevel);\n      }\n    }\n  } catch (error) {\n    action.payload.history.put('/error');\n  }\n}\n\nfunction* authoritySaga(action) {\n  try {\n    yield put(authority());\n    const {\n      data\n    } = yield axios.post(`http://localhost:4000/erp/sys/auth`, {\n      empCode: action.payload.empCode,\n      companyCode: action.payload.companyCode,\n      workplaceCode: action.payload.workplaceCode\n    });\n    const empAuthority = data.empAuthority;\n\n    if (!empAuthority) {\n      yield put(authorityFailure(data));\n    } else {\n      yield put(authoritySuccess(empAuthority));\n    }\n  } catch (error) {\n    action.payload.history.put('/error');\n  }\n}\n\nexport function* watchLogInOutSaga() {\n  yield takeEvery(LOGIN_REQUEST, logInOutSaga);\n}\nexport function* checkAuthoritySaga() {\n  yield takeEvery(AUTHORITY_REQUEST, authoritySaga);\n}\n\nfunction* menuListSaga(action) {\n  try {\n    const {\n      data\n    } = yield axios.get('http://localhost:8282/sys/findMenuList');\n\n    if (action.payload.authorityCode === 'SYSTEM') {\n      yield put(menuAll(data));\n    } else if (action.payload.authorityCode === 'ACCOUNT') {\n      yield put(menuAccount(data));\n    } else if (action.payload.authorityCode === 'HR') {\n      yield put(menuHr(data));\n    } else if (action.payload.authorityCode === 'LOGI') {\n      yield put(menuLogi(data));\n    }\n  } catch (error) {\n    history.put('/error');\n  }\n}\n\nexport function* watchMenuListSaga() {\n  yield takeEvery(MENU_LIST_REQUEST, menuListSaga);\n}","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/common/saga/commonSaga.js"],"names":["put","takeEvery","axios","AUTHORITY_REQUEST","LOGIN_REQUEST","loginSuccess","loginFailure","login","logout","authority","authorityFailure","authoritySuccess","MENU_LIST_REQUEST","menuAll","menuAccount","menuHr","menuLogi","history","logInOutSaga","action","sessionStorage","getItem","clear","data","post","empCode","payload","password","companyCode","workplaceCode","empInfo","setItem","empName","deptCode","positionCode","businessPlaceCode","authorityCode","workplaceName","deptName","authorityLevel","error","authoritySaga","empAuthority","watchLogInOutSaga","checkAuthoritySaga","menuListSaga","get","watchMenuListSaga"],"mappings":"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","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { AUTHORITY_REQUEST, LOGIN_REQUEST } from '../reducer/commonReducer';\nimport {\n    loginSuccess,\n    loginFailure,\n    login,\n    logout,\n    authority,\n    authorityFailure,\n    authoritySuccess\n} from '../reducer/commonReducer';\nimport { MENU_LIST_REQUEST } from '../reducer/commonReducer';\nimport { menuAll, menuAccount, menuHr, menuLogi } from '../reducer/commonReducer';\nimport history from 'util/history';\n\nfunction* logInOutSaga(action) {\n    try {\n        if (!!sessionStorage.getItem('id_token')) {\n            yield put(logout());\n            sessionStorage.clear();\n        } else {\n            yield put(login());\n\n            const { data } = yield axios.post(`http://localhost:4000/erp/sys/login`, {\n                empCode: action.payload.empCode,\n                password: action.payload.password,\n                companyCode: action.payload.companyCode,\n                workplaceCode: action.payload.workplaceCode\n            });\n\n            const empInfo = data.empInfo;\n\n            if (!empInfo) {\n                yield put(loginFailure(data));\n            } else {\n                yield put(loginSuccess(empInfo));\n                //sessionStorage.clear();\n                sessionStorage.setItem('id_token', action.payload.empCode);\n                sessionStorage.setItem('pw_token', action.payload.password);\n                sessionStorage.setItem('companyCode_token', action.payload.companyCode);\n                sessionStorage.setItem('workplaceCode_token', action.payload.workplaceCode);\n                sessionStorage.setItem('empNameInfo_token', empInfo.empName);\n                sessionStorage.setItem('empCodeInfo_token', empInfo.empCode);\n                sessionStorage.setItem('deptCodeInfo_token', empInfo.deptCode);\n                sessionStorage.setItem('positionCodeInfo_token', empInfo.positionCode);\n                sessionStorage.setItem('businessPlaceCodeInfo_token', empInfo.businessPlaceCode);\n                sessionStorage.setItem('authorityCodeInfo_token', empInfo.authorityCode);\n                sessionStorage.setItem('workPlace_token', empInfo.workplaceName);\n                sessionStorage.setItem('deptNameInfo_token', empInfo.deptName);\n                sessionStorage.setItem('authorityLevel_token', empInfo.authorityLevel);\n            }\n        }\n    } catch (error) {\n        action.payload.history.put('/error');\n    }\n}\n\nfunction* authoritySaga(action) {\n    try {\n        yield put(authority());\n\n        const { data } = yield axios.post(`http://localhost:4000/erp/sys/auth`, {\n            empCode: action.payload.empCode,\n            companyCode: action.payload.companyCode,\n            workplaceCode: action.payload.workplaceCode\n        });\n\n        const empAuthority = data.empAuthority;\n        if (!empAuthority) {\n            yield put(authorityFailure(data));\n        } else {\n            yield put(authoritySuccess(empAuthority));\n        }\n    } catch (error) {\n        action.payload.history.put('/error');\n    }\n}\n\nexport function* watchLogInOutSaga() {\n    yield takeEvery(LOGIN_REQUEST, logInOutSaga);\n}\n\nexport function* checkAuthoritySaga() {\n    yield takeEvery(AUTHORITY_REQUEST, authoritySaga);\n}\n\nfunction* menuListSaga(action) {\n    try {\n        const { data } = yield axios.get('http://localhost:8282/sys/findMenuList');\n        if (action.payload.authorityCode === 'SYSTEM') {\n            yield put(menuAll(data));\n        } else if (action.payload.authorityCode === 'ACCOUNT') {\n            yield put(menuAccount(data));\n        } else if (action.payload.authorityCode === 'HR') {\n            yield put(menuHr(data));\n        } else if (action.payload.authorityCode === 'LOGI') {\n            yield put(menuLogi(data));\n        }\n    } catch (error) {\n        history.put('/error');\n    }\n}\n\nexport function* watchMenuListSaga() {\n    yield takeEvery(MENU_LIST_REQUEST, menuListSaga);\n}\n"]},"metadata":{},"sourceType":"module"}