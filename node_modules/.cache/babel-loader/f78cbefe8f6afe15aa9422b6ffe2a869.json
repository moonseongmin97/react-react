{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\account\\\\account\\\\page\\\\Slip\\\\Container.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Combine from './Combine';\nimport { selectSlipStart, deleteSlipStart, saveJournalStart, updateSlipStart //전표\n, selectJournalStart, deleteJournalStart, updateJournalStart //분개\n, searchJournalDetailStart, saveJournalDetailStart //분개상세\n} from '../../reducer/AccountReducer';\nimport { closeSalaryWithSlipRequest } from 'erp/hr/salary/saga/CloseSalarySaga'; //임금 2020-11-19 박미노\n\nimport { deliveryDivisionStart } from 'erp/logistic/sales/action/SalesAction'; //납품 2021-06-22 PGW\n\nimport { orderDivisionStart } from 'erp/logistic/sales/action/SalesAction'; //발주 2021-06-22 PGW\n//=================================================== 2020-09-10 조편백 일반전표 컨테이너 =========================================\n\nconst Container = ({\n  selectSlipStart,\n  slipFormList,\n  saveJournalStart,\n  updateSlipStart,\n  deleteSlipStart,\n  //전표\n  selectJournalStart,\n  journalList,\n  deleteJournalStart,\n  updateJournalStart,\n  //분개\n  searchJournalDetailStart,\n  journalDetailList,\n  saveJournalDetailStart,\n  //분개상세\n  closeSalaryWithSlipRequest,\n  deliveryDivisionStart,\n  orderDivisionStart,\n  error\n}) => {\n  const [visibleState, setVisibleState] = useState(true); //분개추가버튼 활성화 비활성화\n\n  const [silpRow, setSilpRow] = useState(); //선택한 전표그리드 Row\n  //=============================전표==========================\n\n  const handleSearchSlip = (startDate, endDate, slipStatus) => {\n    //console.log(\"컨테이너 -> 전표조회 \");\n    selectSlipStart({\n      startDate: startDate,\n      endDate: endDate,\n      slipStatus: slipStatus\n    });\n  };\n\n  const handleDeleteSlip = slipNo => {\n    //console.log(\"컨테이너 -> 전표삭제 \" + slipNo);\n    deleteSlipStart({\n      slipNo: slipNo\n    });\n  };\n\n  const handleUpdateSlip = (slipType, expenseReport, slipNo) => {\n    //console.log(\"컨테이너  -> 전표 update \" + slipType, expenseReport, slipNo)\n    updateSlipStart({\n      slipType: slipType,\n      expenseReport: expenseReport,\n      slipNo: slipNo\n    });\n  }; //=============================분개==========================\n\n\n  const handleSearchJournal = slipNo => {\n    // console.log(\"컨테이너 -> 분개 \" + slipNo);\n    selectJournalStart({\n      slipNo: slipNo\n    });\n  };\n\n  const handleDeleteJournal = (slipNo, journalNo) => {\n    // console.log(\"컨테이너  -> 분개 삭제\" + slipNo, journalNo)\n    deleteJournalStart({\n      slipNo: slipNo,\n      journalNo: journalNo\n    });\n  };\n\n  const handleSaveJournal = slipData => {\n    console.log('컨테이너 -> 분개저장 insert ', slipData);\n    saveJournalStart({\n      slipData: slipData\n    });\n  };\n\n  const handleUpdateJournal = updateJournalList => {\n    console.log('컨테이너  -> 분개 저장 update' + JSON.stringify(updateJournalList));\n    updateJournalStart({\n      updateJournalList: updateJournalList\n    });\n  }; //=============================분개상세==========================\n\n\n  const handleSearchJournalDetail = journalNo => {\n    //console.log(\"컨테이너  -> 분개 상세\" + journalNo)\n    searchJournalDetailStart({\n      journalNo: journalNo\n    });\n  };\n\n  const handlSaveJournalDetailList = SaveJournalDetailList => {\n    //console.log(\"컨테이너 -> 분개상세저장 \" + JSON.stringify(SaveJournalDetailList));\n    saveJournalDetailStart({\n      SaveJournalDetailList: SaveJournalDetailList\n    });\n  }; //임금 인설트 박미노===========================================================\n\n\n  const handlCloseSalaryWithSlipRequest = salaryInsert => {\n    console.log('salaryInsert', salaryInsert);\n    closeSalaryWithSlipRequest({\n      empcode1: salaryInsert\n    });\n  }; //납품 인설트 박미노===========================================================\n\n\n  const handlCloseDeliveryWithStart = DeliveryInsert => {\n    console.log('DeliveryInsert', DeliveryInsert);\n    deliveryDivisionStart({\n      DeliveryInsert: DeliveryInsert\n    });\n  };\n\n  const handlCloseOrderWithStart = OrderInsert => {\n    console.log('OrderInsert', OrderInsert);\n    orderDivisionStart({\n      OrderInsert: OrderInsert\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Combine, {\n    handleSearchSlip: handleSearchSlip //전표조회\n    ,\n    slipFormList: slipFormList //전표조회 리듀서\n    ,\n    handleDeleteSlip: handleDeleteSlip //전표삭제\n    ,\n    handleSearchJournal: handleSearchJournal //분개조회\n    ,\n    journalList: journalList //분개 조회 리듀서\n    ,\n    setVisibleState: setVisibleState //버튼값담는 함수\n    ,\n    visibleState: visibleState //버튼 true,false\n    ,\n    setSilpRow: setSilpRow //전표List담는 함수  ( 추가,수정된 내용도있어서 또 담아줌 분개에서 유효성검사해야함 )\n    ,\n    silpRow: silpRow //전표그리드에 선택한 ROW 한줄\n    ,\n    handleDeleteJournal: handleDeleteJournal //분개 삭제\n    ,\n    handleSearchJournalDetail: handleSearchJournalDetail //분개상세조회\n    ,\n    journalDetailList: journalDetailList //분개상세 조회 리듀서\n    ,\n    handleUpdateSlip: handleUpdateSlip //전표 update\n    ,\n    handleSaveJournal: handleSaveJournal //분개저장 (1:N) 전표:분개1,분개2,분개3,분개4\n    ,\n    handlSaveJournalDetailList: handlSaveJournalDetailList,\n    handleUpdateJournal: handleUpdateJournal,\n    handlCloseSalaryWithSlipRequest: handlCloseSalaryWithSlipRequest,\n    handlCloseDeliveryWithStart: handlCloseDeliveryWithStart,\n    handlCloseOrderWithStart: handlCloseOrderWithStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  console.log('분개 리턴 컨테이너' + JSON.stringify(state.AccReducer.AccountReducer.journalList));\n  return {\n    slipFormList: state.AccReducer.AccountReducer.slipFormList,\n    journalList: state.AccReducer.AccountReducer.journalList,\n    error: state.AccReducer.AccountReducer.error,\n    journalDetailList: state.AccReducer.AccountReducer.journalDetailList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectSlipStart,\n  deleteSlipStart,\n  updateSlipStart,\n  saveJournalStart,\n  selectJournalStart,\n  deleteJournalStart,\n  updateJournalStart,\n  searchJournalDetailStart,\n  saveJournalDetailStart,\n  closeSalaryWithSlipRequest,\n  deliveryDivisionStart,\n  orderDivisionStart\n})(Container);","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/account/account/page/Slip/Container.js"],"names":["React","useState","connect","Combine","selectSlipStart","deleteSlipStart","saveJournalStart","updateSlipStart","selectJournalStart","deleteJournalStart","updateJournalStart","searchJournalDetailStart","saveJournalDetailStart","closeSalaryWithSlipRequest","deliveryDivisionStart","orderDivisionStart","Container","slipFormList","journalList","journalDetailList","error","visibleState","setVisibleState","silpRow","setSilpRow","handleSearchSlip","startDate","endDate","slipStatus","handleDeleteSlip","slipNo","handleUpdateSlip","slipType","expenseReport","handleSearchJournal","handleDeleteJournal","journalNo","handleSaveJournal","slipData","console","log","handleUpdateJournal","updateJournalList","JSON","stringify","handleSearchJournalDetail","handlSaveJournalDetailList","SaveJournalDetailList","handlCloseSalaryWithSlipRequest","salaryInsert","empcode1","handlCloseDeliveryWithStart","DeliveryInsert","handlCloseOrderWithStart","OrderInsert","mapStateToProps","state","AccReducer","AccountReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SACIC,eADJ,EAEIC,eAFJ,EAGIC,gBAHJ,EAIIC,eAJJ,CAIqB;AAJrB,EAKIC,kBALJ,EAMIC,kBANJ,EAOIC,kBAPJ,CAOwB;AAPxB,EAQIC,wBARJ,EASIC,sBATJ,CAS2B;AAT3B,OAUO,8BAVP;AAWA,SAASC,0BAAT,QAA2C,oCAA3C,C,CAAiF;;AACjF,SAASC,qBAAT,QAAsC,uCAAtC,C,CAA+E;;AAC/E,SAASC,kBAAT,QAAmC,uCAAnC,C,CAA4E;AAC5E;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfZ,EAAAA,eADe;AAEfa,EAAAA,YAFe;AAGfX,EAAAA,gBAHe;AAIfC,EAAAA,eAJe;AAKfF,EAAAA,eALe;AAKE;AACjBG,EAAAA,kBANe;AAOfU,EAAAA,WAPe;AAQfT,EAAAA,kBARe;AASfC,EAAAA,kBATe;AASK;AACpBC,EAAAA,wBAVe;AAWfQ,EAAAA,iBAXe;AAYfP,EAAAA,sBAZe;AAYS;AACxBC,EAAAA,0BAbe;AAcfC,EAAAA,qBAde;AAefC,EAAAA,kBAfe;AAgBfK,EAAAA;AAhBe,CAAD,KAiBZ;AACF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,IAAD,CAAhD,CADE,CACsD;;AACxD,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,EAAtC,CAFE,CAEwC;AAE1C;;AACA,QAAMwB,gBAAgB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,UAArB,KAAoC;AACzD;AACAxB,IAAAA,eAAe,CAAC;AACZsB,MAAAA,SAAS,EAAEA,SADC;AAEZC,MAAAA,OAAO,EAAEA,OAFG;AAGZC,MAAAA,UAAU,EAAEA;AAHA,KAAD,CAAf;AAKH,GAPD;;AAQA,QAAMC,gBAAgB,GAAGC,MAAM,IAAI;AAC/B;AACAzB,IAAAA,eAAe,CAAC;AAAEyB,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAf;AACH,GAHD;;AAIA,QAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWC,aAAX,EAA0BH,MAA1B,KAAqC;AAC1D;AACAvB,IAAAA,eAAe,CAAC;AACZyB,MAAAA,QAAQ,EAAEA,QADE;AAEZC,MAAAA,aAAa,EAAEA,aAFH;AAGZH,MAAAA,MAAM,EAAEA;AAHI,KAAD,CAAf;AAKH,GAPD,CAjBE,CAyBF;;;AACA,QAAMI,mBAAmB,GAAGJ,MAAM,IAAI;AAClC;AACAtB,IAAAA,kBAAkB,CAAC;AAAEsB,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAlB;AACH,GAHD;;AAIA,QAAMK,mBAAmB,GAAG,CAACL,MAAD,EAASM,SAAT,KAAuB;AAC/C;AACA3B,IAAAA,kBAAkB,CAAC;AAAEqB,MAAAA,MAAM,EAAEA,MAAV;AAAkBM,MAAAA,SAAS,EAAEA;AAA7B,KAAD,CAAlB;AACH,GAHD;;AAIA,QAAMC,iBAAiB,GAAGC,QAAQ,IAAI;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,QAApC;AACAhC,IAAAA,gBAAgB,CAAC;AAAEgC,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,CAAhB;AACH,GAHD;;AAIA,QAAMG,mBAAmB,GAAGC,iBAAiB,IAAI;AAC7CH,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BG,IAAI,CAACC,SAAL,CAAeF,iBAAf,CAAtC;AACAhC,IAAAA,kBAAkB,CAAC;AAAEgC,MAAAA,iBAAiB,EAAEA;AAArB,KAAD,CAAlB;AACH,GAHD,CAtCE,CA0CF;;;AACA,QAAMG,yBAAyB,GAAGT,SAAS,IAAI;AAC3C;AACAzB,IAAAA,wBAAwB,CAAC;AAAEyB,MAAAA,SAAS,EAAEA;AAAb,KAAD,CAAxB;AACH,GAHD;;AAIA,QAAMU,0BAA0B,GAAGC,qBAAqB,IAAI;AACxD;AACAnC,IAAAA,sBAAsB,CAAC;AAAEmC,MAAAA,qBAAqB,EAAEA;AAAzB,KAAD,CAAtB;AACH,GAHD,CA/CE,CAmDF;;;AACA,QAAMC,+BAA+B,GAAGC,YAAY,IAAI;AACpDV,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BS,YAA5B;AACApC,IAAAA,0BAA0B,CAAC;AAAEqC,MAAAA,QAAQ,EAAED;AAAZ,KAAD,CAA1B;AACH,GAHD,CApDE,CAwDF;;;AACA,QAAME,2BAA2B,GAAGC,cAAc,IAAI;AAClDb,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,cAA9B;AACAtC,IAAAA,qBAAqB,CAAC;AAAEsC,MAAAA,cAAc,EAAEA;AAAlB,KAAD,CAArB;AACH,GAHD;;AAIA,QAAMC,wBAAwB,GAAGC,WAAW,IAAI;AAC5Cf,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bc,WAA3B;AACAvC,IAAAA,kBAAkB,CAAC;AAAEuC,MAAAA,WAAW,EAAEA;AAAf,KAAD,CAAlB;AACH,GAHD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACI,IAAA,gBAAgB,EAAE7B,gBADtB,CACwC;AADxC;AAEI,IAAA,YAAY,EAAER,YAFlB,CAEgC;AAFhC;AAGI,IAAA,gBAAgB,EAAEY,gBAHtB,CAGwC;AAHxC;AAII,IAAA,mBAAmB,EAAEK,mBAJzB,CAI8C;AAJ9C;AAKI,IAAA,WAAW,EAAEhB,WALjB,CAK8B;AAL9B;AAMI,IAAA,eAAe,EAAEI,eANrB,CAMsC;AANtC;AAOI,IAAA,YAAY,EAAED,YAPlB,CAOgC;AAPhC;AAQI,IAAA,UAAU,EAAEG,UARhB,CAQ4B;AAR5B;AASI,IAAA,OAAO,EAAED,OATb,CASsB;AATtB;AAUI,IAAA,mBAAmB,EAAEY,mBAVzB,CAU8C;AAV9C;AAWI,IAAA,yBAAyB,EAAEU,yBAX/B,CAW0D;AAX1D;AAYI,IAAA,iBAAiB,EAAE1B,iBAZvB,CAY0C;AAZ1C;AAaI,IAAA,gBAAgB,EAAEY,gBAbtB,CAawC;AAbxC;AAcI,IAAA,iBAAiB,EAAEM,iBAdvB,CAc0C;AAd1C;AAeI,IAAA,0BAA0B,EAAES,0BAfhC;AAgBI,IAAA,mBAAmB,EAAEL,mBAhBzB;AAiBI,IAAA,+BAA+B,EAAEO,+BAjBrC;AAkBI,IAAA,2BAA2B,EAAEG,2BAlBjC;AAmBI,IAAA,wBAAwB,EAAEE,wBAnB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAyBH,CA3GD;;AA4GA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7BjB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeG,IAAI,CAACC,SAAL,CAAeY,KAAK,CAACC,UAAN,CAAiBC,cAAjB,CAAgCxC,WAA/C,CAA3B;AACA,SAAO;AACHD,IAAAA,YAAY,EAAEuC,KAAK,CAACC,UAAN,CAAiBC,cAAjB,CAAgCzC,YAD3C;AAEHC,IAAAA,WAAW,EAAEsC,KAAK,CAACC,UAAN,CAAiBC,cAAjB,CAAgCxC,WAF1C;AAGHE,IAAAA,KAAK,EAAEoC,KAAK,CAACC,UAAN,CAAiBC,cAAjB,CAAgCtC,KAHpC;AAIHD,IAAAA,iBAAiB,EAAEqC,KAAK,CAACC,UAAN,CAAiBC,cAAjB,CAAgCvC;AAJhD,GAAP;AAOH,CATD;;AAUA,eAAejB,OAAO,CAACqD,eAAD,EAAkB;AACpCnD,EAAAA,eADoC;AAEpCC,EAAAA,eAFoC;AAGpCE,EAAAA,eAHoC;AAIpCD,EAAAA,gBAJoC;AAKpCE,EAAAA,kBALoC;AAMpCC,EAAAA,kBANoC;AAOpCC,EAAAA,kBAPoC;AAQpCC,EAAAA,wBARoC;AASpCC,EAAAA,sBAToC;AAUpCC,EAAAA,0BAVoC;AAWpCC,EAAAA,qBAXoC;AAYpCC,EAAAA;AAZoC,CAAlB,CAAP,CAaZC,SAbY,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Combine from './Combine';\n\nimport {\n    selectSlipStart,\n    deleteSlipStart,\n    saveJournalStart,\n    updateSlipStart, //전표\n    selectJournalStart,\n    deleteJournalStart,\n    updateJournalStart, //분개\n    searchJournalDetailStart,\n    saveJournalDetailStart //분개상세\n} from '../../reducer/AccountReducer';\nimport { closeSalaryWithSlipRequest } from 'erp/hr/salary/saga/CloseSalarySaga'; //임금 2020-11-19 박미노\nimport { deliveryDivisionStart } from 'erp/logistic/sales/action/SalesAction'; //납품 2021-06-22 PGW\nimport { orderDivisionStart } from 'erp/logistic/sales/action/SalesAction'; //발주 2021-06-22 PGW\n//=================================================== 2020-09-10 조편백 일반전표 컨테이너 =========================================\n\nconst Container = ({\n    selectSlipStart,\n    slipFormList,\n    saveJournalStart,\n    updateSlipStart,\n    deleteSlipStart, //전표\n    selectJournalStart,\n    journalList,\n    deleteJournalStart,\n    updateJournalStart, //분개\n    searchJournalDetailStart,\n    journalDetailList,\n    saveJournalDetailStart, //분개상세\n    closeSalaryWithSlipRequest,\n    deliveryDivisionStart,\n    orderDivisionStart,\n    error\n}) => {\n    const [visibleState, setVisibleState] = useState(true); //분개추가버튼 활성화 비활성화\n    const [silpRow, setSilpRow] = useState(); //선택한 전표그리드 Row\n\n    //=============================전표==========================\n    const handleSearchSlip = (startDate, endDate, slipStatus) => {\n        //console.log(\"컨테이너 -> 전표조회 \");\n        selectSlipStart({\n            startDate: startDate,\n            endDate: endDate,\n            slipStatus: slipStatus\n        });\n    };\n    const handleDeleteSlip = slipNo => {\n        //console.log(\"컨테이너 -> 전표삭제 \" + slipNo);\n        deleteSlipStart({ slipNo: slipNo });\n    };\n    const handleUpdateSlip = (slipType, expenseReport, slipNo) => {\n        //console.log(\"컨테이너  -> 전표 update \" + slipType, expenseReport, slipNo)\n        updateSlipStart({\n            slipType: slipType,\n            expenseReport: expenseReport,\n            slipNo: slipNo\n        });\n    };\n    //=============================분개==========================\n    const handleSearchJournal = slipNo => {\n        // console.log(\"컨테이너 -> 분개 \" + slipNo);\n        selectJournalStart({ slipNo: slipNo });\n    };\n    const handleDeleteJournal = (slipNo, journalNo) => {\n        // console.log(\"컨테이너  -> 분개 삭제\" + slipNo, journalNo)\n        deleteJournalStart({ slipNo: slipNo, journalNo: journalNo });\n    };\n    const handleSaveJournal = slipData => {\n        console.log('컨테이너 -> 분개저장 insert ', slipData);\n        saveJournalStart({ slipData: slipData });\n    };\n    const handleUpdateJournal = updateJournalList => {\n        console.log('컨테이너  -> 분개 저장 update' + JSON.stringify(updateJournalList));\n        updateJournalStart({ updateJournalList: updateJournalList });\n    };\n    //=============================분개상세==========================\n    const handleSearchJournalDetail = journalNo => {\n        //console.log(\"컨테이너  -> 분개 상세\" + journalNo)\n        searchJournalDetailStart({ journalNo: journalNo });\n    };\n    const handlSaveJournalDetailList = SaveJournalDetailList => {\n        //console.log(\"컨테이너 -> 분개상세저장 \" + JSON.stringify(SaveJournalDetailList));\n        saveJournalDetailStart({ SaveJournalDetailList: SaveJournalDetailList });\n    };\n    //임금 인설트 박미노===========================================================\n    const handlCloseSalaryWithSlipRequest = salaryInsert => {\n        console.log('salaryInsert', salaryInsert);\n        closeSalaryWithSlipRequest({ empcode1: salaryInsert });\n    };\n    //납품 인설트 박미노===========================================================\n    const handlCloseDeliveryWithStart = DeliveryInsert => {\n        console.log('DeliveryInsert', DeliveryInsert);\n        deliveryDivisionStart({ DeliveryInsert: DeliveryInsert });\n    };\n    const handlCloseOrderWithStart = OrderInsert => {\n        console.log('OrderInsert', OrderInsert);\n        orderDivisionStart({ OrderInsert: OrderInsert });\n    };\n    return (\n        <div>\n            <Combine\n                handleSearchSlip={handleSearchSlip} //전표조회\n                slipFormList={slipFormList} //전표조회 리듀서\n                handleDeleteSlip={handleDeleteSlip} //전표삭제\n                handleSearchJournal={handleSearchJournal} //분개조회\n                journalList={journalList} //분개 조회 리듀서\n                setVisibleState={setVisibleState} //버튼값담는 함수\n                visibleState={visibleState} //버튼 true,false\n                setSilpRow={setSilpRow} //전표List담는 함수  ( 추가,수정된 내용도있어서 또 담아줌 분개에서 유효성검사해야함 )\n                silpRow={silpRow} //전표그리드에 선택한 ROW 한줄\n                handleDeleteJournal={handleDeleteJournal} //분개 삭제\n                handleSearchJournalDetail={handleSearchJournalDetail} //분개상세조회\n                journalDetailList={journalDetailList} //분개상세 조회 리듀서\n                handleUpdateSlip={handleUpdateSlip} //전표 update\n                handleSaveJournal={handleSaveJournal} //분개저장 (1:N) 전표:분개1,분개2,분개3,분개4\n                handlSaveJournalDetailList={handlSaveJournalDetailList}\n                handleUpdateJournal={handleUpdateJournal}\n                handlCloseSalaryWithSlipRequest={handlCloseSalaryWithSlipRequest}\n                handlCloseDeliveryWithStart={handlCloseDeliveryWithStart}\n                handlCloseOrderWithStart={handlCloseOrderWithStart}\n            ></Combine>\n        </div>\n    );\n};\nconst mapStateToProps = state => {\n    console.log('분개 리턴 컨테이너' + JSON.stringify(state.AccReducer.AccountReducer.journalList));\n    return {\n        slipFormList: state.AccReducer.AccountReducer.slipFormList,\n        journalList: state.AccReducer.AccountReducer.journalList,\n        error: state.AccReducer.AccountReducer.error,\n        journalDetailList: state.AccReducer.AccountReducer.journalDetailList\n       \n    };\n};\nexport default connect(mapStateToProps, {\n    selectSlipStart,\n    deleteSlipStart,\n    updateSlipStart,\n    saveJournalStart,\n    selectJournalStart,\n    deleteJournalStart,\n    updateJournalStart,\n    searchJournalDetailStart,\n    saveJournalDetailStart,\n    closeSalaryWithSlipRequest,\n    deliveryDivisionStart,\n    orderDivisionStart\n})(Container);\n"]},"metadata":{},"sourceType":"module"}