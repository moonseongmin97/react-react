{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\OrderRegister\\\\OptionOrderDialog.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { TextField, Button, FormControl } from '@material-ui/core';\nimport moment from 'moment';\nimport orderListColumn from './orderListColumn';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport ShowOrderDialog from './ShowOrderDialog';\nimport Swal from 'sweetalert2';\nimport HrAppBar from 'erp/hr/util/HrAppBar';\nimport MySelect from 'erp/hr/util/MySelect';\nimport useAsync from 'util/useAsync';\nimport * as api from 'erp/logistic/purchase/api';\n\nconst OptionOrder = ({\n  close\n}) => {\n  const [menuItemMap, setMenuItemMap] = useState([]);\n  const [checkItem, setCheckItem] = useState(null);\n  const [checkAmount, setCheckAmount] = useState('');\n  const [optionOrder, optionOrderDialogFetch] = useAsync(param => api.optionOrderDialog(param), [], false);\n  useEffect(() => {\n    if (optionOrder.data) {\n      if (optionOrder.data.errorCode < 0) {\n        return Swal.fire({\n          icon: 'error',\n          title: optionOrder.data.errorMsg\n        });\n      }\n\n      const dataJsonList = optionOrder.data.gridRowJson;\n      let itemList = [];\n\n      for (let dataJson of dataJsonList) {\n        itemList.push({\n          value: dataJson.itemCode,\n          key: dataJson.itemName\n        });\n      }\n\n      console.log(itemList);\n      setMenuItemMap(itemList);\n    }\n\n    if (optionOrder.error) {\n      Swal.fire({\n        icon: 'error',\n        title: optionOrder.error\n      });\n    }\n  }, [optionOrder.data, optionOrder.error]);\n  const selectonChange = useCallback(e => {\n    setCheckItem(e.target.value);\n  }, []);\n  const amountChange = useCallback(e => {\n    setCheckAmount(e.target.value);\n  }, []);\n  const [clickOptionOrder, onClickOptionOrderFetch] = useAsync(param => api.onClickOptionOrder(param), [], true);\n  const onClickOptionOrder = useCallback(() => {\n    const params = {\n      itemCode: checkItem,\n      itemAmount: checkAmount\n    };\n    onClickOptionOrderFetch(params);\n  }, [checkAmount, checkItem, onClickOptionOrderFetch]);\n  useEffect(() => {\n    if (clickOptionOrder.data) {\n      if (clickOptionOrder.data.errorCode < 0) {\n        return Swal.fire({\n          icon: 'error',\n          title: clickOptionOrder.data.errorMsg\n        });\n      }\n\n      Swal.fire({\n        icon: 'success',\n        title: clickOptionOrder.data.errorMsg\n      });\n      close();\n    }\n\n    if (clickOptionOrder.error) {\n      Swal.fire({\n        icon: 'error',\n        title: clickOptionOrder.error\n      });\n      close();\n    }\n  }, [clickOptionOrder.data, clickOptionOrder.error, close]);\n  return React.createElement(React.Fragment, null, React.createElement(HrAppBar, {\n    title: \"\\uC784\\uC758 \\uBC1C\\uC8FC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    style: {\n      minWidth: '250px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(MySelect, {\n    menuItemMap: menuItemMap,\n    selectonChange: selectonChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    style: {\n      minWidth: '250px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC218\\uB7C9\",\n    value: checkAmount,\n    onChange: amountChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClickOptionOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\uC784\\uC758 \\uBC1C\\uC8FC\")));\n};\n\nexport default OptionOrder;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/purchase/page/OrderRegister/OptionOrderDialog.js"],"names":["React","useState","useCallback","useEffect","axios","MyCalendar","MyGrid","TextField","Button","FormControl","moment","orderListColumn","MyDialog","ShowOrderDialog","Swal","HrAppBar","MySelect","useAsync","api","OptionOrder","close","menuItemMap","setMenuItemMap","checkItem","setCheckItem","checkAmount","setCheckAmount","optionOrder","optionOrderDialogFetch","param","optionOrderDialog","data","errorCode","fire","icon","title","errorMsg","dataJsonList","gridRowJson","itemList","dataJson","push","value","itemCode","key","itemName","console","log","error","selectonChange","e","target","amountChange","clickOptionOrder","onClickOptionOrderFetch","onClickOptionOrder","params","itemAmount","minWidth","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { TextField, Button, FormControl } from '@material-ui/core';\nimport moment from 'moment';\nimport orderListColumn from './orderListColumn';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport ShowOrderDialog from './ShowOrderDialog';\nimport Swal from 'sweetalert2';\nimport HrAppBar from 'erp/hr/util/HrAppBar';\nimport MySelect from 'erp/hr/util/MySelect';\nimport useAsync from 'util/useAsync';\nimport * as api from 'erp/logistic/purchase/api';\n\nconst OptionOrder = ({ close }) => {\n    const [menuItemMap, setMenuItemMap] = useState([]);\n    const [checkItem, setCheckItem] = useState(null);\n    const [checkAmount, setCheckAmount] = useState('');\n\n    const [optionOrder, optionOrderDialogFetch] = useAsync((param) =>api.optionOrderDialog(param), [], false);\n    useEffect(() => {\n\n        if(optionOrder.data){\n                if (optionOrder.data.errorCode < 0) {\n                    return Swal.fire({\n                        icon: 'error',\n                        title: optionOrder.data.errorMsg\n                    });\n                }\n                const dataJsonList = optionOrder.data.gridRowJson;\n                let itemList = [];\n                for (let dataJson of dataJsonList) {\n                    itemList.push({ value: dataJson.itemCode, key: dataJson.itemName });\n                }\n                console.log(itemList);\n                setMenuItemMap(itemList);\n            }\n        \n        if(optionOrder.error){\n                Swal.fire({\n                    icon: 'error',\n                    title: optionOrder.error\n                });\n        }\n            },[optionOrder.data, optionOrder.error]);\n\n    const selectonChange = useCallback(e => {\n        setCheckItem(e.target.value);\n    }, []);\n    const amountChange = useCallback(e => {\n        setCheckAmount(e.target.value);\n    }, []);\n\n    const [clickOptionOrder, onClickOptionOrderFetch] = useAsync((param) =>api.onClickOptionOrder(param), [], true);\n    const onClickOptionOrder = useCallback(() => {\n\n        const params = {\n            itemCode: checkItem,\n            itemAmount: checkAmount\n        }\n        onClickOptionOrderFetch(params);\n    }, [checkAmount, checkItem, onClickOptionOrderFetch]);\nuseEffect(() => {\n\n    if(clickOptionOrder.data){\n    if (clickOptionOrder.data.errorCode < 0) {\n        return Swal.fire({\n            icon: 'error',\n            title: clickOptionOrder.data.errorMsg\n        });\n    }\n    Swal.fire({\n        icon: 'success',\n        title: clickOptionOrder.data.errorMsg\n    });\n    close();\n}\n\nif(clickOptionOrder.error){\n    Swal.fire({\n        icon: 'error',\n        title: clickOptionOrder.error\n    });\nclose();\n}\n\n},[clickOptionOrder.data, clickOptionOrder.error, close]);\n\n    return (\n        <>\n            <HrAppBar title=\"임의 발주\" />\n            <div align=\"center\">\n                <FormControl style={{ minWidth: '250px' }}>\n                    <MySelect menuItemMap={menuItemMap} selectonChange={selectonChange} />\n                </FormControl>\n                <br />\n                <FormControl style={{ minWidth: '250px' }}>\n                    <TextField label=\"수량\" value={checkAmount} onChange={amountChange} />\n                </FormControl>\n                <br />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={onClickOptionOrder}\n                >\n                    임의 발주\n                </Button>\n            </div>\n        </>\n    );\n};\nexport default OptionOrder;\n"]},"metadata":{},"sourceType":"module"}