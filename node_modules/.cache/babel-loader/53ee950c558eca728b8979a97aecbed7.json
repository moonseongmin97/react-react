{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\account\\\\statement\\\\page\\\\AccountLedger\\\\AccountSearchDialog.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dialog, DialogTitle, DialogContent, List, DialogActions, Button, TextField } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { SEARCH_ACCOUNT_LIST_REQUEST } from \"../../reducer/StatementReducer\";\nimport useStyles from \"./Theme\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst AccountSearchDialog = ({\n  open,\n  close\n}) => {\n  const [positionGridApi, setPositionGridApi] = useState([]);\n  const data = useSelector(({\n    AccReducer\n  }) => AccReducer.StatementReducer.accountList, []); //DB에서 받아온 값 을 그리드에뿌리려고 데꼬옴\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const accountColumnDefs = [{\n    headerName: \"코 드\",\n    field: \"accountInnerCode\",\n    width: 180\n  }, {\n    headerName: \"계 정 과 목\",\n    field: \"accountName\",\n    width: 210\n  }];\n\n  const handleClose = () => {\n    close({\n      data: positionGridApi.getSelectedRows(),\n      // data는 클릭한 row의 정보이고,\n      division: \"accountDialog\"\n    });\n  };\n\n  const Close = () => {\n    close({\n      division: \"accountDialog\"\n    });\n  };\n\n  const [accountName, setAccountName] = useState(\"\"); // 계정이름이면\n\n  const [accountCode, setAccountCode] = useState(\"\"); // 계정코드면\n  //onChange 이벤트\n\n  const onChange = e => {\n    let searchCode = e.target.value;\n    console.log(\"isNaN(searchCode)\", isNaN(searchCode)); //숫자 여부 판단\n\n    if (isNaN(searchCode)) {\n      setAccountName(searchCode);\n      setAccountCode(\"undefined\");\n    } else {\n      setAccountName(\"undefined\");\n      setAccountCode(searchCode);\n    }\n  }; //검색 버튼누르면 액션타입명에맞는 비동기함수가 호출된다\n\n\n  const selectData = () => {\n    dispatch({\n      type: SEARCH_ACCOUNT_LIST_REQUEST,\n      params: {\n        accountName: accountName,\n        accountCode: accountCode\n      }\n    });\n  };\n\n  console.log(\"data\", data);\n\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      selectData();\n    }\n  };\n\n  const {\n    dark\n  } = useThemeSwitcher();\n  return React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    Align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uACC4 \\uC815 \\uACFC \\uBAA9\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    Align: \"center\",\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"normal\",\n    placeholder: \"\\uACC4\\uC815\\uCF54\\uB4DC\",\n    onChange: onChange,\n    onKeyPress: handleKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\" //size=\"large\"\n    ,\n    color: \"primary\",\n    startIcon: React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) //아이콘\n    ,\n    onClick: selectData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\uAC80\\uC0C9\")), React.createElement(\"div\", {\n    className: dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\",\n    style: {\n      height: \"300px\",\n      width: \"100%\",\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: accountColumnDefs //컬럼명\n    ,\n    rowData: data // 뿌릴 data\n    ,\n    rowSelection: \"single\" // 하나만 선택 가능.\n    ,\n    getRowStyle: param => {\n      return {\n        \"text-align\": \"center\"\n      }; //body 가운데 정렬\n    },\n    onGridReady: params => setPositionGridApi(params.api),\n    onCellClicked: handleClose // cell을 클릭하면, handleClose가 실행된다.\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: Close,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Close\")));\n};\n\nexport default AccountSearchDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/account/statement/page/AccountLedger/AccountSearchDialog.js"],"names":["React","useState","useDispatch","useSelector","Dialog","DialogTitle","DialogContent","List","DialogActions","Button","TextField","SearchIcon","AgGridReact","SEARCH_ACCOUNT_LIST_REQUEST","useStyles","useThemeSwitcher","AccountSearchDialog","open","close","positionGridApi","setPositionGridApi","data","AccReducer","StatementReducer","accountList","dispatch","classes","accountColumnDefs","headerName","field","width","handleClose","getSelectedRows","division","Close","accountName","setAccountName","accountCode","setAccountCode","onChange","e","searchCode","target","value","console","log","isNaN","selectData","type","params","handleKeyPress","key","dark","margin","height","paddingTop","param","api"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,IAJF,EAKEC,aALF,EAMEC,MANF,EAOEC,SAPF,QAQO,mBARP;AASA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC/C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMoB,IAAI,GAAGlB,WAAW,CAAC,CAAC;AAAEmB,IAAAA;AAAF,GAAD,KAAoBA,UAAU,CAACC,gBAAX,CAA4BC,WAAjD,EAA8D,EAA9D,CAAxB,CAF+C,CAE4C;;AAC3F,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAMa,iBAAiB,GAAG,CACxB;AAAEC,IAAAA,UAAU,EAAE,KAAd;AAAqBC,IAAAA,KAAK,EAAE,kBAA5B;AAAgDC,IAAAA,KAAK,EAAE;AAAvD,GADwB,EAExB;AAAEF,IAAAA,UAAU,EAAE,SAAd;AAAyBC,IAAAA,KAAK,EAAE,aAAhC;AAA+CC,IAAAA,KAAK,EAAE;AAAtD,GAFwB,CAA1B;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxBb,IAAAA,KAAK,CAAC;AACJG,MAAAA,IAAI,EAAEF,eAAe,CAACa,eAAhB,EADF;AACqC;AACzCC,MAAAA,QAAQ,EAAE;AAFN,KAAD,CAAL;AAID,GALD;;AAOA,QAAMC,KAAK,GAAG,MAAM;AAClBhB,IAAAA,KAAK,CAAC;AACJe,MAAAA,QAAQ,EAAE;AADN,KAAD,CAAL;AAGD,GAJD;;AAMA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,EAAD,CAA9C,CAxB+C,CAwBK;;AACpD,QAAM,CAACoC,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,CAAC,EAAD,CAA9C,CAzB+C,CAyBK;AAEpD;;AACA,QAAMsC,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,KAAK,CAACL,UAAD,CAAtC,EAFoB,CAEiC;;AACrD,QAAIK,KAAK,CAACL,UAAD,CAAT,EAAuB;AACrBL,MAAAA,cAAc,CAACK,UAAD,CAAd;AACAH,MAAAA,cAAc,CAAC,WAAD,CAAd;AACD,KAHD,MAGO;AACLF,MAAAA,cAAc,CAAC,WAAD,CAAd;AACAE,MAAAA,cAAc,CAACG,UAAD,CAAd;AACD;AACF,GAVD,CA5B+C,CAwC/C;;;AACA,QAAMM,UAAU,GAAG,MAAM;AACvBtB,IAAAA,QAAQ,CAAC;AACPuB,MAAAA,IAAI,EAAEnC,2BADC;AAEPoC,MAAAA,MAAM,EAAE;AACNd,QAAAA,WAAW,EAAEA,WADP;AAENE,QAAAA,WAAW,EAAEA;AAFP;AAFD,KAAD,CAAR;AAOD,GARD;;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBxB,IAApB;;AACA,QAAM6B,cAAc,GAAGV,CAAC,IAAI;AAC1B,QAAIA,CAAC,CAACW,GAAF,KAAU,OAAd,EAAuB;AACrBJ,MAAAA,UAAU;AACX;AACF,GAJD;;AAMA,QAAM;AAAEK,IAAAA;AAAF,MAAWrC,gBAAgB,EAAjC;AAEA,SACE,oBAAC,MAAD;AACE,uBAAgB,qBADlB;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,SAAS,EAAE,IAHb;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,qBAAhB;AAAsC,IAAA,KAAK,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCANF,EASE,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAES,OAAO,CAAC2B,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,WAAW,EAAC,0BAFd;AAGE,IAAA,QAAQ,EAAEd,QAHZ;AAIE,IAAA,UAAU,EAAEW,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV,CAEE;AAFF;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb,CAI6B;AAJ7B;AAKE,IAAA,OAAO,EAAEH,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF,EAkBE;AACE,IAAA,SAAS,EAAEK,IAAI,GAAG,sBAAH,GAA4B,mBAD7C;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAE,OADH;AAELxB,MAAAA,KAAK,EAAE,MAFF;AAGLyB,MAAAA,UAAU,EAAE;AAHP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAE5B,iBADd,CACiC;AADjC;AAEE,IAAA,OAAO,EAAEN,IAFX,CAEiB;AAFjB;AAGE,IAAA,YAAY,EAAC,QAHf,CAGwB;AAHxB;AAIE,IAAA,WAAW,EAAEmC,KAAK,IAAI;AACpB,aAAO;AAAE,sBAAc;AAAhB,OAAP,CADoB,CACe;AACpC,KANH;AAOE,IAAA,WAAW,EAAEP,MAAM,IAAI7B,kBAAkB,CAAC6B,MAAM,CAACQ,GAAR,CAP3C;AAQE,IAAA,aAAa,EAAE1B,WARjB,CAQ8B;AAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAlBF,CADF,CATF,EAiDE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,KAAjB;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAjDF,CADF;AAyDD,CApHD;;AAsHA,eAAelB,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  List,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { SEARCH_ACCOUNT_LIST_REQUEST } from \"../../reducer/StatementReducer\";\nimport useStyles from \"./Theme\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst AccountSearchDialog = ({ open, close }) => {\n  const [positionGridApi, setPositionGridApi] = useState([]);\n  const data = useSelector(({ AccReducer }) => AccReducer.StatementReducer.accountList, []); //DB에서 받아온 값 을 그리드에뿌리려고 데꼬옴\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const accountColumnDefs = [\n    { headerName: \"코 드\", field: \"accountInnerCode\", width: 180 },\n    { headerName: \"계 정 과 목\", field: \"accountName\", width: 210 },\n  ];\n\n  const handleClose = () => {\n    close({\n      data: positionGridApi.getSelectedRows(), // data는 클릭한 row의 정보이고,\n      division: \"accountDialog\",\n    });\n  };\n\n  const Close = () => {\n    close({\n      division: \"accountDialog\",\n    });\n  };\n\n  const [accountName, setAccountName] = useState(\"\"); // 계정이름이면\n  const [accountCode, setAccountCode] = useState(\"\"); // 계정코드면\n\n  //onChange 이벤트\n  const onChange = e => {\n    let searchCode = e.target.value;\n    console.log(\"isNaN(searchCode)\", isNaN(searchCode)); //숫자 여부 판단\n    if (isNaN(searchCode)) {\n      setAccountName(searchCode);\n      setAccountCode(\"undefined\");\n    } else {\n      setAccountName(\"undefined\");\n      setAccountCode(searchCode);\n    }\n  };\n\n  //검색 버튼누르면 액션타입명에맞는 비동기함수가 호출된다\n  const selectData = () => {\n    dispatch({\n      type: SEARCH_ACCOUNT_LIST_REQUEST,\n      params: {\n        accountName: accountName,\n        accountCode: accountCode,\n      },\n    });\n  };\n  console.log(\"data\", data);\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      selectData();\n    }\n  };\n\n  const { dark } = useThemeSwitcher();\n\n  return (\n    <Dialog\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n      fullWidth={true}\n      maxWidth={\"xs\"}\n    >\n      <DialogTitle id=\"simple-dialog-title\" Align=\"center\">\n        계 정 과 목\n      </DialogTitle>\n      <DialogContent dividers>\n        <List>\n          <div Align=\"center\" className={classes.margin}>\n            <TextField\n              margin=\"normal\"\n              placeholder=\"계정코드\"\n              onChange={onChange}\n              onKeyPress={handleKeyPress}\n            />\n            <Button\n              variant=\"contained\"\n              //size=\"large\"\n              color=\"primary\"\n              startIcon={<SearchIcon />} //아이콘\n              onClick={selectData}\n            >\n              검색\n            </Button>\n          </div>\n          <div\n            className={dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\"}\n            style={{\n              height: \"300px\",\n              width: \"100%\",\n              paddingTop: \"8px\",\n            }}\n          >\n            <AgGridReact\n              columnDefs={accountColumnDefs} //컬럼명\n              rowData={data} // 뿌릴 data\n              rowSelection=\"single\" // 하나만 선택 가능.\n              getRowStyle={param => {\n                return { \"text-align\": \"center\" }; //body 가운데 정렬\n              }}\n              onGridReady={params => setPositionGridApi(params.api)}\n              onCellClicked={handleClose} // cell을 클릭하면, handleClose가 실행된다.\n            />\n          </div>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={Close} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AccountSearchDialog;\n"]},"metadata":{},"sourceType":"module"}