{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\production\\\\page\\\\WorkSite\\\\WorkSiteProcess.js\";\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport Axios from 'axios';\nimport WorkSiteSearch from './WorkSiteSearch';\nimport Swal from 'sweetalert2';\n\nfunction WorkSiteProcess(props) {\n  const [list, setList] = useState([]);\n  const [clickedData, setClickedData] = useState();\n  const [selWorkSite, setSelWorkSite] = useState();\n  const [detailList, setDetailList] = useState([]);\n  const [size, setSize] = useState('50vh');\n  const column = {\n    columnDefs: [{\n      checkboxSelection: true,\n      width: 30\n    }, {\n      headerName: '작업지시일련번호',\n      field: 'workOrderNo',\n      width: 250\n    }, {\n      headerName: '소요량취합번호',\n      field: 'mrpGatheringNo',\n      width: 250\n    }, {\n      headerName: '품목분류',\n      field: 'itemClassification'\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode'\n    }, {\n      headerName: '품목명',\n      field: 'itemName'\n    }, {\n      headerName: '단위',\n      field: 'unitOfMrp'\n    }, {\n      headerName: '생산공정코드',\n      field: 'productionProcessCode',\n      hide: true\n    }, {\n      headerName: '생산공정명',\n      field: 'productionProcessName'\n    }, {\n      headerName: '작업장코드',\n      field: 'workSiteCode',\n      hide: true\n    }, {\n      headerName: '작업장명',\n      field: 'workStieName'\n    }, {\n      headerName: '원재료검사',\n      field: 'inspectionStatus'\n    }, {\n      headerName: '제품제작',\n      field: 'productionStatus'\n    }, {\n      headerName: '제품검사',\n      field: 'completionStatus'\n    }]\n  };\n\n  const onRowSelected = params => {\n    if (params.node.selected) {\n      console.log('params.data', params.node);\n      setClickedData(params.data);\n    } else if (!params.node.selected) {\n      console.log('params.data선택안함', params.node);\n      setClickedData();\n    }\n  };\n\n  const errorMsg = val => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: val\n    });\n  };\n\n  const examination = e => {\n    var targetId = e.currentTarget.id;\n    console.log('clickedData', clickedData);\n\n    if (clickedData === undefined || clickedData === null) {\n      errorMsg('체크 박스를 체크 한뒤 눌러주세요');\n      return;\n    }\n\n    if (clickedData.inspectionStatus == 'Y' && clickedData.productionStatus == 'Y' && clickedData.completionStatus == 'Y') {\n      errorMsg('모든 작업이 끝났습니다.<br>작업완료 등록을 해주세요');\n      return;\n    } else if (clickedData.inspectionStatus == 'Y' && clickedData.productionStatus == 'Y' && targetId == 'Production') {\n      errorMsg('제품 제작은 끝났습니다.<br>판매제품 검사로 넘어가세요');\n      return;\n    } else if (clickedData.inspectionStatus == 'Y' && targetId == 'RawMaterials') {\n      errorMsg('원재료 검사는 끝났습니다.<br>제품제작으로 넘어가세요');\n      return;\n    }\n\n    if (clickedData.productionStatus != 'Y' && targetId == 'SiteExamine') {\n      errorMsg('제품이 제작되지 않았습니다.제품제작 을 해주세요.');\n      return;\n    } else if (clickedData.inspectionStatus != 'Y' && targetId == 'Production') {\n      errorMsg('원재료 검사가 시작되거나 끝나지 않았습니다.');\n      return;\n    }\n\n    showWorkSite(targetId);\n  };\n\n  const showWorkSite = params => {\n    console.log('clickedData', clickedData);\n    setSelWorkSite(clickedData.workOrderNo);\n    Axios.get('http://localhost:8282//logi/production/showWorkSiteSituation', {\n      params: {\n        workSiteCourse: params,\n        workOrderNo: clickedData.workOrderNo,\n        itemClassIfication: clickedData.itemClassification\n      }\n    }).then(response => {\n      setDetailList(response.data.gridRowJson);\n    }).catch(e => {\n      console.log(e);\n    });\n    setSize('30vh');\n  };\n\n  const detailClose = () => {\n    setSize('50vh');\n    setSelWorkSite();\n  };\n\n  const workSiteSearch = () => {\n    Axios.get('http://localhost:8282//logi/production/showWorkOrderInfoList').then(response => {\n      setList(response.data.gridRowJson);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(MyGrid, {\n    column: column,\n    title: '작업장',\n    list: list,\n    onRowSelected: onRowSelected,\n    rowSelection: \"single\",\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      float: 'left',\n      paddingTop: '1vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: workSiteSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\\uC791\\uC5C5\\uC7A5 \\uC870\\uD68C\")), React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: examination,\n    id: \"Production\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\uC81C\\uD488 \\uC81C\\uC791\"), React.createElement(Button, {\n    onClick: examination,\n    id: \"SiteExamine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\uD310\\uB9E4 \\uC81C\\uD488 \\uAC80\\uC0AC\"))), selWorkSite === undefined ? '' : React.createElement(WorkSiteSearch, {\n    list: detailList,\n    detailClose: detailClose,\n    refresh: workSiteSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })));\n}\n\nexport default WorkSiteProcess;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/production/page/WorkSite/WorkSiteProcess.js"],"names":["Button","ButtonGroup","React","useState","MyGrid","Axios","WorkSiteSearch","Swal","WorkSiteProcess","props","list","setList","clickedData","setClickedData","selWorkSite","setSelWorkSite","detailList","setDetailList","size","setSize","column","columnDefs","checkboxSelection","width","headerName","field","hide","onRowSelected","params","node","selected","console","log","data","errorMsg","val","fire","icon","title","text","examination","e","targetId","currentTarget","id","undefined","inspectionStatus","productionStatus","completionStatus","showWorkSite","workOrderNo","get","workSiteCourse","itemClassIfication","itemClassification","then","response","gridRowJson","catch","detailClose","workSiteSearch","float","paddingTop"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport Axios from 'axios';\nimport WorkSiteSearch from './WorkSiteSearch';\nimport Swal from 'sweetalert2';\n\nfunction WorkSiteProcess(props) {\n    const [list, setList] = useState([]);\n    const [clickedData, setClickedData] = useState();\n    const [selWorkSite, setSelWorkSite] = useState();\n    const [detailList, setDetailList] = useState([]);\n    const [size, setSize] = useState('50vh');\n\n    const column = {\n        columnDefs: [\n            { checkboxSelection: true, width: 30 },\n            { headerName: '작업지시일련번호', field: 'workOrderNo', width: 250 },\n            { headerName: '소요량취합번호', field: 'mrpGatheringNo', width: 250 },\n            { headerName: '품목분류', field: 'itemClassification' },\n            { headerName: '품목코드', field: 'itemCode' },\n            { headerName: '품목명', field: 'itemName' },\n            { headerName: '단위', field: 'unitOfMrp' },\n            { headerName: '생산공정코드', field: 'productionProcessCode', hide: true },\n            { headerName: '생산공정명', field: 'productionProcessName' },\n            { headerName: '작업장코드', field: 'workSiteCode', hide: true },\n            { headerName: '작업장명', field: 'workStieName' },\n            { headerName: '원재료검사', field: 'inspectionStatus' },\n            { headerName: '제품제작', field: 'productionStatus' },\n            { headerName: '제품검사', field: 'completionStatus' }\n        ]\n    };\n\n    const onRowSelected = params => {\n        if (params.node.selected) {\n            console.log('params.data', params.node);\n            setClickedData(params.data);\n        } else if (!params.node.selected) {\n            console.log('params.data선택안함', params.node);\n            setClickedData();\n        }\n    };\n    const errorMsg = val => {\n        Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: val\n        });\n    };\n    const examination = e => {\n        var targetId = e.currentTarget.id;\n        console.log('clickedData', clickedData);\n        if (clickedData === undefined || clickedData === null) {\n            errorMsg('체크 박스를 체크 한뒤 눌러주세요');\n            return;\n        }\n        if (\n            clickedData.inspectionStatus == 'Y' &&\n            clickedData.productionStatus == 'Y' &&\n            clickedData.completionStatus == 'Y'\n        ) {\n            errorMsg('모든 작업이 끝났습니다.<br>작업완료 등록을 해주세요');\n            return;\n        } else if (\n            clickedData.inspectionStatus == 'Y' &&\n            clickedData.productionStatus == 'Y' &&\n            targetId == 'Production'\n        ) {\n            errorMsg('제품 제작은 끝났습니다.<br>판매제품 검사로 넘어가세요');\n            return;\n        } else if (clickedData.inspectionStatus == 'Y' && targetId == 'RawMaterials') {\n            errorMsg('원재료 검사는 끝났습니다.<br>제품제작으로 넘어가세요');\n            return;\n        }\n\n        if (clickedData.productionStatus != 'Y' && targetId == 'SiteExamine') {\n            errorMsg('제품이 제작되지 않았습니다.제품제작 을 해주세요.');\n            return;\n        } else if (clickedData.inspectionStatus != 'Y' && targetId == 'Production') {\n            errorMsg('원재료 검사가 시작되거나 끝나지 않았습니다.');\n            return;\n        }\n        showWorkSite(targetId);\n    };\n    const showWorkSite = params => {\n        console.log('clickedData', clickedData);\n        setSelWorkSite(clickedData.workOrderNo);\n        Axios.get('http://localhost:8282//logi/production/showWorkSiteSituation', {\n            params: {\n                workSiteCourse: params,\n                workOrderNo: clickedData.workOrderNo,\n                itemClassIfication: clickedData.itemClassification\n            }\n        })\n            .then(response => {\n                setDetailList(response.data.gridRowJson);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        setSize('30vh');\n    };\n\n    const detailClose = () => {\n        setSize('50vh');\n        setSelWorkSite();\n    };\n\n    const workSiteSearch = () => {\n        Axios.get('http://localhost:8282//logi/production/showWorkOrderInfoList')\n            .then(response => {\n                setList(response.data.gridRowJson);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n    return (\n        <>\n            <div>\n                <MyGrid\n                    column={column}\n                    title={'작업장'}\n                    list={list}\n                    onRowSelected={onRowSelected}\n                    rowSelection=\"single\"\n                    size={size}\n                >\n                    <div style={{ float: 'left', paddingTop: '1vh' }}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={workSiteSearch}>\n                            작업장 조회\n                        </Button>\n                    </div>\n                    <ButtonGroup variant=\"contained\" color=\"secondary\">\n                        <Button onClick={examination} id=\"Production\">\n                            제품 제작\n                        </Button>\n                        <Button onClick={examination} id=\"SiteExamine\">\n                            판매 제품 검사\n                        </Button>\n                    </ButtonGroup>\n                </MyGrid>\n                {selWorkSite === undefined ? (\n                    ''\n                ) : (\n                    <WorkSiteSearch\n                        list={detailList}\n                        detailClose={detailClose}\n                        refresh={workSiteSearch}\n                    />\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default WorkSiteProcess;\n"]},"metadata":{},"sourceType":"module"}