{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\account\\\\statement\\\\page\\\\CostStatement\\\\CostStatementGrid.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst CostStatementGrid = () => {\n  const data = useSelector(({\n    AccReducer\n  }) => AccReducer.StatementReducer.CostList, []); //const { error } = useSelector(state => state.AccReducer);\n\n  const {\n    isLoading\n  } = useSelector(state => state.AccReducer.StatementReducer);\n  const CostStatementGrid = [{\n    headerName: \"과목\",\n    field: \"accountName\",\n    colId: \"과목명\",\n    cellStyle: {\n      textAlign: \"left\",\n      //borderLeft: \"0.1mm ridge #c2c2c2\",\n      borderRight: \"0.1mm ridge #c2c2c2\"\n    },\n    width: 150\n  }, {\n    headerName: \"당기\",\n    headerClass: \"participant-group\",\n    marryChildren: true,\n    children: [{\n      headerName: \"세부금액\",\n      field: \"cost\",\n      colId: \"당기\",\n      cellStyle: {\n        textAlign: \"right\"\n      },\n      width: 150,\n      valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n    }, {\n      headerName: \"합계금액\",\n      field: \"costSummary\",\n      colId: \"당기\",\n      cellStyle: {\n        textAlign: \"right\"\n      },\n      width: 150,\n      valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n    }]\n  }, {\n    headerName: \"전기\",\n    headerClass: \"participant-group\",\n    marryChildren: true,\n    children: [{\n      headerName: \"세부금액\",\n      field: \"earlyCost\",\n      colId: \"전기\",\n      cellStyle: {\n        textAlign: \"right\",\n        borderLeft: \"0.1mm ridge #c2c2c2\" //borderRight: \"0.1mm ridge #c2c2c2\",\n\n      },\n      width: 150,\n      valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n    }, {\n      headerName: \"합계금액\",\n      field: \"earlyCostSummary\",\n      colId: \"전기\",\n      cellStyle: {\n        textAlign: \"right\"\n      },\n      width: 150,\n      valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n    }]\n  }];\n  const {\n    dark\n  } = useThemeSwitcher();\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\",\n    skipHeaderOnAutoSize: \"true\",\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      //height: \"60vh\",\n      width: \"100%\",\n      float: \"center\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, !isLoading ? React.createElement(AgGridReact, {\n    columnDefs: CostStatementGrid,\n    rowData: data,\n    rowSelection: \"single\",\n    getRowStyle: function (param) {\n      //가운데\n      if (param.node.rowPinned) {\n        return {\n          \"font-weight\": \"bold\",\n          background: \"#dddddd\"\n        };\n      }\n\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    onGidReady: event => {\n      event.api.sizeColumnsToFit();\n    },\n    onGridSizeChanged: event => {\n      event.api.sizeColumnsToFit();\n    },\n    domLayout: \"autoHeight\" // onGridReady={onGridReady}\n    // onCellClicked={onCellClicked}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : React.createElement(\"h1\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"\\uB85C\\uB529\\uC911\")));\n};\n\nexport default CostStatementGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/account/statement/page/CostStatement/CostStatementGrid.js"],"names":["React","useSelector","AgGridReact","useThemeSwitcher","CostStatementGrid","data","AccReducer","StatementReducer","CostList","isLoading","state","headerName","field","colId","cellStyle","textAlign","borderRight","width","headerClass","marryChildren","children","valueFormatter","borderLeft","dark","float","param","node","rowPinned","background","event","api","sizeColumnsToFit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst CostStatementGrid = () => {\n  const data = useSelector(({ AccReducer }) => AccReducer.StatementReducer.CostList, []);\n  //const { error } = useSelector(state => state.AccReducer);\n  const { isLoading } = useSelector(state => state.AccReducer.StatementReducer);\n\n  const CostStatementGrid = [\n    {\n      headerName: \"과목\",\n      field: \"accountName\",\n      colId: \"과목명\",\n      cellStyle: {\n        textAlign: \"left\",\n        //borderLeft: \"0.1mm ridge #c2c2c2\",\n        borderRight: \"0.1mm ridge #c2c2c2\",\n      },\n      width: 150,\n    },\n    {\n      headerName: \"당기\",\n      headerClass: \"participant-group\",\n      marryChildren: true,\n      children: [\n        {\n          headerName: \"세부금액\",\n          field: \"cost\",\n          colId: \"당기\",\n          cellStyle: { textAlign: \"right\" },\n          width: 150,\n          valueFormatter:\n            ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n        },\n        {\n          headerName: \"합계금액\",\n          field: \"costSummary\",\n          colId: \"당기\",\n          cellStyle: { textAlign: \"right\" },\n          width: 150,\n          valueFormatter:\n            ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n        },\n      ],\n    },\n    {\n      headerName: \"전기\",\n      headerClass: \"participant-group\",\n      marryChildren: true,\n      children: [\n        {\n          headerName: \"세부금액\",\n          field: \"earlyCost\",\n          colId: \"전기\",\n          cellStyle: {\n            textAlign: \"right\",\n            borderLeft: \"0.1mm ridge #c2c2c2\",\n            //borderRight: \"0.1mm ridge #c2c2c2\",\n          },\n          width: 150,\n          valueFormatter:\n            ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n        },\n        {\n          headerName: \"합계금액\",\n          field: \"earlyCostSummary\",\n          colId: \"전기\",\n          cellStyle: { textAlign: \"right\" },\n          width: 150,\n          valueFormatter:\n            ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n        },\n      ],\n    },\n  ];\n\n  const { dark } = useThemeSwitcher();\n\n  return (\n    <>\n      <div\n        className={dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\"}\n        skipHeaderOnAutoSize=\"true\"\n        enableColResize=\"true\"\n        enableSorting=\"true\"\n        enableFilter=\"true\"\n        enableRangeSelection=\"true\"\n        rowStyle={{ \"text-align\": \"center\" }}\n        style={{\n          //height: \"60vh\",\n          width: \"100%\",\n          float: \"center\",\n        }}\n        cellStyle={{ textAlign: \"center\" }}\n      >\n        {!isLoading ? (\n          <AgGridReact\n            columnDefs={CostStatementGrid}\n            rowData={data}\n            rowSelection=\"single\"\n            getRowStyle={function(param) {\n              //가운데\n              if (param.node.rowPinned) {\n                return { \"font-weight\": \"bold\", background: \"#dddddd\" };\n              }\n              return { \"text-align\": \"center\" };\n            }}\n            onGidReady={event => {\n              event.api.sizeColumnsToFit();\n            }}\n            onGridSizeChanged={event => {\n              event.api.sizeColumnsToFit();\n            }}\n            domLayout={\"autoHeight\"}\n            // onGridReady={onGridReady}\n            // onCellClicked={onCellClicked}\n          />\n        ) : (\n          <h1 align=\"center\">로딩중</h1>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CostStatementGrid;\n"]},"metadata":{},"sourceType":"module"}