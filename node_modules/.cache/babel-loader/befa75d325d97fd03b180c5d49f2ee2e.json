{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Route, Switch, Redirect, BrowserRouter } from 'react-router-dom'; // components\n\nimport Layout from 'common/page/layout/layout'; // pages\n//import 'Error' from \"pages/'error'\";\n\nimport LoginContainer from 'common/page/login/LoginContainer';\n\nconst App = ({\n  isAuthenticated\n}) => {\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    path: \"/app\",\n    component: Layout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(PublicRoute, {\n    path: \"/login\",\n    component: LoginContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/app\",\n    render: () => React.createElement(Redirect, {\n      to: \"/app/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Redirect, {\n      to: \"/app/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))); // #######################################################################\n\n  function PrivateRoute({\n    component,\n    ...rest\n  }) {\n    //...rest는 component 를 제외한 나머지 속성 즉 path 뿐\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuthenticated ? // isAuthenticated 는 appcontainer 에 있음 로그인 정보?\n      React.createElement(component, props) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location,\n            explain: '로그인 인증 실패'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n  function PublicRoute({\n    component,\n    ...rest\n  }) {\n    console.log('component', component);\n    console.log('...rest', rest);\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuthenticated ? React.createElement(Redirect, {\n        to: {\n          pathname: '/'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : React.createElement(component, props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/App.js"],"names":["React","Route","Switch","Redirect","BrowserRouter","Layout","LoginContainer","App","isAuthenticated","PrivateRoute","component","rest","props","createElement","pathname","state","from","location","explain","PublicRoute","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,aAAlC,QAAuD,kBAAvD,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAEA;AACA;;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AACjC,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEH,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ,CADiC,CAajC;;AAEA,WAASG,YAAT,CAAsB;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAtB,EAA8C;AAAM;AAChD,WACI,oBAAC,KAAD,oBACQA,IADR;AAEI,MAAA,MAAM,EAAEC,KAAK,IACTJ,eAAe,GAAY;AACvBR,MAAAA,KAAK,CAACa,aAAN,CAAoBH,SAApB,EAA+BE,KAA/B,CADW,GAGX,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAE,UAAAA,QAAQ,EAAE,QADV;AAEAC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAEJ,KAAK,CAACK,QADT;AAEHC,YAAAA,OAAO,EAAE;AAFN;AAFP,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAoBH;;AAED,WAASC,WAAT,CAAqB;AAAET,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAArB,EAA6C;AACzCS,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,SAAzB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,IAAvB;AACA,WACI,oBAAC,KAAD,oBACQA,IADR;AAEI,MAAA,MAAM,EAAEC,KAAK,IACTJ,eAAe,GACX,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAM,UAAAA,QAAQ,EAAE;AADV,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,GAOXd,KAAK,CAACa,aAAN,CAAoBH,SAApB,EAA+BE,KAA/B,CAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAgBH;AACJ,CA1DD;;AA4DA,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect, BrowserRouter } from 'react-router-dom';\n\n// components\nimport Layout from 'common/page/layout/layout';\n\n// pages\n//import 'Error' from \"pages/'error'\";\nimport LoginContainer from 'common/page/login/LoginContainer';\n\nconst App = ({ isAuthenticated }) => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <PrivateRoute path=\"/app\" component={Layout} />\n                <PublicRoute path=\"/login\" component={LoginContainer} />\n                <Route exact path=\"/app\" render={() => <Redirect to=\"/app/dashboard\" />} />\n                <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\n                {/* // 사용자 정의 컴포넌트 */}\n                {/*<Route component={Error} />*/}\n            </Switch>\n        </BrowserRouter>\n    );\n    // #######################################################################\n      \n    function PrivateRoute({ component, ...rest }) {     //...rest는 component 를 제외한 나머지 속성 즉 path 뿐\n        return (\n            <Route\n                {...rest}\n                render={props =>\n                    isAuthenticated ? (        // isAuthenticated 는 appcontainer 에 있음 로그인 정보?\n                        React.createElement(component, props)\n                    ) : (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                state: {\n                                    from: props.location,\n                                    explain: '로그인 인증 실패'\n                                }\n                            }}\n                        />\n                    )\n                }\n            />\n        );\n    }\n\n    function PublicRoute({ component, ...rest }) {\n        console.log('component', component);\n        console.log('...rest', rest);\n        return (\n            <Route\n                {...rest}\n                render={props =>\n                    isAuthenticated ? (\n                        <Redirect\n                            to={{\n                                pathname: '/'\n                            }}\n                        />\n                    ) : (\n                        React.createElement(component, props)\n                    )\n                }\n            />\n        );\n    }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}