{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\hr\\\\salary\\\\page\\\\MonthSalary\\\\MonthSalaryContainer.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport HrAppBar from 'erp/hr/util/HrAppBar';\nimport MySelect from 'erp/hr/util/MySelect';\nimport MyGrid from 'erp/hr/util/MyGrid';\nimport columnDefinition from './columnDefinition';\nimport { SEARCH_MONTH_SALARY_LIST_REQUEST } from \"../../saga/SearchMonthSalSaga\";\nimport { thisYear } from 'erp/hr/util/lib';\nimport { FormControl } from \"@material-ui/core\"; //-- 64 정준혁 2020-12-01 \n\nconst MonthSalaryContainer = () => {\n  const [selectData, setSelectData] = useState({\n    dept: [{\n      key: '전체부서',\n      value: 'ALL'\n    }],\n    calendar: [{\n      key: '전체날짜',\n      value: 'ALL'\n    }, ...thisYear()]\n  });\n  const [selectDeptTitle, setSelectDeptTitle] = useState(selectData.dept[0].value);\n  const [selectCalendar, setSelectCalendar] = useState(selectData.calendar[0].value);\n  const [rowData, setRowData] = useState([]);\n  const monthSalaryListDispatch = useDispatch();\n  const data = useSelector(({\n    hr\n  }) => hr.salary.searchmonthsal.monthSalary, []); // console.log(\"@@@@@@@@data==\"+data);\n\n  const selectHandleChange = useCallback(e => {\n    const selectValue = e.target.value;\n    const selectName = e.target.name;\n\n    if (selectName === '부서') {\n      setSelectDeptTitle(selectValue);\n    } else if (selectName === '달력') {\n      setSelectCalendar(selectValue);\n    }\n  }, []);\n  useEffect(() => {\n    monthSalaryListDispatch({\n      type: SEARCH_MONTH_SALARY_LIST_REQUEST,\n      payload: {\n        applyYearMonth: 'ALL',\n        deptCode: 'ALL'\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (selectDeptTitle === 'ALL' && selectCalendar === 'ALL') {\n      setRowData(data);\n      return;\n    }\n\n    let filterData = data;\n\n    if (selectDeptTitle !== 'ALL') {\n      filterData = filterData.filter(e => e.deptCode === selectDeptTitle); // console.log(\"@@@@@@@@@@@@@filterData==\"+filterData);\n    }\n\n    if (selectCalendar !== 'ALL') {\n      filterData = filterData.filter(e => e.applyYearMonth === selectCalendar);\n    }\n\n    setRowData(filterData);\n  }, [selectDeptTitle, selectCalendar, data]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8282/hr/base/deptList\").then(({\n      data\n    }) => {\n      console.log('~~~~~~~~~~~~~~~~~~~');\n      console.log(data);\n      const dataList = data.list.map(e => {\n        return {\n          key: e.deptName,\n          value: e.deptCode\n        };\n      });\n      setSelectData({ ...selectData,\n        dept: [...selectData.dept, ...dataList]\n      });\n    }).catch(e => {\n      alert(e);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(HrAppBar, {\n    title: \"\\uC6D4 \\uAE09\\uC5EC \\uC870\\uD68C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    style: {\n      minWidth: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(MySelect, {\n    selectName: '부서',\n    selectValue: selectDeptTitle,\n    selectonChange: selectHandleChange,\n    menuItemMap: selectData.dept,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    style: {\n      minWidth: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(MySelect, {\n    selectName: '달력',\n    selectValue: selectCalendar,\n    selectonChange: selectHandleChange,\n    menuItemMap: selectData.calendar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(MyGrid, {\n    columnDefinition: columnDefinition,\n    rowData: rowData,\n    paginationAutoPageSize: true,\n    pagination: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n};\n\nexport default React.memo(MonthSalaryContainer);","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/hr/salary/page/MonthSalary/MonthSalaryContainer.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","axios","HrAppBar","MySelect","MyGrid","columnDefinition","SEARCH_MONTH_SALARY_LIST_REQUEST","thisYear","FormControl","MonthSalaryContainer","selectData","setSelectData","dept","key","value","calendar","selectDeptTitle","setSelectDeptTitle","selectCalendar","setSelectCalendar","rowData","setRowData","monthSalaryListDispatch","data","hr","salary","searchmonthsal","monthSalary","selectHandleChange","e","selectValue","target","selectName","name","type","payload","applyYearMonth","deptCode","filterData","filter","get","then","console","log","dataList","list","map","deptName","catch","alert","minWidth","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport HrAppBar from 'erp/hr/util/HrAppBar'\nimport MySelect from 'erp/hr/util/MySelect'\nimport MyGrid from 'erp/hr/util/MyGrid'\nimport columnDefinition from './columnDefinition'\nimport { SEARCH_MONTH_SALARY_LIST_REQUEST } from \"../../saga/SearchMonthSalSaga\";\nimport { thisYear } from 'erp/hr/util/lib'\nimport { FormControl } from \"@material-ui/core\";\n//-- 64 정준혁 2020-12-01 \nconst MonthSalaryContainer = () => {\n    const [selectData, setSelectData] = useState(\n        {\n            dept: [\n                { key: '전체부서', value: 'ALL' }\n            ],\n            calendar: [\n                { key: '전체날짜', value: 'ALL' },\n                ...thisYear()\n            ]\n        }\n    );\n    const [selectDeptTitle, setSelectDeptTitle] = useState(selectData.dept[0].value)\n    const [selectCalendar, setSelectCalendar] = useState(selectData.calendar[0].value)\n    const [rowData, setRowData] = useState([]);\n    const monthSalaryListDispatch = useDispatch();\n    const data = useSelector(({ hr }) => hr.salary.searchmonthsal.monthSalary, []);\n   // console.log(\"@@@@@@@@data==\"+data);\n    const selectHandleChange = useCallback((e) => {\n        const selectValue = e.target.value;\n        const selectName = e.target.name;\n        if (selectName === '부서') {\n            setSelectDeptTitle(selectValue);\n        } else if (selectName === '달력') {\n            setSelectCalendar(selectValue)\n        }\n    }, []);\n\n    useEffect(() => {\n        monthSalaryListDispatch({\n            type: SEARCH_MONTH_SALARY_LIST_REQUEST,\n            payload: {\n                applyYearMonth: 'ALL',\n                deptCode: 'ALL'\n            },\n        });\n    }, []);\n\n    useEffect(() => {\n        if (selectDeptTitle === 'ALL' && selectCalendar === 'ALL') {\n            setRowData(data);\n            return;\n        }\n        let filterData = data;\n        if (selectDeptTitle !== 'ALL') {\n            filterData = filterData.filter(e => e.deptCode === selectDeptTitle);\n           // console.log(\"@@@@@@@@@@@@@filterData==\"+filterData);\n        }\n        if (selectCalendar !== 'ALL') {\n            filterData = filterData.filter(e => e.applyYearMonth === selectCalendar);\n        }\n        setRowData(filterData)\n    }, [selectDeptTitle, selectCalendar, data]);\n\n    useEffect(() => {\n        axios.get(\n            \"http://localhost:8282/hr/base/deptList\"\n        ).then(({ data }) => {\n            console.log('~~~~~~~~~~~~~~~~~~~');\n            console.log(data);\n            const dataList = data.list.map(e => {\n                return {\n                    key: e.deptName,\n                    value: e.deptCode\n                }\n            })\n\n            setSelectData({\n                ...selectData, dept: [...selectData.dept, ...dataList]\n            })\n        }).catch(e => {\n            alert(e);\n        });\n    }, []);\n    return (\n        <>\n            <HrAppBar title=\"월 급여 조회\" />\n            <FormControl style={{ minWidth: \"250px\" }}>\n                <MySelect\n                    selectName={'부서'}\n                    selectValue={selectDeptTitle}\n                    selectonChange={selectHandleChange}\n                    menuItemMap={selectData.dept} />\n            </FormControl>\n            <FormControl style={{ minWidth: \"250px\" }}>\n                <MySelect\n                    selectName={'달력'}\n                    selectValue={selectCalendar}\n                    selectonChange={selectHandleChange}\n                    menuItemMap={selectData.calendar} />\n            </FormControl>\n            <MyGrid\n                columnDefinition={columnDefinition}\n                rowData={rowData}\n                paginationAutoPageSize={true}\n                pagination={true} />\n        </>\n    );\n}\n\nexport default React.memo(MonthSalaryContainer);"]},"metadata":{},"sourceType":"module"}