{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport _ from 'lodash'; // https://lodash.com/docs/4.17.15 확인하자 라이브러리\n\nexport const START_PROJECT = 'common/dashboard/reducer_startPrj';\nexport const END_PROJECT = 'common/dashboard/reducer_endPrj';\nexport const startProjcet = createAction(START_PROJECT);\nexport const endProject = createAction(END_PROJECT);\nconst initialState = {\n  startPrj: sessionStorage.getItem('dashboard_off'),\n  status: 'INIT',\n  empInfo: [],\n  isLogin: false,\n  errorCode: '',\n  errorMsg: '',\n  isAuthenticated: !!sessionStorage.getItem('id_token'),\n  // 타입 맞춰 주려고 사용하는 문법 !! 불리언 값이 됨 ]\n  currentMenuName: '',\n  isSidebarOpened: true\n};\nconst authInitialState = {\n  status: 'INIT',\n  empAuthority: [],\n  errorCode: '',\n  errorMsg: ''\n};\nexport const AUTHORITY = 'AUTHORITY';\nexport const AUTHORITY_REQUEST = 'AUTHORITY_REQUEST';\nexport const AUTHORITY_SUCCESS = 'AUTHORITY_SUCCESS';\nexport const AUTHORITY_FAILURE = 'AUTHORITY_FAILURE'; //로그인\n\nexport const LOGIN = 'LOGIN'; //stuas\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'; // isLogin, empinfo\n\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'; // 에러\n\nexport const LOGOUT = 'LOGOUT'; //// isLoin, stus, empinf 리셋\n\nexport const RELOGIN_SUCCESS = 'RELOGIN_SUCCESS'; // 새로고침시 세션저장정보 값 활용하여 자동 재로그인\n//import * as api  from 'api/loginApi';\n//import axios from 'axios';\n//액션 생성 함수\n\nexport const login = createAction(LOGIN);\nexport const logout = createAction(LOGOUT);\nexport const logInOutRequest = createAction(LOGIN_REQUEST);\nexport const authorityRequest = createAction(AUTHORITY_REQUEST);\nexport const authority = createAction(AUTHORITY);\nexport const authoritySuccess = empAuthority => ({\n  type: AUTHORITY_SUCCESS,\n  empAuthority\n});\nexport const authorityFailure = error => ({\n  type: AUTHORITY_FAILURE,\n  error\n});\nexport const reLoginSuccess = () => ({\n  type: RELOGIN_SUCCESS\n});\nexport const loginSuccess = empInfo => ({\n  type: LOGIN_SUCCESS,\n  empInfo\n});\nexport const loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  error\n});\nconst reEmpinfo = {\n  empId: sessionStorage.getItem('id_token'),\n  password: sessionStorage.getItem('pw_token'),\n  empName: sessionStorage.getItem('empNameInfo_token'),\n  empCode: sessionStorage.getItem('empCodeInfo_token'),\n  deptCode: sessionStorage.getItem('deptCodeInfo_token'),\n  positionCode: sessionStorage.getItem('positionCodeInfo_token'),\n  businessPlaceCode: sessionStorage.getItem('businessPlaceCodeInfo_token'),\n  authorityCode: sessionStorage.getItem('authorityCodeInfo_token'),\n  deptName: sessionStorage.getItem('deptNameInfo_token'),\n  authorityLevel: sessionStorage.getItem('authorityLevel_token')\n}; //menu\n\nexport const MENU_ALL_LIST = 'MENU_ALL_LIST';\nexport const MENU_HR_LIST = 'MENU_HR_LIST';\nexport const MENU_LOGI_LIST = 'MENU_LOGI_LIST';\nexport const MENU_ACCOUNT_LIST = 'MENU_ACCOUNT_LIST';\nexport const MENU_LIST_REQUEST = 'MENU_LIST_REQUEST'; //import * as api  from 'api/loginApi';\n//import axios from 'axios';\n//액션 생성 함수\n\nexport const menuListRequest = createAction(MENU_LIST_REQUEST);\n/*\n    const menuListRequest = () => {\n        return {\n            type : MENU_LIST_REQUEST\n            payload :\n        }\n    }\n*/\n\nexport const menuAll = menuList => ({\n  type: MENU_ALL_LIST,\n  menuList\n});\nexport const menuAccount = menuList => ({\n  type: MENU_ACCOUNT_LIST,\n  menuList\n});\nexport const menuHr = menuList => ({\n  type: MENU_HR_LIST,\n  menuList\n});\nexport const menuLogi = menuList => ({\n  type: MENU_LOGI_LIST,\n  menuList\n}); //Sidebar\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const Auth = (state = authInitialState, action) => {\n  switch (action.type) {\n    case AUTHORITY:\n      return { ...state,\n        status: 'WAITING'\n      };\n\n    case AUTHORITY_SUCCESS:\n      return { ...state,\n        empAuthority: action.empAuthority,\n        status: 'SUCCESS'\n      };\n\n    case AUTHORITY_FAILURE:\n      return { ...state,\n        status: 'FAILURE',\n        errorCode: action.error.errorCode,\n        errorMsg: action.error.errorMsg\n      };\n\n    default:\n      return state;\n  }\n};\nexport const dashReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case START_PROJECT:\n      sessionStorage.setItem('dashboard_off', true);\n      return { ...state,\n        startPrj: sessionStorage.getItem('dashboard_off')\n      };\n\n    case END_PROJECT:\n      sessionStorage.setItem('dashboard_off', false);\n      return { ...state,\n        startPrj: sessionStorage.getItem('dashboard_off')\n      };\n\n    default:\n      return state;\n  }\n};\nexport const logInOutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state,\n        status: 'WAITING'\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        status: 'SUCCESS',\n        empInfo: action.empInfo,\n        isLogin: true,\n        isAuthenticated: true\n      };\n\n    case RELOGIN_SUCCESS:\n      return { ...state,\n        status: 'SUCCESS',\n        empInfo: reEmpinfo,\n        isLogin: true,\n        isAuthenticated: true\n      };\n\n    case LOGIN_FAILURE:\n      return { ...state,\n        status: 'FAILURE',\n        errorCode: action.error.errorCode,\n        errorMsg: action.error.errorMsg\n      };\n\n    case LOGOUT:\n      return { ...state,\n        status: 'INIT',\n        isLogin: false,\n        empInfo: '',\n        errorCode: '',\n        errorMsg: '',\n        isAuthenticated: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const menuListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MENU_ALL_LIST:\n      return { ...state,\n        menuList: action.menuList\n      };\n\n    case MENU_HR_LIST:\n      return { ...state,\n        menuList: [_.mapKeys(action.menuList, 'menuCode').HR00]\n      };\n\n    case MENU_ACCOUNT_LIST:\n      return { ...state,\n        menuList: [_.mapKeys(action.menuList, 'menuCode').ACC00]\n      };\n\n    case MENU_LOGI_LIST:\n      return { ...state,\n        menuList: [_.mapKeys(action.menuList, 'menuCode').LOGI00]\n      };\n\n    default:\n      return state;\n  }\n};\nexport const sideBarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return { ...state,\n        isSidebarOpened: !state.isSidebarOpened\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/common/reducer/commonReducer.js"],"names":["createAction","_","START_PROJECT","END_PROJECT","startProjcet","endProject","initialState","startPrj","sessionStorage","getItem","status","empInfo","isLogin","errorCode","errorMsg","isAuthenticated","currentMenuName","isSidebarOpened","authInitialState","empAuthority","AUTHORITY","AUTHORITY_REQUEST","AUTHORITY_SUCCESS","AUTHORITY_FAILURE","LOGIN","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","RELOGIN_SUCCESS","login","logout","logInOutRequest","authorityRequest","authority","authoritySuccess","type","authorityFailure","error","reLoginSuccess","loginSuccess","loginFailure","reEmpinfo","empId","password","empName","empCode","deptCode","positionCode","businessPlaceCode","authorityCode","deptName","authorityLevel","MENU_ALL_LIST","MENU_HR_LIST","MENU_LOGI_LIST","MENU_ACCOUNT_LIST","MENU_LIST_REQUEST","menuListRequest","menuAll","menuList","menuAccount","menuHr","menuLogi","TOGGLE_SIDEBAR","Auth","state","action","dashReducer","setItem","logInOutReducer","menuListReducer","mapKeys","HR00","ACC00","LOGI00","sideBarReducer"],"mappings":"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","sourcesContent":["import { createAction } from 'redux-actions';\nimport _ from 'lodash'; // https://lodash.com/docs/4.17.15 확인하자 라이브러리\n\nexport const START_PROJECT = 'common/dashboard/reducer_startPrj';\nexport const END_PROJECT = 'common/dashboard/reducer_endPrj';\n\nexport const startProjcet = createAction(START_PROJECT);\nexport const endProject = createAction(END_PROJECT);\n\nconst initialState = {\n    startPrj: sessionStorage.getItem('dashboard_off'),\n    status: 'INIT',\n    empInfo: [],\n    isLogin: false,\n    errorCode: '',\n    errorMsg: '',\n    isAuthenticated: !!sessionStorage.getItem('id_token'), // 타입 맞춰 주려고 사용하는 문법 !! 불리언 값이 됨 ]\n    currentMenuName: '',\n    isSidebarOpened: true\n};\n\nconst authInitialState = {\n    status: 'INIT',\n    empAuthority: [],\n    errorCode: '',\n    errorMsg: ''\n};\nexport const AUTHORITY = 'AUTHORITY';\nexport const AUTHORITY_REQUEST = 'AUTHORITY_REQUEST';\nexport const AUTHORITY_SUCCESS = 'AUTHORITY_SUCCESS';\nexport const AUTHORITY_FAILURE = 'AUTHORITY_FAILURE';\n\n//로그인\nexport const LOGIN = 'LOGIN'; //stuas\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'; // isLogin, empinfo\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'; // 에러\nexport const LOGOUT = 'LOGOUT'; //// isLoin, stus, empinf 리셋\n\nexport const RELOGIN_SUCCESS = 'RELOGIN_SUCCESS'; // 새로고침시 세션저장정보 값 활용하여 자동 재로그인\n\n//import * as api  from 'api/loginApi';\n\n//import axios from 'axios';\n\n//액션 생성 함수\nexport const login = createAction(LOGIN);\nexport const logout = createAction(LOGOUT);\n\nexport const logInOutRequest = createAction(LOGIN_REQUEST);\nexport const authorityRequest = createAction(AUTHORITY_REQUEST);\nexport const authority = createAction(AUTHORITY);\n\nexport const authoritySuccess = empAuthority => ({\n    type: AUTHORITY_SUCCESS,\n    empAuthority\n});\n\nexport const authorityFailure = error => ({\n    type: AUTHORITY_FAILURE,\n    error\n});\n\nexport const reLoginSuccess = () => ({\n    type: RELOGIN_SUCCESS\n});\n\nexport const loginSuccess = empInfo => ({\n    type: LOGIN_SUCCESS,\n    empInfo\n});\n\nexport const loginFailure = error => ({\n    type: LOGIN_FAILURE,\n    error\n});\n\nconst reEmpinfo = {\n    empId: sessionStorage.getItem('id_token'),\n    password: sessionStorage.getItem('pw_token'),\n    empName: sessionStorage.getItem('empNameInfo_token'),\n    empCode: sessionStorage.getItem('empCodeInfo_token'),\n    deptCode: sessionStorage.getItem('deptCodeInfo_token'),\n    positionCode: sessionStorage.getItem('positionCodeInfo_token'),\n    businessPlaceCode: sessionStorage.getItem('businessPlaceCodeInfo_token'),\n    authorityCode: sessionStorage.getItem('authorityCodeInfo_token'),\n    deptName: sessionStorage.getItem('deptNameInfo_token'),\n    authorityLevel: sessionStorage.getItem('authorityLevel_token')\n};\n\n//menu\nexport const MENU_ALL_LIST = 'MENU_ALL_LIST';\nexport const MENU_HR_LIST = 'MENU_HR_LIST';\nexport const MENU_LOGI_LIST = 'MENU_LOGI_LIST';\nexport const MENU_ACCOUNT_LIST = 'MENU_ACCOUNT_LIST';\nexport const MENU_LIST_REQUEST = 'MENU_LIST_REQUEST';\n//import * as api  from 'api/loginApi';\n\n//import axios from 'axios';\n\n//액션 생성 함수\n\nexport const menuListRequest = createAction(MENU_LIST_REQUEST);\n/*\n    const menuListRequest = () => {\n        return {\n            type : MENU_LIST_REQUEST\n            payload :\n        }\n    }\n*/\n\nexport const menuAll = menuList => ({\n    type: MENU_ALL_LIST,\n    menuList\n});\n\nexport const menuAccount = menuList => ({\n    type: MENU_ACCOUNT_LIST,\n    menuList\n});\n\nexport const menuHr = menuList => ({\n    type: MENU_HR_LIST,\n    menuList\n});\n\nexport const menuLogi = menuList => ({\n    type: MENU_LOGI_LIST,\n    menuList\n});\n\n//Sidebar\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\nexport const Auth = (state = authInitialState, action) => {\n    switch (action.type) {\n        case AUTHORITY:\n            return {\n                ...state,\n                status: 'WAITING'\n            };\n        case AUTHORITY_SUCCESS:\n            return {\n                ...state,\n                empAuthority: action.empAuthority,\n                status: 'SUCCESS'\n            };\n        case AUTHORITY_FAILURE:\n            return {\n                ...state,\n                status: 'FAILURE',\n                errorCode: action.error.errorCode,\n                errorMsg: action.error.errorMsg\n            };\n        default:\n            return state;\n    }\n};\n\nexport const dashReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case START_PROJECT:\n            sessionStorage.setItem('dashboard_off', true);\n            return {\n                ...state,\n                startPrj: sessionStorage.getItem('dashboard_off')\n            };\n        case END_PROJECT:\n            sessionStorage.setItem('dashboard_off', false);\n            return {\n                ...state,\n                startPrj: sessionStorage.getItem('dashboard_off')\n            };\n        default:\n            return state;\n    }\n};\n\nexport const logInOutReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                ...state,\n                status: 'WAITING'\n            };\n\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                status: 'SUCCESS',\n                empInfo: action.empInfo,\n                isLogin: true,\n                isAuthenticated: true\n            };\n\n        case RELOGIN_SUCCESS:\n            return {\n                ...state,\n                status: 'SUCCESS',\n                empInfo: reEmpinfo,\n                isLogin: true,\n                isAuthenticated: true\n            };\n\n        case LOGIN_FAILURE:\n            return {\n                ...state,\n                status: 'FAILURE',\n                errorCode: action.error.errorCode,\n                errorMsg: action.error.errorMsg\n            };\n\n        case LOGOUT:\n            return {\n                ...state,\n                status: 'INIT',\n                isLogin: false,\n                empInfo: '',\n                errorCode: '',\n                errorMsg: '',\n                isAuthenticated: false\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const menuListReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case MENU_ALL_LIST:\n            return {\n                ...state,\n                menuList: action.menuList\n            };\n        case MENU_HR_LIST:\n            return {\n                ...state,\n                menuList: [_.mapKeys(action.menuList, 'menuCode').HR00]\n            };\n        case MENU_ACCOUNT_LIST:\n            return {\n                ...state,\n                menuList: [_.mapKeys(action.menuList, 'menuCode').ACC00]\n            };\n        case MENU_LOGI_LIST:\n            return {\n                ...state,\n                menuList: [_.mapKeys(action.menuList, 'menuCode').LOGI00]\n            };\n        default:\n            return state;\n    }\n};\n\nexport const sideBarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_SIDEBAR:\n            return {\n                ...state,\n                isSidebarOpened: !state.isSidebarOpened\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}