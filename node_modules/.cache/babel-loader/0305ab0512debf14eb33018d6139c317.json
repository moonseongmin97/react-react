{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\sales\\\\page\\\\Contract\\\\ContractRegist.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\nimport ContractRegistDetail from './ContractRegistDetail';\nimport ContractTypeSearchDialog from './ContractTypeSearchDialog';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport { useSelector } from 'react-redux';\nimport * as Api from 'erp/logistic/sales/api';\nimport useAsync from 'util/useAsync';\n\nfunction ContractRegist(props) {\n  const today = moment(new Date()).format('yyyy-MM-DD');\n  const {\n    empCode\n  } = useSelector(state => state.logInOutReducer.empInfo);\n  const [size, setSize] = useState('calc(100vh - 290px)');\n  const [detailList, setDetailList] = useState([]);\n  const [selContract, setSelContract] = useState();\n  const [selList, setSelList] = useState([]);\n  const [gridApi, setGrid] = useState();\n  const column = {\n    columnDefs: [{\n      headerName: 'Í≤¨Ï†ÅÏùºÎ†®Î≤àÌò∏',\n      field: 'estimateNo',\n      checkboxSelection: true\n    }, {\n      headerName: 'ÏàòÏ£ºÏú†ÌòïÎ∂ÑÎ•ò',\n      field: 'contractType'\n    }, {\n      headerName: 'Í±∞ÎûòÏ≤òÏΩîÎìú',\n      field: 'customerCode'\n    }, {\n      headerName: \"Í±∞ÎûòÏ≤òÎ™Ö\",\n      field: \"customerName\"\n    }, {\n      headerName: 'ÏàòÏ£ºÏöîÏ≤≠Ïûê',\n      field: 'contractRequester',\n      editable: true\n    }, {\n      headerName: 'Í≤¨Ï†ÅÏùºÏûê',\n      field: 'estimateDate',\n      cellRenderer: function (params) {\n        if (params.value === undefined) {\n          params.value = 'YYYY-MM-DD';\n        }\n\n        return 'üìÖ ' + params.value;\n      },\n      cellEditor: 'datePicker'\n    }, {\n      headerName: 'Ïú†Ìö®ÏùºÏûê',\n      field: 'effectiveDate',\n      cellRenderer: function (params) {\n        if (params.value === undefined) {\n          params.value = 'YYYY-MM-DD';\n        }\n\n        return 'üìÖ ' + params.value;\n      },\n      cellEditor: 'datePicker'\n    }, {\n      headerName: 'Í≤¨Ï†ÅÎã¥ÎãπÏûêÏΩîÎìú',\n      field: 'personCodeInCharge'\n    }, {\n      headerName: 'ÎπÑÍ≥†',\n      field: 'description',\n      editable: true\n    }]\n  };\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n\n  const basicInfo = (startDate, endDate) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const onChangeDate = e => {\n    if (e.target.id === 'startDate') {\n      setStartDate(e.target.value);\n    } else {\n      setEndDate(e.target.value);\n    }\n  };\n\n  const [estimate, estimateSearchFetch] = useAsync(param => Api.estimateSearch(param), [], true);\n  const estimateSearch = useCallback(() => {\n    var param = {\n      startDate: startDate,\n      endDate: endDate\n    };\n    estimateSearchFetch(param);\n  }, [endDate, estimateSearchFetch, startDate]);\n\n  const onCellClicked = params => {\n    if (params.colDef.field === 'contractType') {\n      setSearchOpenDialog(true);\n    }\n\n    setSelList([params.data]);\n    setSelContract('ÏÉÅÏÑ∏ Î≥¥Í∏∞');\n    setSize('30vh');\n    setDetailList(params.data.estimateDetailTOList);\n  };\n\n  const detailClose = () => {\n    setSize('calc(100vh - 290px)');\n    setSelContract();\n  };\n\n  const api = params => {\n    setGrid(params.api);\n  };\n\n  const [result, addContractFetch] = useAsync(param => Api.addContract(param), [], true);\n\n  const addContract = () => {\n    if (selList[0] === undefined) {\n      return alert('ÏàòÏ£ºÌï† Í≤¨Ï†ÅÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');\n    }\n\n    if (selList[0] !== undefined) {\n      if (selList[0].contractType === undefined) {\n        return alert('ÏàòÏ£º Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî');\n      }\n\n      if (selList[0].contractRequester === undefined || selList[0].contractRequester === '') {\n        return alert('ÏàòÏ£º ÏöîÏ≤≠ÏûêÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');\n      }\n    }\n\n    var param = {\n      batchList: JSON.stringify(selList[0]),\n      contractDate: today,\n      personCodeInCharge: empCode\n    };\n    addContractFetch(param);\n  };\n\n  useEffect(() => {\n    if (result.data !== null) {\n      alert('ÏàòÏ£º Î≤àÌò∏ ' + result.data.contractNo + 'ÏúºÎ°ú Îì±Î°ù ÎêòÏóàÏäµÎãàÎã§.');\n      setSize('calc(100vh - 290px)');\n      setSelContract();\n      gridApi.setRowData(null);\n      setDetailList(null);\n    }\n  }, [gridApi, result, result.data]);\n  const [searchOpenDialog, setSearchOpenDialog] = useState(false);\n\n  const close = () => {\n    setSearchOpenDialog(false);\n  };\n\n  const onDialogCellClicked = params => {\n    var newList = [{ ...selList[0],\n      contractType: params.data.detailCode\n    }];\n    gridApi.setRowData(newList);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: column,\n    title: 'ÏàòÏ£º Îì±Î°ù',\n    size: size,\n    list: estimate.data && estimate.data.gridRowJson,\n    onCellClicked: onCellClicked,\n    components: {\n      datePicker: getDatePicker()\n    },\n    api: api,\n    rowSelection: \"single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    basicInfo: basicInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginTop: '1vh'\n    },\n    onClick: estimateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\uACAC\\uC801 \\uC870\\uD68C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginTop: '1vh'\n    },\n    onClick: addContract,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"\\uC218\\uC8FC \\uB4F1\\uB85D\")), selContract === undefined ? '' : React.createElement(ContractRegistDetail, {\n    detailList: detailList,\n    detailClose: detailClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(MyDialog, {\n    open: searchOpenDialog,\n    close: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(ContractTypeSearchDialog, {\n    close: close,\n    onCellClicked: onDialogCellClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })));\n}\n\nexport default ContractRegist;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/sales/page/Contract/ContractRegist.js"],"names":["React","useEffect","useState","useCallback","MyGrid","MyCalendar","getDatePicker","moment","Button","ContractRegistDetail","ContractTypeSearchDialog","MyDialog","useSelector","Api","useAsync","ContractRegist","props","today","Date","format","empCode","state","logInOutReducer","empInfo","size","setSize","detailList","setDetailList","selContract","setSelContract","selList","setSelList","gridApi","setGrid","column","columnDefs","headerName","field","checkboxSelection","editable","cellRenderer","params","value","undefined","cellEditor","startDate","setStartDate","endDate","setEndDate","basicInfo","onChangeDate","e","target","id","estimate","estimateSearchFetch","param","estimateSearch","onCellClicked","colDef","setSearchOpenDialog","data","estimateDetailTOList","detailClose","api","result","addContractFetch","addContract","alert","contractType","contractRequester","batchList","JSON","stringify","contractDate","personCodeInCharge","contractNo","setRowData","searchOpenDialog","close","onDialogCellClicked","newList","detailCode","gridRowJson","datePicker","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\nimport ContractRegistDetail from './ContractRegistDetail';\nimport ContractTypeSearchDialog from './ContractTypeSearchDialog';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport { useSelector } from 'react-redux';\nimport * as Api from 'erp/logistic/sales/api';\nimport useAsync from 'util/useAsync';\n\nfunction ContractRegist(props) {\n    const today = moment(new Date()).format('yyyy-MM-DD');\n    const { empCode } = useSelector(state => state.logInOutReducer.empInfo);\n    const [size, setSize] = useState('calc(100vh - 290px)');\n    const [detailList, setDetailList] = useState([]);\n    const [selContract, setSelContract] = useState();\n    const [selList, setSelList] = useState([]);\n    const [gridApi, setGrid] = useState();\n\n    const column = {\n        columnDefs: [\n            { headerName: 'Í≤¨Ï†ÅÏùºÎ†®Î≤àÌò∏', field: 'estimateNo', checkboxSelection: true },\n            { headerName: 'ÏàòÏ£ºÏú†ÌòïÎ∂ÑÎ•ò', field: 'contractType' },\n            { headerName: 'Í±∞ÎûòÏ≤òÏΩîÎìú', field: 'customerCode' },\n            { headerName: \"Í±∞ÎûòÏ≤òÎ™Ö\", field: \"customerName\" },\n            { headerName: 'ÏàòÏ£ºÏöîÏ≤≠Ïûê', field: 'contractRequester', editable: true },\n            {\n                headerName: 'Í≤¨Ï†ÅÏùºÏûê',\n                field: 'estimateDate',\n                cellRenderer: function(params) {\n                    if (params.value === undefined) {\n                        params.value = 'YYYY-MM-DD';\n                    }\n                    return 'üìÖ ' + params.value;\n                },\n                cellEditor: 'datePicker'\n            },\n            {\n                headerName: 'Ïú†Ìö®ÏùºÏûê',\n                field: 'effectiveDate',\n                cellRenderer: function(params) {\n                    if (params.value === undefined) {\n                        params.value = 'YYYY-MM-DD';\n                    }\n                    return 'üìÖ ' + params.value;\n                },\n                cellEditor: 'datePicker'\n            },\n            { headerName: 'Í≤¨Ï†ÅÎã¥ÎãπÏûêÏΩîÎìú', field: 'personCodeInCharge' },\n            { headerName: 'ÎπÑÍ≥†', field: 'description', editable: true }\n        ]\n    };\n\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n\n    const basicInfo = (startDate, endDate) => {\n        setStartDate(startDate);\n        setEndDate(endDate);\n    };\n\n    const onChangeDate = e => {\n        if (e.target.id === 'startDate') {\n            setStartDate(e.target.value);\n        } else {\n            setEndDate(e.target.value);\n        }\n    };\n\n    const [estimate, estimateSearchFetch] = \n    useAsync((param) => Api.estimateSearch(param), [], true);\n\n    const estimateSearch = useCallback(() => {\n        var param = {\n            startDate: startDate,\n            endDate: endDate\n        };\n\n        estimateSearchFetch(param);\n    },[endDate, estimateSearchFetch, startDate]);\n\n    const onCellClicked = params => {\n        if (params.colDef.field === 'contractType') {\n            setSearchOpenDialog(true);\n        }\n        setSelList([params.data]);\n        setSelContract('ÏÉÅÏÑ∏ Î≥¥Í∏∞');\n        setSize('30vh');\n        setDetailList(params.data.estimateDetailTOList);\n    };\n\n    const detailClose = () => {\n        setSize('calc(100vh - 290px)');\n        setSelContract();\n    };\n\n    const api = params => {\n        setGrid(params.api);\n    };\n\n    const [result, addContractFetch] = \n    useAsync((param) => Api.addContract(param), [], true);\n\n    const addContract = () => {\n        if (selList[0] === undefined) {\n            return alert('ÏàòÏ£ºÌï† Í≤¨Ï†ÅÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');\n        }\n        if (selList[0] !== undefined) {\n            if (selList[0].contractType === undefined) {\n                return alert('ÏàòÏ£º Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî');\n            }\n            if (selList[0].contractRequester === undefined || selList[0].contractRequester === '') {\n                return alert('ÏàòÏ£º ÏöîÏ≤≠ÏûêÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');\n            }\n        }\n\n        var param = {\n            batchList: JSON.stringify(selList[0]),\n            contractDate: today,\n            personCodeInCharge: empCode\n        };\n\n        addContractFetch(param);\n    };\n\n    \n    useEffect(() => {\n        if(result.data!==null){\n            alert('ÏàòÏ£º Î≤àÌò∏ ' + result.data.contractNo + 'ÏúºÎ°ú Îì±Î°ù ÎêòÏóàÏäµÎãàÎã§.');\n            setSize('calc(100vh - 290px)');\n            setSelContract();\n            gridApi.setRowData(null);\n            setDetailList(null);\n        }\n    },[gridApi, result, result.data]);\n\n    const [searchOpenDialog, setSearchOpenDialog] = useState(false);\n    const close = () => {\n        setSearchOpenDialog(false);\n    };\n\n    const onDialogCellClicked = params => {\n        var newList = [{ ...selList[0], contractType: params.data.detailCode }];\n        gridApi.setRowData(newList);    \n   };\n\n    return (\n        <>\n            <MyGrid\n                column={column}\n                title={'ÏàòÏ£º Îì±Î°ù'}\n                size={size}\n                list={estimate.data&&estimate.data.gridRowJson}\n                onCellClicked={onCellClicked}\n                components={{ datePicker: getDatePicker() }}\n                api={api}\n                rowSelection=\"single\"\n            >\n                <MyCalendar onChangeDate={onChangeDate} basicInfo={basicInfo} />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginTop: '1vh' }}\n                    onClick={estimateSearch}\n                >\n                    Í≤¨Ï†Å Ï°∞Ìöå\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginTop: '1vh' }}\n                    onClick={addContract}\n                >\n                    ÏàòÏ£º Îì±Î°ù\n                </Button>\n            </MyGrid>\n            {selContract === undefined ? (\n                ''\n            ) : (\n                <ContractRegistDetail detailList={detailList} detailClose={detailClose} />\n            )}\n            <MyDialog open={searchOpenDialog} close={close}>\n                <ContractTypeSearchDialog close={close} onCellClicked={onDialogCellClicked} />\n            </MyDialog>\n        </>\n    );\n}\n\nexport default ContractRegist;\n"]},"metadata":{},"sourceType":"module"}