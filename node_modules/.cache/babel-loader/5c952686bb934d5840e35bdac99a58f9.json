{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\base\\\\page\\\\DepartmentManage\\\\DepartmentManage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"./DepartmentManage.scss\";\nimport { makeStyles, AppBar, Toolbar, Typography, Paper } from \"@material-ui/core\";\nimport DepartmentDialog from \"./DepartmentDialog\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Button } from \"@material-ui/core\";\n\nconst DepartmentManage = ({\n  departmentManagerRequest,\n  departmentManageMemberRequest,\n  updateDepartmentRequest,\n  errorCode,\n  errorMsg,\n  list\n}) => {\n  const [gridApi, setGridApi] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [deptCode, setDeptCode] = useState(\"\");\n  const toDate = moment(new Date()).format(\"yyyy-MM-DD\");\n\n  const onGridReady = params => {\n    setGridApi(params.api);\n    console.log(gridApi);\n    console.log(\"gridApi\");\n    params.api.sizeColumnsToFit();\n  };\n\n  const createNewRowData = () => {\n    let newData = {\n      deptCode: \"부서코드 입력\",\n      deptName: \"부서명 입력\",\n      workplaceName: \"(주)세계전자본사\",\n      workplaceCode: \"BRC-01\",\n      deptStartDate: toDate,\n      status: \"insert\"\n    };\n    return newData;\n  };\n\n  const addOnClick = evet => {\n    console.log(\"클릭\");\n    const newItem = createNewRowData();\n    gridApi.updateRowData({\n      add: [newItem]\n    }); // 만들어진 새로운 row를 그리드에 add 해라.\n  };\n\n  const onCellClicked = params => {\n    const selectedRows = gridApi.getSelectedRows();\n    console.log(\"selectedRows\", selectedRows);\n    console.log(\"params\");\n    console.log(params);\n    setDeptCode(params.data.deptCode);\n  };\n\n  const deleteOnClick = () => {\n    window.confirm(\"삭제하면 돌이킬수 없습니다\");\n    console.log(\"삭제\");\n    const selectedData = gridApi.getSelectedRows();\n    console.log(selectedData);\n    selectedData[0].status = \"delete\";\n    gridApi.updateRowData({\n      remove: selectedData\n    });\n    updateDepartmentRequest(selectedData);\n  };\n\n  async function CellEditingStopped(row) {\n    console.log(\"CellEditingStopped  row+\");\n    console.log(row);\n\n    if (row.data.status !== \"insert\") {\n      row.data.status = \"update\";\n    } else {}\n\n    await updateDepartmentRequest([row.data]);\n    row.data.status = \"update\";\n  }\n\n  useEffect(() => {\n    departmentManagerRequest([]);\n  }, []);\n  const state = {\n    columnDefs: [{\n      headerName: \"회사명\",\n      field: \"workplaceName\"\n    }, {\n      headerName: \"회사코드\",\n      field: \"workplaceCode\",\n      editable: true\n    }, {\n      headerName: \"부서명\",\n      field: \"deptName\",\n      editable: true\n    }, {\n      headerName: \"부서코드\",\n      field: \"deptCode\",\n      editable: true\n    }, {\n      headerName: \"부서신설일\",\n      field: \"deptStartDate\"\n    }, {\n      headerName: \"상태\",\n      field: \"status\",\n      hide: true\n    }]\n  };\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(3, 5)\n    }\n  }));\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const onCellDoubleClicked = () => {\n    setOpenDialog(true);\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openMapping = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\\uBD80\\uC11C\\uAD00\\uB9AC\\uBAA9\\uB85D\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \" [ \\uAD00 \\uB9AC ] \"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addOnClick,\n    startIcon: React.createElement(Icon, {\n      className: \"fa fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\uCD94\\uAC00\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: deleteOnClick,\n    startIcon: React.createElement(DeleteOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\"))), React.createElement(DepartmentDialog, {\n    deptCode: deptCode,\n    open: openDialog,\n    close: handleClose,\n    departmentManageMemberRequest: departmentManageMemberRequest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ag-theme-material\",\n    skipHeaderOnAutoSize: \"true\",\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"400px\",\n      width: \"100%\",\n      paddingTop: \"10px\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: state.columnDefs,\n    onGridReady: onGridReady,\n    rowData: list,\n    onCellEditingStopped: CellEditingStopped,\n    onCellClicked: onCellClicked,\n    rowSelection: \"single\",\n    onCellDoubleClicked: onCellDoubleClicked,\n    paginationAutoPageSize: true,\n    pagination: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })))));\n};\n\nexport default DepartmentManage;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/base/page/DepartmentManage/DepartmentManage.jsx"],"names":["React","useEffect","useState","moment","AgGridReact","makeStyles","AppBar","Toolbar","Typography","Paper","DepartmentDialog","DeleteOutlinedIcon","Icon","Button","DepartmentManage","departmentManagerRequest","departmentManageMemberRequest","updateDepartmentRequest","errorCode","errorMsg","list","gridApi","setGridApi","openDialog","setOpenDialog","deptCode","setDeptCode","toDate","Date","format","onGridReady","params","api","console","log","sizeColumnsToFit","createNewRowData","newData","deptName","workplaceName","workplaceCode","deptStartDate","status","addOnClick","evet","newItem","updateRowData","add","onCellClicked","selectedRows","getSelectedRows","data","deleteOnClick","window","confirm","selectedData","remove","CellEditingStopped","row","state","columnDefs","headerName","field","editable","hide","useStyles","theme","paper","padding","spacing","classes","handleClose","onCellDoubleClicked","isModalOpen","setIsModalOpen","openMapping","closeModal","height","width","paddingTop","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;AACA,OAAO,yBAAP;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,KALF,QAMO,mBANP;AAOA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,wBADwB;AAExBC,EAAAA,6BAFwB;AAGxBC,EAAAA,uBAHwB;AAIxBC,EAAAA,SAJwB;AAKxBC,EAAAA,QALwB;AAMxBC,EAAAA;AANwB,CAAD,KAOnB;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMyB,MAAM,GAAGxB,MAAM,CAAC,IAAIyB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAf;;AAEA,QAAMC,WAAW,GAAGC,MAAM,IAAI;AAC5BT,IAAAA,UAAU,CAACS,MAAM,CAACC,GAAR,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,IAAAA,MAAM,CAACC,GAAP,CAAWG,gBAAX;AACD,GALD;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIC,OAAO,GAAG;AACZZ,MAAAA,QAAQ,EAAE,SADE;AAEZa,MAAAA,QAAQ,EAAE,QAFE;AAGZC,MAAAA,aAAa,EAAE,WAHH;AAIZC,MAAAA,aAAa,EAAE,QAJH;AAKZC,MAAAA,aAAa,EAAEd,MALH;AAMZe,MAAAA,MAAM,EAAE;AANI,KAAd;AAQA,WAAOL,OAAP;AACD,GAVD;;AAYA,QAAMM,UAAU,GAAGC,IAAI,IAAI;AACzBX,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,UAAMW,OAAO,GAAGT,gBAAgB,EAAhC;AACAf,IAAAA,OAAO,CAACyB,aAAR,CAAsB;AAAEC,MAAAA,GAAG,EAAE,CAACF,OAAD;AAAP,KAAtB,EAHyB,CAGkB;AAC5C,GAJD;;AAMA,QAAMG,aAAa,GAAGjB,MAAM,IAAI;AAC9B,UAAMkB,YAAY,GAAG5B,OAAO,CAAC6B,eAAR,EAArB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Be,YAA5B;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,IAAAA,WAAW,CAACK,MAAM,CAACoB,IAAP,CAAY1B,QAAb,CAAX;AACD,GAND;;AAQA,QAAM2B,aAAa,GAAG,MAAM;AAC1BC,IAAAA,MAAM,CAACC,OAAP,CAAe,gBAAf;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,UAAMqB,YAAY,GAAGlC,OAAO,CAAC6B,eAAR,EAArB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,YAAZ;AACAA,IAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBb,MAAhB,GAAyB,QAAzB;AACArB,IAAAA,OAAO,CAACyB,aAAR,CAAsB;AAAEU,MAAAA,MAAM,EAAED;AAAV,KAAtB;AACAtC,IAAAA,uBAAuB,CAACsC,YAAD,CAAvB;AACD,GARD;;AAUA,iBAAeE,kBAAf,CAAkCC,GAAlC,EAAuC;AACrCzB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;;AACA,QAAIA,GAAG,CAACP,IAAJ,CAAST,MAAT,KAAoB,QAAxB,EAAkC;AAChCgB,MAAAA,GAAG,CAACP,IAAJ,CAAST,MAAT,GAAkB,QAAlB;AACD,KAFD,MAEO,CACN;;AACD,UAAMzB,uBAAuB,CAAC,CAACyC,GAAG,CAACP,IAAL,CAAD,CAA7B;AACAO,IAAAA,GAAG,CAACP,IAAJ,CAAST,MAAT,GAAkB,QAAlB;AACD;;AAEDzC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,wBAAwB,CAAC,EAAD,CAAxB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM4C,KAAK,GAAG;AACZC,IAAAA,UAAU,EAAE,CACV;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADU,EAEV;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE,eAA7B;AAA8CC,MAAAA,QAAQ,EAAE;AAAxD,KAFU,EAGV;AAAEF,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,KAAK,EAAE,UAA5B;AAAwCC,MAAAA,QAAQ,EAAE;AAAlD,KAHU,EAIV;AAAEF,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE,UAA7B;AAAyCC,MAAAA,QAAQ,EAAE;AAAnD,KAJU,EAKV;AAAEF,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KALU,EAMV;AAAED,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,KAAK,EAAE,QAA3B;AAAqCE,MAAAA,IAAI,EAAE;AAA3C,KANU;AADA,GAAd;AAWA,QAAMC,SAAS,GAAG5D,UAAU,CAAC6D,KAAK,KAAK;AACrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADJ;AAD8B,GAAL,CAAN,CAA5B;AAKA,QAAMC,OAAO,GAAGL,SAAS,EAAzB;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxB/C,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMgD,mBAAmB,GAAG,MAAM;AAChChD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,QAAM,CAACiD,WAAD,EAAcC,cAAd,IAAgCxE,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMyE,WAAW,GAAG,MAAM;AACxBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,QAAME,UAAU,GAAG,MAAM;AACvBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEJ,OAAO,CAACH,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAExB,UAHX;AAIE,IAAA,SAAS,EAAE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAES,aAHX;AAIE,IAAA,SAAS,EAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF,CATF,EA+BE,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAE3B,QADZ;AAEE,IAAA,IAAI,EAAEF,UAFR;AAGE,IAAA,KAAK,EAAEgD,WAHT;AAIE,IAAA,6BAA6B,EAAEvD,6BAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,EAsCE;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAE,mBADb;AAEE,IAAA,oBAAoB,EAAC,MAFvB;AAGE,IAAA,eAAe,EAAC,MAHlB;AAIE,IAAA,aAAa,EAAC,MAJhB;AAKE,IAAA,YAAY,EAAC,MALf;AAME,IAAA,oBAAoB,EAAC,MANvB;AAOE,IAAA,QAAQ,EAAE;AAAE,oBAAc;AAAhB,KAPZ;AAQE,IAAA,KAAK,EAAE;AACL6D,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,UAAU,EAAE;AAHP,KART;AAaE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAErB,KAAK,CAACC,UADpB;AAEE,IAAA,WAAW,EAAE9B,WAFf;AAGE,IAAA,OAAO,EAAEV,IAHX;AAIE,IAAA,oBAAoB,EAAEqC,kBAJxB;AAKE,IAAA,aAAa,EAAET,aALjB;AAME,IAAA,YAAY,EAAC,QANf;AAOE,IAAA,mBAAmB,EAAEwB,mBAPvB;AAQE,IAAA,sBAAsB,EAAE,IAR1B;AASE,IAAA,UAAU,EAAE,IATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CAtCF,CADF,CADF;AAwED,CAjLD;;AAmLA,eAAe1D,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"./DepartmentManage.scss\";\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport DepartmentDialog from \"./DepartmentDialog\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Button } from \"@material-ui/core\";\n\nconst DepartmentManage = ({\n  departmentManagerRequest,\n  departmentManageMemberRequest,\n  updateDepartmentRequest,\n  errorCode,\n  errorMsg,\n  list,\n}) => {\n  const [gridApi, setGridApi] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [deptCode, setDeptCode] = useState(\"\");\n\n  const toDate = moment(new Date()).format(\"yyyy-MM-DD\");\n\n  const onGridReady = params => {\n    setGridApi(params.api);\n    console.log(gridApi);\n    console.log(\"gridApi\");\n    params.api.sizeColumnsToFit();\n  };\n\n  const createNewRowData = () => {\n    let newData = {\n      deptCode: \"부서코드 입력\",\n      deptName: \"부서명 입력\",\n      workplaceName: \"(주)세계전자본사\",\n      workplaceCode: \"BRC-01\",\n      deptStartDate: toDate,\n      status: \"insert\",\n    };\n    return newData;\n  };\n\n  const addOnClick = evet => {\n    console.log(\"클릭\");\n    const newItem = createNewRowData();\n    gridApi.updateRowData({ add: [newItem] }); // 만들어진 새로운 row를 그리드에 add 해라.\n  };\n\n  const onCellClicked = params => {\n    const selectedRows = gridApi.getSelectedRows();\n    console.log(\"selectedRows\", selectedRows);\n    console.log(\"params\");\n    console.log(params);\n    setDeptCode(params.data.deptCode);\n  };\n\n  const deleteOnClick = () => {\n    window.confirm(\"삭제하면 돌이킬수 없습니다\");\n    console.log(\"삭제\");\n    const selectedData = gridApi.getSelectedRows();\n    console.log(selectedData);\n    selectedData[0].status = \"delete\";\n    gridApi.updateRowData({ remove: selectedData });\n    updateDepartmentRequest(selectedData);\n  };\n\n  async function CellEditingStopped(row) {\n    console.log(\"CellEditingStopped  row+\");\n    console.log(row);\n    if (row.data.status !== \"insert\") {\n      row.data.status = \"update\";\n    } else {\n    }\n    await updateDepartmentRequest([row.data]);\n    row.data.status = \"update\";\n  }\n\n  useEffect(() => {\n    departmentManagerRequest([]);\n  }, []);\n\n  const state = {\n    columnDefs: [\n      { headerName: \"회사명\", field: \"workplaceName\" },\n      { headerName: \"회사코드\", field: \"workplaceCode\", editable: true },\n      { headerName: \"부서명\", field: \"deptName\", editable: true },\n      { headerName: \"부서코드\", field: \"deptCode\", editable: true },\n      { headerName: \"부서신설일\", field: \"deptStartDate\" },\n      { headerName: \"상태\", field: \"status\", hide: true },\n    ],\n  };\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(3, 5),\n    },\n  }));\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const onCellDoubleClicked = () => {\n    setOpenDialog(true);\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openMapping = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <div>\n          <AppBar position=\"relative\">\n            <Toolbar>\n              <Typography variant=\"h5\">부서관리목록</Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <br />\n        <div align=\"left\">\n          <fieldset className=\"fieldset\">\n            <legend> [ 관 리 ] </legend>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={addOnClick}\n              startIcon={<Icon className=\"fa fa-plus-circle\" />}\n            >\n              추가\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={deleteOnClick}\n              startIcon={<DeleteOutlinedIcon />}\n            >\n              삭제\n            </Button>\n          </fieldset>\n        </div>\n\n        <DepartmentDialog\n          deptCode={deptCode}\n          open={openDialog}\n          close={handleClose}\n          departmentManageMemberRequest={departmentManageMemberRequest}\n        />\n\n        <div align=\"center\">\n          <div\n            className={\"ag-theme-material\"}\n            skipHeaderOnAutoSize=\"true\"\n            enableColResize=\"true\"\n            enableSorting=\"true\"\n            enableFilter=\"true\"\n            enableRangeSelection=\"true\"\n            rowStyle={{ \"text-align\": \"center\" }}\n            style={{\n              height: \"400px\",\n              width: \"100%\",\n              paddingTop: \"10px\",\n            }}\n            cellStyle={{ textAlign: \"center\" }}\n          >\n            <AgGridReact\n              columnDefs={state.columnDefs}\n              onGridReady={onGridReady}\n              rowData={list}\n              onCellEditingStopped={CellEditingStopped}\n              onCellClicked={onCellClicked}\n              rowSelection=\"single\"\n              onCellDoubleClicked={onCellDoubleClicked}\n              paginationAutoPageSize={true}\n              pagination={true}\n            ></AgGridReact>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default DepartmentManage;\n"]},"metadata":{},"sourceType":"module"}