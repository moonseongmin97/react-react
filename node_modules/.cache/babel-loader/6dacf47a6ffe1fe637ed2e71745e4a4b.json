{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\base\\\\page\\\\WorkplaceInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport { searchWorkplaceList, addWorkplaceTO, delWorkplaceTO, saveWorkplace } from 'erp/logistic/base/action/BasicInfoAction';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport AddWorkplace from 'erp/logistic/base/page/AddWorkplace';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction WorkplaceInfo(props) {\n  const [addOpenDialog, setAddOpenDialog] = useState(false);\n  const [gridRow, setGridRow] = useState();\n\n  const close = () => {\n    setAddOpenDialog(false);\n  };\n\n  const workplaceList = useSelector(state => state.logistic.basicinfo.workplaceList);\n  const list = workplaceList.filter(list => list.status !== 'DELETE');\n  const dispatch = useDispatch();\n  const column = {\n    columnDefs: [{\n      width: '80',\n      headerCheckboxSelection: false,\n      checkboxSelection: true\n    }, {\n      headerName: '사업장 코드',\n      field: 'workplaceCode',\n      hide: true\n    }, {\n      headerName: '사업장',\n      field: 'workplaceName'\n    }, {\n      headerName: '사업장등록번호',\n      field: 'businessLicenseNumber'\n    }, {\n      headerName: '법인등록번호',\n      field: 'corporationLicenseNumber'\n    }, {\n      headerName: '대표자',\n      field: 'workplaceCeoName'\n    }, {\n      headerName: '업태',\n      field: 'workplaceBusinessConditions'\n    }, // editable : 편집가능\n    {\n      headerName: '종목',\n      field: 'workplaceBusinessItems'\n    } // editable : 편집가능\n    ]\n  };\n\n  const addClick = () => {\n    setAddOpenDialog(true);\n  };\n\n  const delClick = () => {\n    const selRowIndex = gridRow.getSelectedNodes();\n    const rowsCount = gridRow.getDisplayedRowCount();\n\n    for (var i = 0; i < selRowIndex.length; i++) {\n      var nodeIndex = selRowIndex[i].childIndex;\n      if (gridRow.getRowNode(nodeIndex).data.status === 'INSERT') gridRow.getRowNode(nodeIndex).data.status = '';else gridRow.getRowNode(nodeIndex).data.status = 'DELETE';\n    }\n\n    console.log(rowsCount);\n    var newList = [];\n    gridRow.forEachNodeAfterFilter(ele => {\n      newList = [...newList, ele.data];\n      return ele.data;\n    });\n    dispatch(delWorkplaceTO({\n      newList\n    }));\n  };\n\n  const saveClick = () => {\n    // console.log(workplaceList);\n    dispatch(saveWorkplace(workplaceList));\n  };\n\n  const onSubmit = workplaceTo => {\n    dispatch(addWorkplaceTO({\n      workplaceTo\n    }));\n    close();\n  };\n\n  const api = params => {\n    setGridRow(params.api);\n  };\n\n  useEffect(() => {\n    dispatch(searchWorkplaceList());\n  }, [dispatch]); // 여기는 리덕스를 활용해보자 !!\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid //UI에 그리드 아님\n  , {\n    column: column,\n    title: '사 업 장 조 회',\n    list: list,\n    rowSelection: \"multiple\",\n    api: api,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh'\n    },\n    onClick: addClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\uC0AC\\uC5C5\\uC7A5 \\uCD94\\uAC00\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh'\n    },\n    onClick: delClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: saveClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\")), React.createElement(MyDialog, {\n    open: addOpenDialog,\n    close: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(AddWorkplace, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n}\n\nexport default WorkplaceInfo;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/base/page/WorkplaceInfo.js"],"names":["React","useState","useEffect","MyGrid","Button","searchWorkplaceList","addWorkplaceTO","delWorkplaceTO","saveWorkplace","MyDialog","AddWorkplace","useDispatch","useSelector","WorkplaceInfo","props","addOpenDialog","setAddOpenDialog","gridRow","setGridRow","close","workplaceList","state","logistic","basicinfo","list","filter","status","dispatch","column","columnDefs","width","headerCheckboxSelection","checkboxSelection","headerName","field","hide","addClick","delClick","selRowIndex","getSelectedNodes","rowsCount","getDisplayedRowCount","i","length","nodeIndex","childIndex","getRowNode","data","console","log","newList","forEachNodeAfterFilter","ele","saveClick","onSubmit","workplaceTo","api","params","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport {\n    searchWorkplaceList,\n    addWorkplaceTO,\n    delWorkplaceTO,\n    saveWorkplace\n} from 'erp/logistic/base/action/BasicInfoAction';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport AddWorkplace from 'erp/logistic/base/page/AddWorkplace';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction WorkplaceInfo(props) {\n    const [addOpenDialog, setAddOpenDialog] = useState(false);\n    const [gridRow, setGridRow] = useState();\n    const close = () => {\n        setAddOpenDialog(false);\n    };\n    const workplaceList = useSelector(state => state.logistic.basicinfo.workplaceList);\n    const list = workplaceList.filter(list => list.status !== 'DELETE');\n    const dispatch = useDispatch();\n    const column = {\n        columnDefs: [\n            { width: '80', headerCheckboxSelection: false, checkboxSelection: true },\n            { headerName: '사업장 코드', field: 'workplaceCode', hide: true },\n            { headerName: '사업장', field: 'workplaceName' },\n            { headerName: '사업장등록번호', field: 'businessLicenseNumber' },\n            { headerName: '법인등록번호', field: 'corporationLicenseNumber' },\n            { headerName: '대표자', field: 'workplaceCeoName' },\n            { headerName: '업태', field: 'workplaceBusinessConditions' }, // editable : 편집가능\n            { headerName: '종목', field: 'workplaceBusinessItems' } // editable : 편집가능\n        ]\n    };\n\n    const addClick = () => {\n        setAddOpenDialog(true);\n    };\n    const delClick = () => {\n        const selRowIndex = gridRow.getSelectedNodes();\n        const rowsCount = gridRow.getDisplayedRowCount();\n        for (var i = 0; i < selRowIndex.length; i++) {\n            var nodeIndex = selRowIndex[i].childIndex;\n            if (gridRow.getRowNode(nodeIndex).data.status === 'INSERT')\n                gridRow.getRowNode(nodeIndex).data.status = '';\n            else gridRow.getRowNode(nodeIndex).data.status = 'DELETE';\n        }\n\n        console.log(rowsCount);\n        var newList = [];\n        gridRow.forEachNodeAfterFilter(ele => {\n            newList = [...newList, ele.data];\n            return ele.data;\n        });\n        dispatch(delWorkplaceTO({ newList }));\n    };\n\n    const saveClick = () => {\n        // console.log(workplaceList);\n        dispatch(saveWorkplace(workplaceList));\n    };\n\n    const onSubmit = workplaceTo => {\n        dispatch(addWorkplaceTO({ workplaceTo }));\n        close();\n    };\n\n    const api = params => {\n        setGridRow(params.api);\n    };\n\n    useEffect(() => {\n        dispatch(searchWorkplaceList());\n    }, [dispatch]);\n    // 여기는 리덕스를 활용해보자 !!\n    return (\n        <>\n            <MyGrid\n                //UI에 그리드 아님\n                column={column}\n                title={'사 업 장 조 회'}\n                list={list}\n                rowSelection=\"multiple\"\n                api={api}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh' }}\n                    onClick={addClick}\n                >\n                    사업장 추가\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh' }}\n                    onClick={delClick}\n                >\n                    삭제\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={saveClick}>\n                    저장\n                </Button>\n            </MyGrid>\n            <MyDialog open={addOpenDialog} close={close}>\n                <div>\n                    <AddWorkplace onSubmit={onSubmit} />\n                </div>\n            </MyDialog>\n        </>\n    );\n}\n\nexport default WorkplaceInfo;\n"]},"metadata":{},"sourceType":"module"}