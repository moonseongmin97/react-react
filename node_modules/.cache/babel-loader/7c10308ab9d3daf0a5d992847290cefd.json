{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\base\\\\page\\\\BaseWorkTime\\\\BaseWorkTime.js\";\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Paper, TextField, Button, Grid, AppBar, Typography, Toolbar } from \"@material-ui/core\";\nimport GridStyle from \"./GridStyle\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\nconst BaseWorkTime = ({\n  baseWorkTimeList,\n  onGridReady,\n  addItem,\n  batchItems,\n  deleteItems,\n  cellEditingStopped,\n  cellClicked\n}) => {\n  const column = {\n    columnDefs: [{\n      headerName: \"연도\",\n      field: \"applyYear\",\n      sortable: true,\n      headerCheckboxSelection: true,\n      headerCheckboxSelectionFilteredOnly: true,\n      checkboxSelection: true,\n      editable: true\n    }, //체크박스창\n    {\n      headerName: \"점심마감시간\",\n      field: \"lunchEndTime\",\n      editable: true\n    }, {\n      headerName: \"저녁시간\",\n      field: \"dinnerEndTime\",\n      editable: true\n    }, {\n      headerName: \"출근시간\",\n      field: \"attendTime\",\n      editable: true\n    }, {\n      headerName: \"연장근무마감시간\",\n      field: \"overEndTime\",\n      editable: true\n    }, {\n      headerName: \"퇴근시간\",\n      field: \"quitTime\",\n      editable: true\n    }, {\n      headerName: \"점심시작시간\",\n      field: \"lunchStartTime\",\n      editable: true\n    }, {\n      headerName: \"야근마감시간\",\n      field: \"nightEndTime\",\n      editable: true\n    }, {\n      headerName: \"저녁시작시간\",\n      field: \"dinnerStartTime\",\n      editable: true\n    }]\n  };\n  const classes = GridStyle();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui primary segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\uAE30\\uBCF8 \\uADFC\\uBB34 \\uC2DC\\uAC04 \\uAD00\\uB9AC\")))), React.createElement(Grid, {\n    item: true,\n    xs: 15,\n    alignContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.rightPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    className: classes.subCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uAE30\\uBCF8 \\uADFC\\uBB34 \\uC2DC\\uAC04 \\uAD00\\uB9AC\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: deleteItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\"), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uCD94\\uAC00\\uD558\\uAE30\"), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: batchItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uC77C\\uAD04\\uC800\\uC7A5\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ag-theme-material\" //skipHeaderOnAutoSize=\"true\"\n    ,\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"450px\",\n      width: \"100%\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    rowSelection: 'multiple',\n    suppressRowClickSelection: true,\n    columnDefs: column.columnDefs,\n    rowData: baseWorkTimeList,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    onGridSizeChanged: event => {\n      event.api.sizeColumnsToFit();\n    },\n    onGridReady: onGridReady,\n    onCellEditingStopped: cellEditingStopped,\n    onCellClicked: cellClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))));\n};\n\nexport default BaseWorkTime;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/base/page/BaseWorkTime/BaseWorkTime.js"],"names":["React","useState","useRef","useEffect","useCallback","Paper","TextField","Button","Grid","AppBar","Typography","Toolbar","GridStyle","AgGridReact","BaseWorkTime","baseWorkTimeList","onGridReady","addItem","batchItems","deleteItems","cellEditingStopped","cellClicked","column","columnDefs","headerName","field","sortable","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","checkboxSelection","editable","classes","rightPaper","subCategory","button","height","width","textAlign","param","event","api","sizeColumnsToFit"],"mappings":"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","sourcesContent":["import React,{useState,useRef, useEffect,useCallback} from 'react';\nimport {\n    Paper,\n    TextField,\n    Button,\n    Grid,\n    AppBar,\n    Typography,\n    Toolbar,\n  } from \"@material-ui/core\";\nimport GridStyle from \"./GridStyle\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\n\n\nconst BaseWorkTime = (\n  {\n    baseWorkTimeList,\n    onGridReady,\n    addItem,\n    batchItems,\n    deleteItems,\n    cellEditingStopped,\n    cellClicked\n      })=> {\n\n    \n    const column = {\n        columnDefs: [\n          {\n            headerName: \"연도\",\n            field: \"applyYear\",\n            sortable: true,\n            headerCheckboxSelection: true,\n            headerCheckboxSelectionFilteredOnly: true,\n            checkboxSelection: true,\n            editable: true,\n          }, //체크박스창\n          { headerName: \"점심마감시간\", field: \"lunchEndTime\", editable: true},\n          { headerName: \"저녁시간\", field: \"dinnerEndTime\",editable: true },\n          { headerName: \"출근시간\", field: \"attendTime\",editable: true },\n          { headerName: \"연장근무마감시간\", field: \"overEndTime\",editable: true },\n          { headerName: \"퇴근시간\", field: \"quitTime\",editable: true },\n          { headerName: \"점심시작시간\", field: \"lunchStartTime\",editable: true },\n          { headerName: \"야근마감시간\", field: \"nightEndTime\",editable: true },\n          { headerName: \"저녁시작시간\", field: \"dinnerStartTime\",editable: true },\n        ],\n      };\n\n\n\n    const classes = GridStyle();\n    return (\n        <React.Fragment>\n      <div className=\"ui primary segment\">\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <Typography component=\"h2\" variant=\"h4\">\n                기본 근무 시간 관리\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n      <Grid item xs={15} alignContent={\"center\"}>\n            <Paper className={classes.rightPaper}>\n              <AppBar position=\"relative\" className={classes.subCategory}>\n                <Toolbar>\n                  <Typography variant=\"h5\">기본 근무 시간 관리</Typography>\n                </Toolbar>\n              </AppBar>\n              <br />\n              <div align=\"center\">\n              <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={deleteItems}\n                >\n                  삭제하기\n                </Button>\n                <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={addItem}\n                >\n                  추가하기\n                </Button>\n                <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={batchItems}\n                >\n                  일괄저장\n                </Button>\n              </div>\n              <br />\n              <div\n                className={\"ag-theme-material\"}\n                //skipHeaderOnAutoSize=\"true\"\n                enableColResize=\"true\"\n                enableSorting=\"true\"\n                enableFilter=\"true\"\n                enableRangeSelection=\"true\"\n                rowStyle={{ \"text-align\": \"center\" }}\n                style={{\n                  height: \"450px\",\n                  width: \"100%\",\n                }}\n                cellStyle={{ textAlign: \"center\" }}\n              >\n                <AgGridReact\n                rowSelection={'multiple'}\n                suppressRowClickSelection={true}\n                columnDefs={column.columnDefs}\n                rowData={baseWorkTimeList}\n                  getRowStyle={function(param) {\n                    return { \"text-align\": \"center\" };\n                  }}\n                  onGridSizeChanged={event => {\n                    event.api.sizeColumnsToFit();\n                  }}\n                  onGridReady={onGridReady}\n                  onCellEditingStopped={cellEditingStopped}\n                  onCellClicked={cellClicked}\n                />\n              </div>\n            </Paper>\n          </Grid>\n      </React.Fragment>\n        );\n}\n\nexport default BaseWorkTime;"]},"metadata":{},"sourceType":"module"}