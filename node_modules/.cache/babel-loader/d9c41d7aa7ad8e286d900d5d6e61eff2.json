{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\hr\\\\attendance\\\\page\\\\Employment\\\\EmploymentAddGrid.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UseStyles from \"./UseStyles\";\nimport moment from \"moment\";\nimport { Paper, TextField, Button, Grid, AppBar, InputLabel, Box, Typography, Toolbar, MenuItem, Select, FormControl, OutlinedInput } from \"@material-ui/core\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\nfunction EmploymentAddGrid(props) {\n  const today = new Date(); // const requestDate =\n  //   today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  let requestDate = moment(new Date()).format(\"yyyy-MM-DD\");\n  const classes = UseStyles();\n  const empInfo = useSelector(state => state.logInOutReducer.empInfo); //console.log(empInfo);\n  //각 항목들의 초기값\n\n  const useDate = \"\";\n  const usageCode = \"\";\n  const etc = \"\";\n  const empCode = empInfo.empCode; //아래 항목들을 useState에 담아서 한번에 관리하는게 좋음 (certificateTO 하나의 객체로 관리하는게 좋기 때문)\n\n  const [employment, setEmployment] = React.useState({});\n\n  const insertCertificate = e => {\n    //console.log(employment);\n    props.insertEmployment(employment);\n  }; //{e => {  setEmployment({...employment ,[e.target.id]:e.target.value}); }} 를 좀 더 깔끔하게 하고싶다면 onChange함수를 바깥으로 빼는 방법도 있음\n  // const onChange = e => {\n  // };\n\n\n  useEffect(() => {\n    setEmployment({\n      empCode,\n      requestDate,\n      approvalStatus: \"승인대기\"\n    });\n    return setEmployment({\n      empCode,\n      requestDate,\n      approvalStatus: \"승인대기\"\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.leftPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uC2E0\\uCCAD\\uC77C\",\n    type: \"date\",\n    defaultValue: requestDate,\n    variant: \"outlined\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"empName\",\n    label: \"\\uC2E0\\uCCAD\\uC790\",\n    variant: \"outlined\",\n    defaultValue: empInfo.empName,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"hidden\",\n    value: empCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"deptName\",\n    label: \"\\uBD80\\uC11C\\uBA85\",\n    variant: \"outlined\",\n    defaultValue: empInfo.deptName,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"useDate\",\n    label: \"\\uC0AC\\uC6A9\\uC77C\\uC790\",\n    type: \"date\",\n    defaultValue: useDate,\n    onChange: e => {\n      setEmployment({ ...employment,\n        [e.target.id]: e.target.value\n      });\n    },\n    variant: \"outlined\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"outlined-cost-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"\\uC6A9\\uB3C4 \\uC120\\uD0DD\"), React.createElement(Select, {\n    name: \"usageCode\",\n    onChange: e => {\n      setEmployment({ ...employment,\n        [e.target.name]: e.target.value\n      });\n    },\n    defaultValue: usageCode,\n    input: React.createElement(OutlinedInput, {\n      name: \"cost\",\n      id: \"outlined-cost-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"ELM001\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"\\uAE08\\uC735\\uAE30\\uAD00 \\uC81C\\uCD9C\\uC6A9\"), React.createElement(MenuItem, {\n    value: \"ELM002\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"\\uAD00\\uACF5\\uC11C \\uC81C\\uCD9C\\uC6A9\"), React.createElement(MenuItem, {\n    value: \"ELM003\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"\\uD68C\\uC0AC \\uC81C\\uCD9C\\uC6A9\"), React.createElement(MenuItem, {\n    value: \"ELM004\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\uAE30\\uD0C0 \\uC81C\\uCD9C\\uC6A9\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"etc\",\n    label: \"\\uBE44\\uACE0\",\n    variant: \"outlined\",\n    defaultValue: etc,\n    onChange: e => {\n      setEmployment({ ...employment,\n        [e.target.id]: e.target.value\n      });\n    },\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(Box, {\n    textAlign: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: insertCertificate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"\\uC2E0\\uCCAD\"))))));\n}\n\nexport default EmploymentAddGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/hr/attendance/page/Employment/EmploymentAddGrid.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","UseStyles","moment","Paper","TextField","Button","Grid","AppBar","InputLabel","Box","Typography","Toolbar","MenuItem","Select","FormControl","OutlinedInput","AgGridReact","EmploymentAddGrid","props","today","Date","requestDate","format","classes","empInfo","state","logInOutReducer","useDate","usageCode","etc","empCode","employment","setEmployment","insertCertificate","e","insertEmployment","approvalStatus","leftPaper","textField","shrink","readOnly","empName","deptName","target","id","value","formControl","name","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UseStyles from \"./UseStyles\";\nimport moment from \"moment\";\nimport {\n  Paper,\n  TextField,\n  Button,\n  Grid,\n  AppBar,\n  InputLabel,\n  Box,\n  Typography,\n  Toolbar,\n  MenuItem,\n  Select,\n  FormControl,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\nfunction EmploymentAddGrid(props) {\n  const today = new Date();\n  // const requestDate =\n  //   today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n  let requestDate = moment(new Date()).format(\"yyyy-MM-DD\");\n\n  const classes = UseStyles();\n\n  const empInfo = useSelector(state => state.logInOutReducer.empInfo);\n  //console.log(empInfo);\n\n  //각 항목들의 초기값\n  const useDate = \"\";\n  const usageCode = \"\";\n  const etc = \"\";\n  const empCode = empInfo.empCode;\n\n  //아래 항목들을 useState에 담아서 한번에 관리하는게 좋음 (certificateTO 하나의 객체로 관리하는게 좋기 때문)\n  const [employment, setEmployment] = React.useState({});\n\n  const insertCertificate = e => {\n    //console.log(employment);\n    props.insertEmployment(employment)\n  };\n\n  //{e => {  setEmployment({...employment ,[e.target.id]:e.target.value}); }} 를 좀 더 깔끔하게 하고싶다면 onChange함수를 바깥으로 빼는 방법도 있음\n  // const onChange = e => {\n \n  // };\n\n  useEffect(()=>{\n    setEmployment({\n      empCode,\n      requestDate,\n      approvalStatus : \"승인대기\"\n    })\n    return setEmployment({\n      empCode,\n      requestDate,\n      approvalStatus : \"승인대기\"\n    });\n  },[]);\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.leftPaper}>\n            <form>\n              <TextField\n                id=\"requestDate\"\n                label=\"신청일\"\n                type=\"date\"\n                defaultValue={requestDate}\n                variant=\"outlined\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <br />\n              <TextField\n                id=\"empName\"\n                label=\"신청자\"\n                variant=\"outlined\"\n                defaultValue={empInfo.empName}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <input type=\"hidden\" value={empCode} />\n              <br />\n              <TextField\n                id=\"deptName\"\n                label=\"부서명\"\n                variant=\"outlined\"\n                defaultValue={empInfo.deptName}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <br />\n              <TextField\n                id=\"useDate\"\n                label=\"사용일자\"\n                type=\"date\"\n                defaultValue={useDate}\n                onChange={e => {\n                  setEmployment({...employment ,[e.target.id]:e.target.value});\n                }}\n                variant=\"outlined\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <br />\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-cost-simple\">\n                  용도 선택\n                </InputLabel>\n                <Select name='usageCode' onChange={e => {\n                  setEmployment({...employment ,[e.target.name]:e.target.value});\n                }}\n                  defaultValue={usageCode}\n                  input={\n                    <OutlinedInput name=\"cost\" id=\"outlined-cost-simple\" />\n                  }\n                >\n                  <MenuItem value=\"ELM001\">금융기관 제출용</MenuItem>\n                  <MenuItem value=\"ELM002\">관공서 제출용</MenuItem>\n                  <MenuItem value=\"ELM003\">회사 제출용</MenuItem>\n                  <MenuItem value=\"ELM004\">기타 제출용</MenuItem>\n                </Select>\n              </FormControl>\n              <br />\n              <TextField\n                id=\"etc\"\n                label=\"비고\"\n                variant=\"outlined\"\n                defaultValue={etc}\n                onChange={e => {\n                  setEmployment({...employment ,[e.target.id]:e.target.value});\n                }}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </form>\n            <Box textAlign=\"right\">\n              <Button\n                variant={\"outlined\"}\n                color={\"primary\"}\n                className={classes.button}\n                onClick={insertCertificate}\n              >\n                신청\n              </Button>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default EmploymentAddGrid;\n"]},"metadata":{},"sourceType":"module"}