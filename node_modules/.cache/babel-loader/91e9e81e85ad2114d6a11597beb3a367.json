{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\LogisticsBOM\\\\LogisticsBOM.js\";\nimport { AppBar, Box, Tab, Tabs, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { Fragment, useState } from 'react';\nimport Deploy from './Deploy/Deploy';\nimport Regist from './Regist/Regist';\nimport './styles.css';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), value === index && React.createElement(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, children)));\n}\n\nconst LogisticsBOM = props => {\n  const useSytles = makeStyles(theme => ({\n    bar: {\n      background: \"primary\",\n      color: \"white\",\n      width: \"100%\",\n      height: \"50px\",\n      fontSize: 20\n    }\n  }));\n  const classes = useSytles();\n  const [value, setState] = useState(0);\n  const [deployCondition, setDeployCondition] = useState();\n  const [itemCode, setItemCode] = useState();\n\n  const handleChange = (event, newValue) => {\n    setState(newValue);\n  };\n\n  function allyProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`\n    };\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.bar,\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Tab, Object.assign({\n    label: \"BOM \\uC815\\uC804\\uAC1C / \\uC5ED\\uC804\\uAC1C\"\n  }, allyProps(0), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    label: \"BOM \\uB4F1\\uB85D / \\uC218\\uC815\"\n  }, allyProps(1), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, value === 0 ? React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Deploy, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })) : React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Regist, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nexport default LogisticsBOM;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/purchase/page/LogisticsBOM/LogisticsBOM.js"],"names":["AppBar","Box","Tab","Tabs","Typography","makeStyles","React","Fragment","useState","Deploy","Regist","TabPanel","props","children","value","index","other","LogisticsBOM","useSytles","theme","bar","background","color","width","height","fontSize","classes","setState","deployCondition","setDeployCondition","itemCode","setItemCode","handleChange","event","newValue","allyProps","id"],"mappings":"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","sourcesContent":["import { AppBar, Box, Tab, Tabs, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles'\nimport React, { Fragment, useState } from 'react';\nimport Deploy from './Deploy/Deploy';\nimport Regist from './Regist/Regist';\nimport './styles.css';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other} = props;\n\n    return (\n        <div\n            role = \"tabpanel\"\n            hidden = { value !== index }\n            id = {`full-width-tabpanel-${index}`}\n            aria-labelledby = {`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nconst LogisticsBOM = (props) => {\n    \n    const useSytles = makeStyles(theme => ({\n        bar: {\n            background: \"primary\",\n            color: \"white\",\n            width: \"100%\",\n            height: \"50px\",\n            fontSize: 20\n        }\n    }));\n\n    const classes = useSytles();\n    const [value, setState] = useState(0);\n    const [deployCondition, setDeployCondition] = useState();\n    const [itemCode, setItemCode] = useState();\n\n    const handleChange = (event, newValue) => {\n        setState(newValue);\n    }\n\n    function allyProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            \"aria-controls\": `simple-tabpanel-${index}`,\n        };\n    }\n    return (\n        <Fragment>\n            <div>\n                <AppBar className = {classes.bar} position=\"static\">\n                    <Tabs value={value} onChange={handleChange}>\n                        <Tab label = \"BOM 정전개 / 역전개\" {...allyProps(0)} />\n                        <Tab label = \"BOM 등록 / 수정\" {...allyProps(1)} />\n                    </Tabs>\n                </AppBar>\n            </div>\n            <div>\n                {value === 0 ? (\n                    <TabPanel value = {value} index = {0} >\n                        {<Deploy />}\n                    </TabPanel> ) : (\n                    <TabPanel value = {value} index = {1} >\n                        {<Regist />}\n                    </TabPanel>  \n                    )}\n            </div>\n        </Fragment>\n        \n    );\n};\n\nexport default LogisticsBOM;"]},"metadata":{},"sourceType":"module"}