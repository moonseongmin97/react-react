{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\base\\\\page\\\\DeptInfo\\\\DeptInfo.js\";\n//**************************************** 2020-11-19 최지은 시작 ****************************************\nimport React, { useEffect, useState } from 'react';\nimport useStyles from './Theme';\nimport axios from 'axios';\nimport DeptInfoSearch from './DeptInfoSearch';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { searchDeptInfo, savaDeptInfo } from 'erp/logistic/base/action/BasicInfoAction';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useThemeSwitcher } from 'mui-theme-switcher';\n\nfunction DeptInfo(props) {\n  const theme = useStyles(); //====================================================================\n\n  const [formVisible, setFormVisible] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [openD, setOpenD] = useState(false);\n  const [searchCondition, setSearchCondition] = useState('ALL');\n  const [codeList, setCodeList] = useState([]);\n  const [SearchName, setSearchName] = useState('');\n  const [workplaceCode, setWorkplaceCode] = useState('');\n  const dispatch = useDispatch(); //var companyCode = sessionStorage.getItem(\"companyCode\");\n\n  var companyCode = 'COM-01';\n  const [dataList, setDataList] = useState([]); //그리드 동적값\n  //=================================================================================\n\n  const DepartmentList = useSelector(state => state.logistic.basicinfo.DepartmentList); //console.log('리듀서값...' + DepartmentList);\n  //=====================================================================================\n\n  const DeptColDefs = [{\n    headerName: '사업장코드',\n    field: 'workplaceCode',\n    width: 100\n  }, {\n    headerName: '사업장명',\n    field: 'workplaceName',\n    width: 100\n  }, {\n    headerName: '부서코드',\n    field: 'deptCode',\n    width: 100,\n    placeholder: '저장시지정됨'\n  }, {\n    headerName: '부서명',\n    field: 'deptName',\n    width: 100,\n    editable: true\n  }, {\n    headerName: '부서신설일',\n    field: 'deptStartDate',\n    width: 100,\n    editable: true\n  }, {\n    headerName: '부서해체일',\n    field: 'deptEndDate',\n    width: 100,\n    editable: true\n  }, {\n    headerName: 'status',\n    field: 'status',\n    width: 100\n  }, {\n    headerName: 'companyCode',\n    field: 'companyCode',\n    width: 100,\n    hide: true\n  }]; //=====================================================================================\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //그리드 사이즈 자동 조절\n\n\n  const onGridReady = params => {\n    setDataList(params.api);\n    params.api.sizeColumnsToFit();\n  }; //다이얼로그 셀 클릭\n\n\n  const DialogCellClick = e => {\n    setSearchName(e.node.data.detailCodeName);\n    setWorkplaceCode(e.node.data.detailCode);\n    setOpenD(false);\n  }; //부서 검색조건 변경시\n\n\n  const handleChange = e => {\n    if (e.target.value === 'WORKPLACE') {\n      setFormVisible(false);\n    } else {\n      setFormVisible(true);\n    }\n\n    setSearchCondition(e.target.value);\n  }; //사업장 조회\n\n\n  const handleClick = async e => {\n    setOpenD(true);\n\n    try {\n      await axios.get(`http://localhost:4000/erp/logi/codeList/${'CO-02'}`).then(response => {\n        const jsonData = response.data.detailCodeList;\n        console.log('다이알로그 값', jsonData);\n        setCodeList(jsonData); // console.log(\"사업장조회\" + JSON.stringify(jsonData));\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }; //=========================================================================================================\n  //부서조회\n\n\n  const searchClick = async e => {\n    dispatch(searchDeptInfo({\n      searchCondition,\n      companyCode,\n      workplaceCode\n    }));\n  }; //셀 수정시\n\n\n  const rowCellChanged = params => {\n    console.log(params.data.status);\n\n    if (params.data.status === 'normal') {\n      params.data.status = 'UPDATE';\n    }\n  }; //새로운 부서 정보 추가\n\n\n  const addClick = () => {\n    dataList.selectAll(); // 그리드 전체 값\n\n    const newRow = NewRowData(); //새로운 row를 변수에담음\n\n    dataList.updateRowData({\n      add: [newRow],\n      addIndex: ''\n    }); // ag그리드 api로 그리드에 add 함\n    // dispatch(addDeptInfo({ newRow }));\n\n    dataList.deselectAll();\n  };\n\n  const NewRowData = () => {\n    var wCode = workplaceCode === 'BRC-02' ? 'BRC-02' : 'BRC-01';\n    var wName = workplaceCode === 'BRC-02' ? '(주) 세계전자 울산지점' : '(주) 세계전자본사';\n    var newRow = {\n      companyCode: companyCode,\n      workplaceCode: wCode,\n      workplaceName: wName,\n      deptCode: '저장시 지정됨',\n      deptName: '',\n      deptStartDate: '',\n      deptEndDate: '',\n      status: 'INSERT'\n    };\n    return newRow;\n  }; //일괄저장\n\n\n  const onSaveClick = () => {\n    dataList.selectAll(); // 그리드 전체 값\n\n    const rows = dataList.getSelectedRows(); // 그리드의 모든 값을 반환\n\n    const rowsCount = dataList.getDisplayedRowCount(); // 표시된 총 행 수를 반환\n\n    for (var i = 0; i < rowsCount; i++) {\n      if (rows[i].deptName === '' || rows[i].deptStartDate === '') {\n        alert('부서명과 신설일을 정확하게 입력해주세요.');\n        return;\n      }\n\n      delete rows[i].errorCode;\n      delete rows[i].errorMsg;\n      delete rows[i].chk;\n    }\n\n    dispatch(savaDeptInfo(rows));\n    dataList.deselectAll();\n    dispatch(searchDeptInfo({\n      searchCondition,\n      companyCode,\n      workplaceCode\n    }));\n  };\n\n  const {\n    dark\n  } = useThemeSwitcher(); //======================================================================================================\n  //===================================================================================\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(DeptInfoSearch, {\n    open: open,\n    codeList: codeList,\n    searchCondition: searchCondition,\n    openD: openD,\n    SearchName: SearchName,\n    setSearchName: setSearchName,\n    setWorkplaceCode: setWorkplaceCode,\n    formVisible: formVisible,\n    handleChange: handleChange,\n    handleClick: handleClick,\n    handleClose: handleClose,\n    handleOpen: handleOpen,\n    setOpenD: setOpenD,\n    searchClick: searchClick,\n    addClick: addClick,\n    DeptColDefs: DeptColDefs,\n    DialogCellClick: DialogCellClick,\n    onSaveClick: onSaveClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: dark ? 'ag-theme-alpine-dark' : 'ag-theme-material',\n    style: {\n      height: '600px',\n      width: '100%',\n      paddingTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: DeptColDefs,\n    rowData: DepartmentList,\n    onGridReady: onGridReady,\n    onCellEditingStarted: rowCellChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), \";\");\n}\n\nexport default DeptInfo; //**************************************** 2020-11-19 최지은 종료 ****************************************","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/base/page/DeptInfo/DeptInfo.js"],"names":["React","useEffect","useState","useStyles","axios","DeptInfoSearch","useSelector","useDispatch","searchDeptInfo","savaDeptInfo","AgGridReact","useThemeSwitcher","DeptInfo","props","theme","formVisible","setFormVisible","open","setOpen","openD","setOpenD","searchCondition","setSearchCondition","codeList","setCodeList","SearchName","setSearchName","workplaceCode","setWorkplaceCode","dispatch","companyCode","dataList","setDataList","DepartmentList","state","logistic","basicinfo","DeptColDefs","headerName","field","width","placeholder","editable","hide","handleOpen","handleClose","onGridReady","params","api","sizeColumnsToFit","DialogCellClick","e","node","data","detailCodeName","detailCode","handleChange","target","value","handleClick","get","then","response","jsonData","detailCodeList","console","log","searchClick","rowCellChanged","status","addClick","selectAll","newRow","NewRowData","updateRowData","add","addIndex","deselectAll","wCode","wName","workplaceName","deptCode","deptName","deptStartDate","deptEndDate","onSaveClick","rows","getSelectedRows","rowsCount","getDisplayedRowCount","i","alert","errorCode","errorMsg","chk","dark","height","paddingTop"],"mappings":"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","sourcesContent":["//**************************************** 2020-11-19 최지은 시작 ****************************************\n\nimport React, { useEffect, useState } from 'react';\nimport useStyles from './Theme';\nimport axios from 'axios';\nimport DeptInfoSearch from './DeptInfoSearch';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { searchDeptInfo, savaDeptInfo } from 'erp/logistic/base/action/BasicInfoAction';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useThemeSwitcher } from 'mui-theme-switcher';\n\nfunction DeptInfo(props) {\n    const theme = useStyles();\n    //====================================================================\n\n    const [formVisible, setFormVisible] = useState(true);\n    const [open, setOpen] = useState(false);\n    const [openD, setOpenD] = useState(false);\n    const [searchCondition, setSearchCondition] = useState('ALL');\n    const [codeList, setCodeList] = useState([]);\n    const [SearchName, setSearchName] = useState('');\n    const [workplaceCode, setWorkplaceCode] = useState('');\n    const dispatch = useDispatch();\n    //var companyCode = sessionStorage.getItem(\"companyCode\");\n    var companyCode = 'COM-01';\n    const [dataList, setDataList] = useState([]); //그리드 동적값\n    //=================================================================================\n    const  DepartmentList  = useSelector(state => state.logistic.basicinfo.DepartmentList);\n    //console.log('리듀서값...' + DepartmentList);\n\n    //=====================================================================================\n    const DeptColDefs = [\n        {\n            headerName: '사업장코드',\n            field: 'workplaceCode',\n            width: 100\n        },\n        {\n            headerName: '사업장명',\n            field: 'workplaceName',\n            width: 100\n        },\n        {\n            headerName: '부서코드',\n            field: 'deptCode',\n            width: 100,\n            placeholder: '저장시지정됨'\n        },\n        { headerName: '부서명', field: 'deptName', width: 100, editable: true },\n        {\n            headerName: '부서신설일',\n            field: 'deptStartDate',\n            width: 100,\n            editable: true\n        },\n        {\n            headerName: '부서해체일',\n            field: 'deptEndDate',\n            width: 100,\n            editable: true\n        },\n        { headerName: 'status', field: 'status', width: 100 },\n        { headerName: 'companyCode', field: 'companyCode', width: 100, hide: true }\n    ];\n    //=====================================================================================\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    //그리드 사이즈 자동 조절\n    const onGridReady = params => {\n        setDataList(params.api);\n        params.api.sizeColumnsToFit();\n    };\n\n    //다이얼로그 셀 클릭\n    const DialogCellClick = e => {\n        setSearchName(e.node.data.detailCodeName);\n        setWorkplaceCode(e.node.data.detailCode);\n        setOpenD(false);\n    };\n\n    //부서 검색조건 변경시\n    const handleChange = e => {\n        if (e.target.value === 'WORKPLACE') {\n            setFormVisible(false);\n        } else {\n            setFormVisible(true);\n        }\n        setSearchCondition(e.target.value);\n    };\n\n    //사업장 조회\n    const handleClick = async e => {\n        setOpenD(true);\n        try {\n            await axios.get(`http://localhost:4000/erp/logi/codeList/${'CO-02'}`).then(response => {\n                const jsonData = response.data.detailCodeList;\n                console.log('다이알로그 값', jsonData);\n                setCodeList(jsonData);\n                // console.log(\"사업장조회\" + JSON.stringify(jsonData));\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    //=========================================================================================================\n    //부서조회\n    const searchClick = async e => {\n        dispatch(searchDeptInfo({ searchCondition, companyCode, workplaceCode }));\n    };\n\n    //셀 수정시\n    const rowCellChanged = params => {\n        console.log(params.data.status);\n        if (params.data.status === 'normal') {\n            params.data.status = 'UPDATE';\n        }\n    };\n\n    //새로운 부서 정보 추가\n    const addClick = () => {\n        dataList.selectAll(); // 그리드 전체 값\n        const newRow = NewRowData(); //새로운 row를 변수에담음\n        dataList.updateRowData({ add: [newRow], addIndex: '' }); // ag그리드 api로 그리드에 add 함\n        // dispatch(addDeptInfo({ newRow }));\n        dataList.deselectAll();\n    };\n\n    const NewRowData = () => {\n        var wCode = workplaceCode === 'BRC-02' ? 'BRC-02' : 'BRC-01';\n        var wName = workplaceCode === 'BRC-02' ? '(주) 세계전자 울산지점' : '(주) 세계전자본사';\n\n        var newRow = {\n            companyCode: companyCode,\n            workplaceCode: wCode,\n            workplaceName: wName,\n            deptCode: '저장시 지정됨',\n            deptName: '',\n            deptStartDate: '',\n            deptEndDate: '',\n            status: 'INSERT'\n        };\n        return newRow;\n    };\n\n    //일괄저장\n    const onSaveClick = () => {\n        dataList.selectAll(); // 그리드 전체 값\n        const rows = dataList.getSelectedRows(); // 그리드의 모든 값을 반환\n        const rowsCount = dataList.getDisplayedRowCount(); // 표시된 총 행 수를 반환\n\n        for (var i = 0; i < rowsCount; i++) {\n            if (rows[i].deptName === '' || rows[i].deptStartDate === '') {\n                alert('부서명과 신설일을 정확하게 입력해주세요.');\n                return;\n            }\n\n            delete rows[i].errorCode;\n            delete rows[i].errorMsg;\n            delete rows[i].chk;\n        }\n        dispatch(savaDeptInfo(rows));\n        dataList.deselectAll();\n        dispatch(searchDeptInfo({ searchCondition, companyCode, workplaceCode }));\n    };\n\n    const { dark } = useThemeSwitcher();\n\n    //======================================================================================================\n\n    //===================================================================================\n    return (\n        <>\n            <div>\n                <DeptInfoSearch\n                    open={open}\n                    codeList={codeList}\n                    searchCondition={searchCondition}\n                    openD={openD}\n                    SearchName={SearchName}\n                    setSearchName={setSearchName}\n                    setWorkplaceCode={setWorkplaceCode}\n                    formVisible={formVisible}\n                    handleChange={handleChange}\n                    handleClick={handleClick}\n                    handleClose={handleClose}\n                    handleOpen={handleOpen}\n                    setOpenD={setOpenD}\n                    searchClick={searchClick}\n                    addClick={addClick}\n                    DeptColDefs={DeptColDefs}\n                    DialogCellClick={DialogCellClick}\n                    onSaveClick={onSaveClick}\n                />\n            </div>\n            <div\n                className={dark ? 'ag-theme-alpine-dark' : 'ag-theme-material'}\n                style={{\n                    height: '600px',\n                    width: '100%',\n                    paddingTop: '20px'\n                }}\n            >\n                <AgGridReact\n                    columnDefs={DeptColDefs}\n                    rowData={DepartmentList}\n                    onGridReady={onGridReady}\n                    onCellEditingStarted={rowCellChanged}\n                />\n            </div>\n            ;\n        </>\n    );\n}\n\nexport default DeptInfo;\n//**************************************** 2020-11-19 최지은 종료 ****************************************\n"]},"metadata":{},"sourceType":"module"}