{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\account\\\\statement\\\\page\\\\MonthIncomeStatement\\\\MonthIncomeStatementGrid.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst MonthIncomeStatementGrid = () => {\n  const data = useSelector(({\n    AccReducer\n  }) => AccReducer.StatementReducer.MonthIncomeList, []); //const { error } = useSelector(state => state.AccReducer);\n\n  const {\n    isLoading\n  } = useSelector(state => state.AccReducer.StatementReducer);\n  const MonthIncomeStatementGrid = [{\n    headerName: \"연도\",\n    field: \"year\",\n    hide: true,\n    width: \"150\"\n  }, {\n    headerName: \"월\",\n    field: \"month\",\n    sortable: true,\n    //컬럼눌러서 정렬가능하게하기\n    cellClass: \"grid-cell-centered\",\n    width: \"100\"\n  }, {\n    headerName: \"매출액\",\n    field: \"salesSummary\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"매출원가\",\n    field: \"salesCostSummary\",\n    background: \"red\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"매출총액\",\n    field: \"grossMargin\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"판관비\",\n    field: \"salesManageCostSummary\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"영업이익\",\n    field: \"operatingProfit\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"영업외수익\",\n    field: \"nonOperatingProfitSummary\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"영업외비용\",\n    field: \"nonOperatingCostSummary\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"법인세차감전이익\",\n    field: \"ordinaryProfit\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"법인세\",\n    field: \"corporateTaxSummary\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"당기순이익\",\n    field: \"netIncome\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }];\n\n  const onGridSizeChanged = params => {\n    var gridWidth = document.getElementById(\"grid-wrapperr\").offsetWidth;\n    var columnsToShow = [];\n    var columnsToHide = [];\n    var totalColsWidth = 0;\n    var allColumns = params.columnApi.getAllColumns();\n\n    for (var i = 0; i < allColumns.length; i++) {\n      var column = allColumns[i];\n      totalColsWidth += column.getMinWidth();\n\n      if (totalColsWidth > gridWidth) {\n        columnsToHide.push(column.colId);\n      } else {\n        columnsToShow.push(column.colId);\n      }\n    }\n\n    params.columnApi.setColumnsVisible(columnsToShow, true);\n    params.columnApi.setColumnsVisible(columnsToHide, false);\n    params.api.sizeColumnsToFit();\n  };\n\n  const {\n    dark\n  } = useThemeSwitcher();\n  return React.createElement(\"div\", {\n    id: \"grid-wrapperr\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\",\n    skipHeaderOnAutoSize: \"true\",\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"60vh\",\n      width: \"100%\",\n      float: \"center\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, !isLoading ? React.createElement(AgGridReact, {\n    columnDefs: MonthIncomeStatementGrid,\n    rowData: data,\n    rowSelection: \"single\",\n    getRowStyle: function (param) {\n      //가운데\n      if (param.node.rowPinned) {\n        return {\n          \"font-weight\": \"bold\",\n          background: \"#dddddd\"\n        };\n      }\n\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    onGridReady: event => {\n      event.api.sizeColumnsToFit();\n    } // onGridReady={onGridReady}\n    // onCellClicked={onCellClicked}\n    ,\n    onGridSizeChanged: onGridSizeChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }) : React.createElement(\"h1\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"\\uB85C\\uB529\\uC911\")));\n};\n\nexport default MonthIncomeStatementGrid;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/account/statement/page/MonthIncomeStatement/MonthIncomeStatementGrid.js"],"names":["React","useSelector","AgGridReact","useThemeSwitcher","MonthIncomeStatementGrid","data","AccReducer","StatementReducer","MonthIncomeList","isLoading","state","headerName","field","hide","width","sortable","cellClass","valueFormatter","background","onGridSizeChanged","params","gridWidth","document","getElementById","offsetWidth","columnsToShow","columnsToHide","totalColsWidth","allColumns","columnApi","getAllColumns","i","length","column","getMinWidth","push","colId","setColumnsVisible","api","sizeColumnsToFit","dark","height","float","textAlign","param","node","rowPinned","event"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst MonthIncomeStatementGrid = () => {\n  const data = useSelector(({ AccReducer }) => AccReducer.StatementReducer.MonthIncomeList, []);\n  //const { error } = useSelector(state => state.AccReducer);\n  const { isLoading } = useSelector(state => state.AccReducer.StatementReducer);\n\n  const MonthIncomeStatementGrid = [\n    {\n      headerName: \"연도\",\n      field: \"year\",\n      hide: true,\n      width:\"150\",\n    },\n    {\n      headerName: \"월\",\n      field: \"month\",\n      sortable: true, //컬럼눌러서 정렬가능하게하기\n      cellClass: \"grid-cell-centered\",\n      width: \"100\"\n    },\n    {\n      headerName: \"매출액\",\n      field: \"salesSummary\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"매출원가\",\n      field: \"salesCostSummary\",\n      background: \"red\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"매출총액\",\n      field: \"grossMargin\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"판관비\",\n      field: \"salesManageCostSummary\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"영업이익\",\n      field: \"operatingProfit\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"영업외수익\",\n      field: \"nonOperatingProfitSummary\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"영업외비용\",\n      field: \"nonOperatingCostSummary\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"법인세차감전이익\",\n      field: \"ordinaryProfit\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"법인세\",\n      field: \"corporateTaxSummary\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"당기순이익\",\n      field: \"netIncome\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n  ];\n\n  const onGridSizeChanged = params => {\n    var gridWidth = document.getElementById(\"grid-wrapperr\").offsetWidth;\n    var columnsToShow = [];\n    var columnsToHide = [];\n    var totalColsWidth = 0;\n    var allColumns = params.columnApi.getAllColumns();\n    for (var i = 0; i < allColumns.length; i++) {\n      var column = allColumns[i];\n      totalColsWidth += column.getMinWidth();\n      if (totalColsWidth > gridWidth) {\n        columnsToHide.push(column.colId);\n      } else {\n        columnsToShow.push(column.colId);\n      }\n    }\n    params.columnApi.setColumnsVisible(columnsToShow, true);\n    params.columnApi.setColumnsVisible(columnsToHide, false);\n    params.api.sizeColumnsToFit();\n  };\n\n  const { dark } = useThemeSwitcher();\n\n  return (\n    <div id=\"grid-wrapperr\" style={{ width: \"100%\", height: \"100%\" }}>\n      <div\n        className={dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\"}\n        skipHeaderOnAutoSize=\"true\"\n        enableColResize=\"true\"\n        enableSorting=\"true\"\n        enableFilter=\"true\"\n        enableRangeSelection=\"true\"\n        rowStyle={{ \"text-align\": \"center\" }}\n        style={{\n          height: \"60vh\",\n          width: \"100%\",\n          float: \"center\",\n        }}\n        cellStyle={{ textAlign: \"center\" }}\n      >\n        {!isLoading ? (\n          <AgGridReact\n            columnDefs={MonthIncomeStatementGrid}\n            rowData={data}\n            rowSelection=\"single\"\n            getRowStyle={function(param) {\n              //가운데\n              if (param.node.rowPinned) {\n                return { \"font-weight\": \"bold\", background: \"#dddddd\" };\n              }\n              return { \"text-align\": \"center\" };\n            }}\n            onGridReady={event => {\n              event.api.sizeColumnsToFit();\n            }}\n            // onGridReady={onGridReady}\n            // onCellClicked={onCellClicked}\n            onGridSizeChanged={onGridSizeChanged}\n          />\n        ) : (\n          <h1 align=\"center\">로딩중</h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MonthIncomeStatementGrid;\n"]},"metadata":{},"sourceType":"module"}