{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\LogisticsBOM\\\\Deploy\\\\DeployGrid.js\";\nimport { AgGridReact } from 'ag-grid-react/lib/agGridReact';\nimport Axios from 'axios';\nimport React, { useState } from 'react';\n\nconst DeployGrid = ({\n  props\n}\n/* { setDeployCondition, setItemCode, setDivisionCode, searchBom, bomData } */\n) => {\n  const [positionGridApi, setPositionGridApi] = useState();\n\n  const setPadding = arr => {\n    let lev = arr.data.bomLevel;\n    let iCode = arr.value;\n    let space = \"　　\";\n\n    for (let i = 0; i < lev; i++) {\n      iCode = space + iCode;\n      console.log(iCode);\n      return iCode;\n    }\n  };\n\n  const onGridReady = params => {\n    setPositionGridApi(params.api);\n  };\n\n  const columnDefs = [{\n    headerName: \"BOM번호\",\n    field: \"bomNo\",\n    width: 100\n  }, {\n    headerName: \"BOM레벨\",\n    field: \"bomLevel\",\n    width: 80\n  }, {\n    headerName: \"상위품목코드\",\n    field: \"parentItemCode\",\n    width: 100\n  }, {\n    headerName: \"품목코드\",\n    field: \"itemCode\",\n    width: 200,\n    valueFormatter: setPadding\n  }, {\n    headerName: \"품목명\",\n    field: \"itemName\",\n    width: 130\n  }, {\n    headerName: \"단위\",\n    field: \"unitOfStock\",\n    width: 50\n  }, {\n    headerName: \"정미수량\",\n    field: \"netAmount\",\n    width: 80\n  }, {\n    headerName: \"손실율\",\n    field: \"lossRate\",\n    width: 65\n  }, {\n    headerName: \"필요수량\",\n    field: \"necessaryAmount\",\n    width: 80\n  }, {\n    headerName: \"리드타임\",\n    field: \"leadTime\",\n    width: 80\n  }, {\n    headerName: \"isLeaf\",\n    field: \"isLeaf\",\n    width: 70\n  }, {\n    headerName: \"비고\",\n    field: \"description\",\n    width: 50\n  }];\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"gridAlign\",\n    style: {\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ag-theme-balham\",\n    style: {\n      height: \"500px\",\n      width: \"1087px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: columnDefs,\n    rowData: props.bom.data && props.bom.data,\n    onGirdReady: onGridReady,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))));\n};\n\nexport default DeployGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/purchase/page/LogisticsBOM/Deploy/DeployGrid.js"],"names":["AgGridReact","Axios","React","useState","DeployGrid","props","positionGridApi","setPositionGridApi","setPadding","arr","lev","data","bomLevel","iCode","value","space","i","console","log","onGridReady","params","api","columnDefs","headerName","field","width","valueFormatter","paddingTop","height","bom"],"mappings":";AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD;AAAO;AAAR,KAA2F;AAC1G,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,EAAtD;;AAEA,QAAMK,UAAU,GAAIC,GAAD,IAAS;AACxB,QAAIC,GAAG,GAAGD,GAAG,CAACE,IAAJ,CAASC,QAAnB;AACA,QAAIC,KAAK,GAAGJ,GAAG,CAACK,KAAhB;AACA,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACN,GAAf,EAAoBM,CAAC,EAArB,EAAwB;AACpBH,MAAAA,KAAK,GAAGE,KAAK,GAACF,KAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,aAAOA,KAAP;AACH;AACJ,GATD;;AAWA,QAAMM,WAAW,GAAIC,MAAD,IAAY;AAC5Bb,IAAAA,kBAAkB,CAACa,MAAM,CAACC,GAAR,CAAlB;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,CACf;AAAEC,IAAAA,UAAU,EAAE,OAAd;AAAuBC,IAAAA,KAAK,EAAE,OAA9B;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GADe,EAEf;AAAEF,IAAAA,UAAU,EAAE,OAAd;AAAuBC,IAAAA,KAAK,EAAE,UAA9B;AAA0CC,IAAAA,KAAK,EAAE;AAAjD,GAFe,EAGf;AAAEF,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,KAAK,EAAE,gBAA/B;AAAiDC,IAAAA,KAAK,EAAE;AAAxD,GAHe,EAIf;AAAEF,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,UAA7B;AAAyCC,IAAAA,KAAK,EAAE,GAAhD;AAAqDC,IAAAA,cAAc,EAAElB;AAArE,GAJe,EAKf;AAAEe,IAAAA,UAAU,EAAE,KAAd;AAAqBC,IAAAA,KAAK,EAAE,UAA5B;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GALe,EAMf;AAAEF,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,KAAK,EAAE,aAA3B;AAA0CC,IAAAA,KAAK,EAAE;AAAjD,GANe,EAOf;AAAEF,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,WAA7B;AAA0CC,IAAAA,KAAK,EAAE;AAAjD,GAPe,EAQf;AAAEF,IAAAA,UAAU,EAAE,KAAd;AAAqBC,IAAAA,KAAK,EAAE,UAA5B;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GARe,EASf;AAAEF,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,iBAA7B;AAAgDC,IAAAA,KAAK,EAAE;AAAvD,GATe,EAUf;AAAEF,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,UAA7B;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAVe,EAWf;AAAEF,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,KAAK,EAAE,QAA/B;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAXe,EAYf;AAAEF,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,KAAK,EAAE,aAA3B;AAA0CC,IAAAA,KAAK,EAAE;AAAjD,GAZe,CAAnB;AAeA,SACI,0CACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAA6B,IAAA,KAAK,EAAI;AAACE,MAAAA,UAAU,EAAC;AAAZ,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAI,iBAAlB;AACI,IAAA,KAAK,EAAI;AACLC,MAAAA,MAAM,EAAE,OADH;AAELH,MAAAA,KAAK,EAAE;AAFF,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAIH,UADlB;AAEI,IAAA,OAAO,EAAIjB,KAAK,CAACwB,GAAN,CAAUlB,IAAV,IAAgBN,KAAK,CAACwB,GAAN,CAAUlB,IAFzC;AAGI,IAAA,WAAW,EAAIQ,WAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ,CADJ;AAiBH,CAlDD;;AAoDA,eAAef,UAAf","sourcesContent":["import { AgGridReact } from 'ag-grid-react/lib/agGridReact';\nimport Axios from 'axios';\nimport React, { useState } from 'react';\n\nconst DeployGrid = ({props}/* { setDeployCondition, setItemCode, setDivisionCode, searchBom, bomData } */) => {\n    const [positionGridApi, setPositionGridApi] = useState();\n\n    const setPadding = (arr) => {\n        let lev = arr.data.bomLevel;\n        let iCode = arr.value;\n        let space = \"　　\";\n        for(let i=0; i<lev; i++){\n            iCode = space+iCode;\n            console.log(iCode);\n            return iCode;\n        }\n    };\n\n    const onGridReady = (params) => {\n        setPositionGridApi(params.api);        \n    };\n\n    const columnDefs = [\n        { headerName: \"BOM번호\", field: \"bomNo\", width: 100 },\n        { headerName: \"BOM레벨\", field: \"bomLevel\", width: 80 },\n        { headerName: \"상위품목코드\", field: \"parentItemCode\", width: 100 },\n        { headerName: \"품목코드\", field: \"itemCode\", width: 200, valueFormatter: setPadding},\n        { headerName: \"품목명\", field: \"itemName\", width: 130 },\n        { headerName: \"단위\", field: \"unitOfStock\", width: 50 },\n        { headerName: \"정미수량\", field: \"netAmount\", width: 80 },\n        { headerName: \"손실율\", field: \"lossRate\", width: 65 },\n        { headerName: \"필요수량\", field: \"necessaryAmount\", width: 80 },\n        { headerName: \"리드타임\", field: \"leadTime\", width: 80 },\n        { headerName: \"isLeaf\", field: \"isLeaf\", width: 70 },\n        { headerName: \"비고\", field: \"description\", width: 50 }\n    ];   \n\n    return (\n        <>\n            <div className = \"gridAlign\" style = {{paddingTop:\"8px\"}}>\n                <div className = {\"ag-theme-balham\"} \n                    style = {{\n                        height: \"500px\",\n                        width: \"1087px\"\n                    }}>\n                    <AgGridReact                        \n                        columnDefs = {columnDefs}\n                        rowData = {props.bom.data&&props.bom.data}                        \n                        onGirdReady = {onGridReady}\n                    />\n                </div>            \n            </div>\n        </>\n    );\n};\n\nexport default DeployGrid;"]},"metadata":{},"sourceType":"module"}