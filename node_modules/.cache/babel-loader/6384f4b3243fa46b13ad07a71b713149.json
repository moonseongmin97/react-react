{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\salary\\\\page\\\\SeverancePay\\\\SeverancePayContainer.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { formatNumber } from 'erp/hr/util/lib';\nimport HrAppBar from 'erp/hr/util/HrAppBar';\nimport MySelect from 'erp/hr/util/MySelect';\nimport MyGrid from 'erp/hr/util/MyGrid';\nimport { FormControl } from \"@material-ui/core\";\nimport Axios from 'axios'; //*********** 퇴직금조회 21/09/15 고범석  종료 *************/\n\nexport const SeveranceContainer = () => {\n  const columnDefinition = [{\n    headerName: \"사원코드\",\n    field: \"empCode\",\n    sortable: true,\n    resizable: true\n  }, {\n    headerName: \"사원명\",\n    field: \"empName\",\n    sortable: true,\n    resizable: true\n  }, {\n    headerName: \"입사일\",\n    field: \"hireDate\"\n  }, {\n    headerName: \"적용연월\",\n    field: \"sysDate\"\n  }, // { headerName: \"부서명\", field: \"deptName\", sortable: true, resizable: true },\n  // { headerName: \"부서코드\", field: \"deptCode\", hide: true },\n  {\n    headerName: \"퇴직금\",\n    field: \"severancePay\",\n    valueFormatter: formatNumber\n  }, {\n    headerName: \"비고\",\n    field: \"text\"\n  }]; // 부서 selector 띄우기\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8282/hr/base/deptList\").then(({\n      data\n    }) => {\n      console.log(data);\n      const dataList = data.list.map(e => {\n        return {\n          key: e.deptName,\n          value: e.deptCode\n        };\n      });\n      setSelectDeptData({ // dept: dataList\n        ...selectDeptData,\n        dept: [...selectDeptData.dept, ...dataList]\n      });\n    }).catch(e => {\n      alert(e);\n    });\n  }, []);\n  const [selectDeptData, setSelectDeptData] = useState({\n    dept: [{\n      key: '부서선택해주세요',\n      value: 'ALL'\n    }]\n  });\n  const [selectEmpData, setSelectEmpData] = useState({\n    emp: [{\n      key: '사원선택해주세요',\n      value: 'ALL'\n    }]\n  }); // console.log('!!!!!EmpData.emp.value값!!!!');\n  // console.log(selectEmpData.emp[0].value);\n  // console.log(selectDeptData.dept[0].value);\n\n  const [selectDeptTitle, setSelectDeptTitle] = useState(selectDeptData.dept[0].value);\n  const [selectEmpCode, setSelectEmpCode] = useState(selectEmpData.emp[0].value);\n  const [rowData, setRowData] = useState(\"\"); // 부서명 , 사원명 change될시\n\n  const selectHandleChange = e => {\n    console.log('체인지!!!!!!!!!!!!!');\n    console.log(e);\n    const selectValue = e.target.value;\n    setSelectDeptTitle(selectValue);\n    console.log('!!!!!!!!');\n    console.log(selectDeptData); // 사원명\n\n    Axios.get(\"http://localhost:8282/hr/affair/memberList\", {\n      params: {\n        value: selectValue\n      }\n    }).then(response => {\n      console.log('response.data!!!!!!');\n      console.log(response.data);\n      console.log(response.data.list);\n      const empList = response.data.list.map(e => {\n        return {\n          key: e.empName,\n          value: e.empCode\n        };\n      }); // 승훈이행님 도움\n\n      setSelectEmpData({\n        emp: empList\n      }); // 범석 소스코드\n      // setSelectEmpData({\n      //     ...selectEmpData, emp: [...selectEmpData.emp, ...empList]\n      // })\n    }).catch(() => {\n      alert('해당부서에는 사원이 존재하지 않습니다');\n      window.location.reload(true);\n    });\n  }; // 사원명을 change했을 경우\n\n\n  const selectSearchEmpChange = e => {\n    const selectName = e.target.value;\n    setSelectEmpCode(selectName);\n    console.log(e);\n    console.log('사원명~~~!!!');\n    console.log(selectName); // 사원명 변경시 퇴직금 찍는\n\n    Axios.get(\"http://localhost:8282/hr/salary/severancePay\", {\n      params: {\n        empName: selectName\n      }\n    }).then(response => {\n      console.log(response.data);\n      console.log(response.data.severancePayList[0]);\n      console.log(response.data.gridRowJson);\n      setRowData(response.data.severancePayList);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(HrAppBar, {\n    title: \"\\uD1F4\\uC9C1\\uAE08 \\uC870\\uD68C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    style: {\n      minWidth: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(MySelect, {\n    selectName: '부서',\n    selectValue: selectDeptTitle,\n    selectonChange: selectHandleChange,\n    menuItemMap: selectDeptData.dept,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    style: {\n      minWidth: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(MySelect, {\n    selectName: '사원명',\n    selectValue: selectEmpCode,\n    selectonChange: selectSearchEmpChange,\n    menuItemMap: selectEmpData.emp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(MyGrid, {\n    columnDefinition: columnDefinition,\n    rowData: rowData,\n    paginationAutoPageSize: true,\n    pagination: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }));\n};\nexport default React.memo(SeveranceContainer);","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/salary/page/SeverancePay/SeverancePayContainer.js"],"names":["React","useCallback","useEffect","useState","formatNumber","HrAppBar","MySelect","MyGrid","FormControl","Axios","SeveranceContainer","columnDefinition","headerName","field","sortable","resizable","valueFormatter","get","then","data","console","log","dataList","list","map","e","key","deptName","value","deptCode","setSelectDeptData","selectDeptData","dept","catch","alert","selectEmpData","setSelectEmpData","emp","selectDeptTitle","setSelectDeptTitle","selectEmpCode","setSelectEmpCode","rowData","setRowData","selectHandleChange","selectValue","target","params","response","empList","empName","empCode","window","location","reload","selectSearchEmpChange","selectName","severancePayList","gridRowJson","minWidth","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { formatNumber } from 'erp/hr/util/lib'\r\nimport HrAppBar from 'erp/hr/util/HrAppBar'\r\nimport MySelect from 'erp/hr/util/MySelect'\r\nimport MyGrid from 'erp/hr/util/MyGrid'\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport Axios from 'axios';\r\n\r\n\r\n//*********** 퇴직금조회 21/09/15 고범석  종료 *************/\r\nexport const SeveranceContainer = () => {\r\n    const columnDefinition = [\r\n        { headerName: \"사원코드\", field: \"empCode\", sortable: true, resizable: true },\r\n        { headerName: \"사원명\", field: \"empName\", sortable: true, resizable: true },\r\n        { headerName: \"입사일\", field: \"hireDate\" },\r\n        { headerName: \"적용연월\", field: \"sysDate\" },\r\n        // { headerName: \"부서명\", field: \"deptName\", sortable: true, resizable: true },\r\n        // { headerName: \"부서코드\", field: \"deptCode\", hide: true },\r\n        { headerName: \"퇴직금\", field: \"severancePay\", valueFormatter: formatNumber },\r\n        { headerName: \"비고\", field: \"text\" },\r\n    ];\r\n\r\n    // 부서 selector 띄우기\r\n    useEffect(() => {\r\n        Axios.get(\r\n            \"http://localhost:8282/hr/base/deptList\"\r\n        ).then(({ data }) => {\r\n            console.log(data);\r\n            const dataList = data.list.map(e => {\r\n                return {\r\n                    key: e.deptName,\r\n                    value: e.deptCode\r\n                }\r\n            })\r\n            setSelectDeptData({\r\n                // dept: dataList\r\n                ...selectDeptData, dept: [...selectDeptData.dept, ...dataList]\r\n            })\r\n        }).catch(e => {\r\n            alert(e);\r\n        });\r\n    }, []);\r\n\r\n\r\n    const [selectDeptData, setSelectDeptData] = useState(\r\n        {\r\n            dept: [\r\n                { key: '부서선택해주세요', value: 'ALL' }\r\n            ]\r\n        }\r\n    );\r\n\r\n    const [selectEmpData, setSelectEmpData] = useState(\r\n        {\r\n            emp: [\r\n                { key: '사원선택해주세요', value: 'ALL' },\r\n            ]\r\n        }\r\n    );\r\n\r\n\r\n    // console.log('!!!!!EmpData.emp.value값!!!!');\r\n    // console.log(selectEmpData.emp[0].value);\r\n    // console.log(selectDeptData.dept[0].value);\r\n\r\n    const [selectDeptTitle, setSelectDeptTitle] = useState(selectDeptData.dept[0].value)\r\n    const [selectEmpCode, setSelectEmpCode] = useState(selectEmpData.emp[0].value)\r\n    const [rowData, setRowData] = useState(\"\");\r\n\r\n\r\n    // 부서명 , 사원명 change될시\r\n    const selectHandleChange = e => {\r\n        console.log('체인지!!!!!!!!!!!!!');\r\n        console.log(e);\r\n        const selectValue = e.target.value;\r\n        setSelectDeptTitle(selectValue);\r\n        console.log('!!!!!!!!');\r\n        console.log(selectDeptData);\r\n\r\n        // 사원명\r\n        Axios.get(\r\n            \"http://localhost:8282/hr/affair/memberList\",\r\n            {\r\n                params: {\r\n                    value: selectValue\r\n                }\r\n            }\r\n        ).then(response => {\r\n            console.log('response.data!!!!!!');\r\n            console.log(response.data);\r\n            console.log(response.data.list);\r\n            const empList = response.data.list.map(e => {\r\n                return {\r\n                    key: e.empName,\r\n                    value: e.empCode\r\n                }\r\n            })\r\n\r\n            // 승훈이행님 도움\r\n            setSelectEmpData({\r\n                emp: empList\r\n            })\r\n\r\n            // 범석 소스코드\r\n            // setSelectEmpData({\r\n            //     ...selectEmpData, emp: [...selectEmpData.emp, ...empList]\r\n            // })\r\n\r\n        }).catch(() => {\r\n            alert('해당부서에는 사원이 존재하지 않습니다');\r\n            window.location.reload(true);\r\n        })\r\n    };\r\n\r\n    // 사원명을 change했을 경우\r\n    const selectSearchEmpChange = (e) => {\r\n        const selectName = e.target.value;\r\n        setSelectEmpCode(selectName);\r\n        console.log(e);\r\n        console.log('사원명~~~!!!');\r\n        console.log(selectName);\r\n\r\n        // 사원명 변경시 퇴직금 찍는\r\n        Axios.get(\r\n            \"http://localhost:8282/hr/salary/severancePay\",\r\n            {\r\n                params: {\r\n                    empName: selectName\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                console.log(response.data)\r\n                console.log(response.data.severancePayList[0]);\r\n                console.log(response.data.gridRowJson);\r\n                setRowData(response.data.severancePayList);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <HrAppBar title=\"퇴직금 조회\" />\r\n            <FormControl style={{ minWidth: \"250px\" }}>\r\n                <MySelect\r\n                    selectName={'부서'}\r\n                    selectValue={selectDeptTitle}\r\n                    selectonChange={selectHandleChange}\r\n                    menuItemMap={selectDeptData.dept} />\r\n            </FormControl>\r\n            <FormControl style={{ minWidth: \"250px\" }}>\r\n                <MySelect\r\n                    selectName={'사원명'}\r\n                    selectValue={selectEmpCode}\r\n                    selectonChange={selectSearchEmpChange}\r\n                    menuItemMap={selectEmpData.emp}\r\n                />\r\n            </FormControl>\r\n            <MyGrid\r\n                columnDefinition={columnDefinition}\r\n                rowData={rowData}\r\n                paginationAutoPageSize={true}\r\n                pagination={true} />\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default React.memo(SeveranceContainer);\r\n"]},"metadata":{},"sourceType":"module"}