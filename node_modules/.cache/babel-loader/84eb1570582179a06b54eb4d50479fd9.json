{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\common\\\\page\\\\login\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade } from '@material-ui/core';\nimport classnames from 'classnames';\nimport useInput from 'util/useInput'; // styles\n\nimport useStyles from 'common/page/login/styles'; // logo\n\nimport logo from \"util/images/logo.svg\";\nimport google from \"util/images/google.svg\"; // Dialog\n\nimport CompanyCodeDialog from 'common/page/login/CompanyCodeDialog';\nimport WorkPlaceCodeDialog from 'common/page/login/WorkPlaceCodeDialog';\nimport MyCarousal from './login/MyCarousal';\nimport Message from './login/Message';\nimport Particle from './login/Particles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Login = ({\n  handleLogin,\n  status,\n  errorMsg,\n  isLogin,\n  history,\n  searchCode,\n  companyCode,\n  workPlaceCode\n}) => {\n  const classes = useStyles(); //const userDispatch = useUserDispatch(); // global --UserContext에 필요한 함수\n\n  const [empCode, setEmpcode] = useState('');\n  const [password, setPassword] = useState('');\n  const [companyCodes, setCompanycodes] = useState('');\n  const [workplaceCodes, setWorkplacecodes] = useState(''); // local --기존 스테이트들은 TAP2에서 계정생성을 위한 작업으로 남겨두었다\n  // 사가로 구현시 삭제하자 그냥 삭제시 오류발생\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTabId, setActiveTabId] = useState(0);\n  const [nameValue, setNameValue] = useState('');\n  const [loginValue, setLoginValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n  const [openWorkPlaceCodeDialog, setOpenWorkPlaceCodeDialog] = useState(false);\n  const [openCompanyCodeDialog, setOpenCompanyCodeDialog] = useState(false);\n\n  const enter = () => {\n    handleLogin(empCode, password, companyCodes, workplaceCodes);\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      enter();\n    }\n  };\n\n  const handleClickOpen = Comparing => {\n    switch (Comparing) {\n      case 'companyCode':\n        searchCode({\n          type: Comparing\n        });\n        setOpenCompanyCodeDialog(true);\n        break;\n\n      case 'workplaceCode':\n        searchCode({\n          type: Comparing,\n          companyCode: companyCodes\n        });\n        setOpenWorkPlaceCodeDialog(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleClose = value => {\n    switch (value.division) {\n      case 'CompanyCodeDialog':\n        setOpenCompanyCodeDialog(false);\n        if (value.data === undefined) return;\n        setCompanycodes(value.data[0].companyCode);\n        break;\n\n      case 'WorkPlaceCodeDialog':\n        setOpenWorkPlaceCodeDialog(false);\n        if (value.data === undefined) return;\n        setWorkplacecodes(value.data[0].workplaceCode);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const easterEgg = () => {\n    handleLogin('1111', '1111', 'COM-01', 'BRC-01');\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logotypeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(MyCarousal, {\n    className: classes.logotypeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Particle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classes.easterEgg,\n    onClick: easterEgg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(Tabs, {\n    value: activeTabId,\n    onChange: (e, id) => setActiveTabId(id),\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"Login\",\n    classes: {\n      root: classes.tab\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"New User\",\n    classes: {\n      root: classes.tab\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(CompanyCodeDialog, {\n    open: openCompanyCodeDialog,\n    close: handleClose,\n    value: companyCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(WorkPlaceCodeDialog, {\n    open: openWorkPlaceCodeDialog,\n    close: handleClose,\n    value: workPlaceCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), // Login 탭 내용\n  activeTabId === 0 && React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.greeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Good Morning User\"), React.createElement(Fade, {\n    in: !isLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, errorMsg)), React.createElement(TextField, {\n    id: \"companyCode\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      },\n      endAdornment: React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => handleClickOpen('companyCode'),\n        value: \"companyCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"search\")\n    },\n    value: companyCodes,\n    margin: \"normal\",\n    placeholder: \"\\uD68C\\uC0AC\\uCF54\\uB4DC\",\n    fullWidth: true,\n    disabled: true,\n    style: {\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"workplaceCode\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      },\n      endAdornment: React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => handleClickOpen('workplaceCode'),\n        value: \"workplaceCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"search\")\n    },\n    value: workplaceCodes,\n    onKeyPress: handleKeyPress,\n    margin: \"normal\",\n    placeholder: \"\\uC0AC\\uC5C5\\uC7A5\\uCF54\\uB4DC\",\n    fullWidth: true,\n    disabled: true,\n    style: {\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: empCode,\n    onChange: e => setEmpcode(e.target.value),\n    margin: \"normal\",\n    placeholder: \"\\uC0AC\\uC6D0\\uCF54\\uB4DC\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    onKeyPress: handleKeyPress,\n    margin: \"normal\",\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.formButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, status === 'WAITING' ? React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    disabled: empCode.length === 0 || password.length === 0,\n    onClick: enter,\n    variant: \"contained\",\n    size: \"large\",\n    className: classes.loginButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    className: classes.forgetButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Forget Password\"))), // New User 탭 내용 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n  activeTabId === 1 && React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Welcome!\"), React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.subGreeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Create your account\"), React.createElement(Fade, {\n    in: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Something is wrong with your login or password :(\")), React.createElement(TextField, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: nameValue,\n    onChange: e => setNameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Full Name\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email Adress\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.creatingButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, isLoading ? React.createElement(CircularProgress, {\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    disabled: loginValue.length === 0 || passwordValue.length === 0 || nameValue.length === 0,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.createAccountButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"Create your account\")), React.createElement(\"div\", {\n    className: classes.formDividerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.formDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.formDividerWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"or\"), React.createElement(\"div\", {\n    className: classes.formDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"large\",\n    className: classnames(classes.googleButton, classes.googleButtonCreating),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: google,\n    alt: \"google\",\n    className: classes.googleIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), \"\\xA0Sign in with Google\"))), React.createElement(Typography, {\n    color: \"primary\",\n    className: classes.copyright,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, \"\\xA9 2021 SeoulIt, Academy. All rights reserved.\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/common/page/login/Login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","Fade","classnames","useInput","useStyles","CompanyCodeDialog","WorkPlaceCodeDialog","MyCarousal","Message","Particle","makeStyles","Login","handleLogin","status","errorMsg","isLogin","history","searchCode","companyCode","workPlaceCode","classes","empCode","setEmpcode","password","setPassword","companyCodes","setCompanycodes","workplaceCodes","setWorkplacecodes","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","openWorkPlaceCodeDialog","setOpenWorkPlaceCodeDialog","openCompanyCodeDialog","setOpenCompanyCodeDialog","enter","handleKeyPress","e","key","handleClickOpen","Comparing","type","handleClose","value","division","data","undefined","workplaceCode","easterEgg","container","logotypeContainer","logotypeImage","formContainer","form","id","root","tab","greeting","errorMessage","underline","textFieldUnderline","input","textField","endAdornment","backgroundColor","target","formButtons","loginLoader","length","loginButton","forgetButton","subGreeting","creatingButtonContainer","createAccountButton","formDividerContainer","formDivider","formDividerWord","googleButton","googleButtonCreating","google","googleIcon","copyright"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade\n} from '@material-ui/core';\nimport classnames from 'classnames';\nimport useInput from 'util/useInput';\n// styles\nimport useStyles from 'common/page/login/styles';\n// logo\nimport logo from 'util/images/logo.svg';\nimport google from 'util/images/google.svg';\n\n// Dialog\nimport CompanyCodeDialog from 'common/page/login/CompanyCodeDialog';\nimport WorkPlaceCodeDialog from 'common/page/login/WorkPlaceCodeDialog';\n\nimport MyCarousal from './login/MyCarousal';\nimport Message from './login/Message';\nimport Particle from './login/Particles';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Login = ({\n    handleLogin,\n    status,\n    errorMsg,\n    isLogin,\n    history,\n    searchCode,\n    companyCode,\n    workPlaceCode\n}) => {\n    const classes = useStyles();\n    //const userDispatch = useUserDispatch(); // global --UserContext에 필요한 함수\n\n    const [empCode, setEmpcode] = useState('');\n    const [password, setPassword] = useState('');\n    const [companyCodes, setCompanycodes] = useState('');\n    const [workplaceCodes, setWorkplacecodes] = useState('');\n    // local --기존 스테이트들은 TAP2에서 계정생성을 위한 작업으로 남겨두었다\n    // 사가로 구현시 삭제하자 그냥 삭제시 오류발생\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [activeTabId, setActiveTabId] = useState(0);\n    const [nameValue, setNameValue] = useState('');\n    const [loginValue, setLoginValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [openWorkPlaceCodeDialog, setOpenWorkPlaceCodeDialog] = useState(false);\n    const [openCompanyCodeDialog, setOpenCompanyCodeDialog] = useState(false);\n\n    const enter = () => {\n        handleLogin(empCode, password, companyCodes, workplaceCodes);\n    };\n\n    const handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            enter();\n        }\n    };\n\n    const handleClickOpen = Comparing => {\n        switch (Comparing) {\n            case 'companyCode':\n                searchCode({ type: Comparing });\n                setOpenCompanyCodeDialog(true);\n                break;\n            case 'workplaceCode':\n                searchCode({ type: Comparing, companyCode: companyCodes });\n                setOpenWorkPlaceCodeDialog(true);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleClose = value => {\n        switch (value.division) {\n            case 'CompanyCodeDialog':\n                setOpenCompanyCodeDialog(false);\n                if (value.data === undefined) return;\n                setCompanycodes(value.data[0].companyCode);\n                break;\n            case 'WorkPlaceCodeDialog':\n                setOpenWorkPlaceCodeDialog(false);\n                if (value.data === undefined) return;\n                setWorkplacecodes(value.data[0].workplaceCode);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const easterEgg = () => {\n        handleLogin('1111', '1111', 'COM-01', 'BRC-01');\n    };\n\n    return (\n        <Grid container className={classes.container}>\n            <div className={classes.logotypeContainer}>\n                <MyCarousal className={classes.logotypeImage} />\n                <Message />\n                <Particle />\n            </div>\n            <div className={classes.formContainer}>\n                <div className={classes.form}>\n                    <button className={classes.easterEgg} onClick={easterEgg}>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </button>\n                    <Tabs\n                        value={activeTabId}\n                        onChange={(e, id) => setActiveTabId(id)}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        centered\n                    >\n                        <Tab label=\"Login\" classes={{ root: classes.tab }} />\n                        <Tab label=\"New User\" classes={{ root: classes.tab }} />\n                    </Tabs>\n\n                    <CompanyCodeDialog\n                        open={openCompanyCodeDialog}\n                        close={handleClose}\n                        value={companyCode}\n                    />\n\n                    <WorkPlaceCodeDialog\n                        open={openWorkPlaceCodeDialog}\n                        close={handleClose}\n                        value={workPlaceCode}\n                    />\n\n                    {// Login 탭 내용\n                    activeTabId === 0 && (\n                        <>\n                            <Typography variant=\"h2\" className={classes.greeting}>\n                                Good Morning User\n                            </Typography>\n                            <Fade in={!isLogin}>\n                                <Typography color=\"secondary\" className={classes.errorMessage}>\n                                    {errorMsg}\n                                </Typography>\n                            </Fade>\n                            <TextField\n                                id=\"companyCode\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    },\n                                    endAdornment: (\n                                        <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            onClick={() => handleClickOpen('companyCode')}\n                                            value=\"companyCode\"\n                                        >\n                                            search\n                                        </Button>\n                                    )\n                                }}\n                                value={companyCodes}\n                                margin=\"normal\"\n                                placeholder=\"회사코드\"\n                                fullWidth\n                                disabled={true}\n                                style={{ backgroundColor: \"white\" }}\n                            />\n\n                            <TextField\n                                id=\"workplaceCode\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    },\n                                    endAdornment: (\n                                        <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            onClick={() => handleClickOpen('workplaceCode')}\n                                            value=\"workplaceCode\"\n                                        >\n                                            search\n                                        </Button>\n                                    )\n                                }}\n                                value={workplaceCodes}\n                                onKeyPress={handleKeyPress}\n                                margin=\"normal\"\n                                placeholder=\"사업장코드\"\n                                fullWidth\n                                disabled={true}\n                                style={{ backgroundColor: \"white\" }}\n                            />\n                            <TextField\n                                id=\"email\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    }\n                                }}\n                                value={empCode}\n                                onChange={e => setEmpcode(e.target.value)}\n                                margin=\"normal\"\n                                placeholder=\"사원코드\"\n                                fullWidth\n                            />\n                            <TextField\n                                id=\"password\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    }\n                                }}\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                                onKeyPress={handleKeyPress}\n                                margin=\"normal\"\n                                placeholder=\"비밀번호\"\n                                type=\"password\"\n                                fullWidth\n                            />\n                            <div className={classes.formButtons}>\n                                {status === 'WAITING' ? (\n                                    <CircularProgress size={26} className={classes.loginLoader} />\n                                ) : (\n                                    <Button\n                                        disabled={empCode.length === 0 || password.length === 0}\n                                        onClick={enter}\n                                        variant=\"contained\"\n                                        size=\"large\"\n                                        className={classes.loginButton}\n                                    >\n                                        Login\n                                    </Button>\n                                )}\n                                <Button\n                                    color=\"primary\"\n                                    size=\"large\"\n                                    className={classes.forgetButton}\n                                >\n                                    Forget Password\n                                </Button>\n                            </div>\n                        </>\n                    )}\n\n                    {// New User 탭 내용 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n                    activeTabId === 1 && (\n                        <>\n                            <Typography variant=\"h1\" className={classes.greeting}>\n                                Welcome!\n                            </Typography>\n                            <Typography variant=\"h2\" className={classes.subGreeting}>\n                                Create your account\n                            </Typography>\n                            <Fade in={error}>\n                                <Typography color=\"secondary\" className={classes.errorMessage}>\n                                    Something is wrong with your login or password :(\n                                </Typography>\n                            </Fade>\n                            <TextField\n                                id=\"name\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    }\n                                }}\n                                value={nameValue}\n                                onChange={e => setNameValue(e.target.value)}\n                                margin=\"normal\"\n                                placeholder=\"Full Name\"\n                                type=\"email\"\n                                fullWidth\n                            />\n                            <TextField\n                                id=\"email\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    }\n                                }}\n                                value={loginValue}\n                                onChange={e => setLoginValue(e.target.value)}\n                                margin=\"normal\"\n                                placeholder=\"Email Adress\"\n                                type=\"email\"\n                                fullWidth\n                            />\n                            <TextField\n                                id=\"password\"\n                                InputProps={{\n                                    classes: {\n                                        underline: classes.textFieldUnderline,\n                                        input: classes.textField\n                                    }\n                                }}\n                                value={passwordValue}\n                                onChange={e => setPasswordValue(e.target.value)}\n                                margin=\"normal\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                fullWidth\n                            />\n                            <div className={classes.creatingButtonContainer}>\n                                {isLoading ? (\n                                    <CircularProgress size={26} />\n                                ) : (\n                                    <Button\n                                        disabled={\n                                            loginValue.length === 0 ||\n                                            passwordValue.length === 0 ||\n                                            nameValue.length === 0\n                                        }\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        className={classes.createAccountButton}\n                                    >\n                                        Create your account\n                                    </Button>\n                                )}\n                            </div>\n                            <div className={classes.formDividerContainer}>\n                                <div className={classes.formDivider} />\n                                <Typography className={classes.formDividerWord}>or</Typography>\n                                <div className={classes.formDivider} />\n                            </div>\n                            <Button\n                                size=\"large\"\n                                className={classnames(\n                                    classes.googleButton,\n                                    classes.googleButtonCreating\n                                )}\n                            >\n                                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                                &nbsp;Sign in with Google\n                            </Button>\n                        </>\n                    )}\n                </div>\n                <Typography color=\"primary\" className={classes.copyright}>\n                    © 2021 SeoulIt, Academy. All rights reserved.\n                </Typography>\n            </div>\n        </Grid>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}