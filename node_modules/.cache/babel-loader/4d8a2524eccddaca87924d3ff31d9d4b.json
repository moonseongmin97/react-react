{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\OrderRegister\\\\ShowOrderDialog.js\";\nimport React, { useState, useCallback } from 'react';\nimport { TextField } from '@material-ui/core';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport moment from 'moment';\nimport showOrderColumn from './showOrderColumn';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nconst ShowOrderDialog = ({\n  girdData,\n  close,\n  onClickGetOrderList,\n  mrpGatheringNoList\n}) => {\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [orderDay, setOrderDay] = useState(today);\n  const onChange = useCallback(e => {\n    setOrderDay(e.target.value);\n  }, []);\n  const onClickOrder = useCallback(e => {\n    console.log(\"mrpGatheringNoList\");\n    console.log(mrpGatheringNoList);\n    axios.get('http://localhost:8282/logi/purchase/order', {\n      params: {\n        mrpGatheringNoList: mrpGatheringNoList.join(',')\n      }\n    }).then(({\n      data\n    }) => {\n      if (data.errorCode < 0) {\n        return Swal.fire({\n          icon: 'error',\n          title: data.errorMsg\n        });\n      }\n\n      Swal.fire({\n        icon: 'success',\n        title: data.errorMsg\n      });\n      onClickGetOrderList();\n    }).catch(e => {\n      Swal.fire({\n        icon: 'error',\n        title: e\n      });\n    });\n    close();\n  }, [close, mrpGatheringNoList, onClickGetOrderList]);\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: showOrderColumn,\n    title: '주문',\n    list: girdData,\n    rowSelection: \"multiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC8FC\\uBB38\\uC77C\",\n    type: 'date',\n    value: orderDay,\n    onChange: onChange,\n    style: {\n      marginRight: '1vw'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClickOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uC804\\uAC1C\\uB41C \\uACB0\\uACFC \\uBC1C\\uC8FC \\uBC0F \\uC7AC\\uACE0\\uCC98\\uB9AC\")));\n};\n\nexport default ShowOrderDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/logistic/purchase/page/OrderRegister/ShowOrderDialog.js"],"names":["React","useState","useCallback","TextField","MyGrid","Button","moment","showOrderColumn","axios","Swal","ShowOrderDialog","girdData","close","onClickGetOrderList","mrpGatheringNoList","today","Date","format","orderDay","setOrderDay","onChange","e","target","value","onClickOrder","console","log","get","params","join","then","data","errorCode","fire","icon","title","errorMsg","catch","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { TextField } from '@material-ui/core';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport moment from 'moment';\nimport showOrderColumn from './showOrderColumn';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nconst ShowOrderDialog = ({ girdData, close, onClickGetOrderList, mrpGatheringNoList }) => {\n    let today = moment(new Date()).format('yyyy-MM-DD');\n    const [orderDay, setOrderDay] = useState(today);\n\n    const onChange = useCallback(e => {\n        setOrderDay(e.target.value);\n    }, []);\n\n    const onClickOrder = useCallback(\n        e => {\n            console.log(\"mrpGatheringNoList\")\n            console.log(mrpGatheringNoList)\n\n            axios\n                .get('http://localhost:8282/logi/purchase/order', {\n                    params: {\n                        mrpGatheringNoList: mrpGatheringNoList.join(',')\n                    }\n                })\n                .then(({ data }) => {\n                    if (data.errorCode < 0) {\n                        return Swal.fire({\n                            icon: 'error',\n                            title: data.errorMsg\n                        });\n                    }\n                    Swal.fire({\n                        icon: 'success',\n                        title: data.errorMsg\n                    });\n                    onClickGetOrderList();\n                    \n                })\n                .catch(e => {\n                    Swal.fire({\n                        icon: 'error',\n                        title: e\n                    });\n                });\n\n                close();\n        },\n        [close, mrpGatheringNoList, onClickGetOrderList]\n    );\n    return (\n        <>\n            <MyGrid column={showOrderColumn} title={'주문'} list={girdData} rowSelection=\"multiple\">\n                <TextField\n                    label=\"주문일\"\n                    type={'date'}\n                    value={orderDay}\n                    onChange={onChange}\n                    style={{ marginRight: '1vw' }}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={onClickOrder}\n                >\n                    현재 전개된 결과 발주 및 재고처리\n                </Button>\n            </MyGrid>\n        </>\n    );\n};\nexport default ShowOrderDialog;\n"]},"metadata":{},"sourceType":"module"}