{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\hr\\\\dayworker\\\\page\\\\dayworker\\\\DayWorkerGrid.js\";\nimport React, { useState, useEffect } from \"react\";\nimport GridStyle from \"./GridStyle\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport { Paper, TextField, Button, Grid, AppBar, Typography, Toolbar } from \"@material-ui/core\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\nimport FormDialog from './DayWorkerModal'; //===========================예솔 일용직 관리 등록/조회 21.12.22======================//\n\nconst DayWorkerGrid = props => {\n  console.log(\"DayWorkerGrid :\", props); // sessionStorage.getItem 모든값을 문자로 저장\n  // 여기서 session 저장해놧기때메 empCode 가 바로 나오는거네\n  // const empCode = sessionStorage.getItem(\"empCodeInfo_token\");\n  //일용직 사원인데 저장한 session으로 사용해도 될까? ==>an)일용직 사원을 등록하고 관리하는 건 일반 사원이 할 일이다.\n\n  const initialValue = {\n    empCode: \"\",\n    empName: \"\",\n    joinDate: \"\",\n    dept: \"\",\n    phoneNumber: \"\",\n    accountNumber: \"\",\n    accountHolder: \"\",\n    salary: \"\",\n    timeSalary: \"\"\n  };\n  const [open, setOpen] = useState(false);\n  const [formData, setFormData] = useState(initialValue); //const [reload, setReload] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFormData(initialValue);\n  };\n\n  const onChange = e => {\n    const {\n      value,\n      id\n    } = e.target;\n    setFormData({ ...formData,\n      [id]: value\n    });\n  };\n\n  useEffect(() => {\n    getDayWorker();\n  }, []); //fetching user data from server\n\n  const getDayWorker = () => {\n    searchDayWorker();\n  }; //사원코드\n\n\n  const [empCode, setEmpCode] = useState(); //사원명 \n\n  const [empName, setEmpName] = useState(); // Grid\n\n  const classes = GridStyle(); // 오늘 날짜\n\n  let today = moment().format(\"YYYY-MM-DD\"); // 삭제데이터\n\n  const [delData, setDelData] = useState([]);\n\n  const handleFormSubmit = () => {\n    const confirm = window.confirm(\"해당 일용직 사원을 추가하시겠습니까?\");\n    console.log(\"formDataformData\" + formData);\n\n    if (confirm) {\n      props.insertDayWorker(formData); // SAGA로 바로 넘겨줘야 데이터가 전부 같이 들어간다. \n\n      handleClose();\n    } else {\n      console.log(\"입력양식을 확인해주세요\");\n    }\n  };\n\n  const column = {\n    columnDefs: [{\n      headerName: \"사원코드\",\n      field: \"empCode\",\n      hide: true\n    }, // 숨기기\n    {\n      headerName: \"귀속년월\",\n      field: \"joinDate\",\n      sortable: true,\n      headerCheckboxSelection: true,\n      headerCheckboxSelectionFilteredOnly: true,\n      checkboxSelection: true\n    }, {\n      headerName: \"사원명\",\n      field: \"empName\"\n    }, {\n      headerName: \"부서명\",\n      field: \"dept\"\n    }, {\n      headerName: \"휴대폰 번호\",\n      field: \"phoneNumber\"\n    }, {\n      headerName: \"계좌번호\",\n      field: \"accountNumber\"\n    }, {\n      headerName: \"예금주\",\n      field: \"accountHolder\"\n    }, {\n      headerName: \"급여\",\n      field: \"salary\"\n    }, {\n      headerName: \"시간당 급여\",\n      field: \"timeSalary\"\n    }]\n  };\n\n  const searchDayWorker = () => {\n    console.log('view!!' + empCode);\n    console.log('view!!' + empName);\n    props.handleDayWorker(empCode, empName);\n  };\n\n  const onRowSelected = e => {\n    setDelData(e.api.getSelectedRows());\n  };\n\n  const deleteDayWorker = () => {\n    console.log(delData);\n\n    if (delData.length === 0) {\n      alert('삭제완료');\n    } else {\n      props.delDayWorker({\n        data: delData\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(AppBar, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"\\uC77C\\uC6A9\\uC9C1 \\uB4F1\\uB85D / \\uC870\\uD68C\"))), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ag-theme-material\" //skipHeaderOnAutoSize=\"true\"\n    ,\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uC0AC\\uC6D0\\uBC88\\uD638\",\n    type: \"text\",\n    defaultValue: empCode,\n    onChange: e => {\n      //지정한 값을 설정한다.\n      setEmpCode(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uC0AC\\uC6D0\\uBA85\",\n    type: \"text\",\n    defaultValue: empName,\n    onChange: e => {\n      setEmpName(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), \"    \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(Button //  className={classes.button}\n  , {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: searchDayWorker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\"), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\\uCC3D\"), React.createElement(FormDialog, {\n    data: formData,\n    open: open,\n    handleClose: handleClose,\n    onChange: onChange,\n    handleFormSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: deleteDayWorker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(AgGridReact, {\n    columnDefs: column.columnDefs,\n    rowData: props.dayworkerData,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    onRowSelected: onRowSelected // onGridSizeChanged={event => {\n    //     event.api.sizeColumnsToFit();\n    // }}\n    // onGridReady={event => {\n    //     event.api.sizeColumnsToFit();\n    //     setDeleteGridList(event.api);\n    // }}\n    ,\n    rowSelection: \"multiple\" //여러개선택가능\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))));\n};\n\nexport default DayWorkerGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/hr/dayworker/page/dayworker/DayWorkerGrid.js"],"names":["React","useState","useEffect","GridStyle","moment","Paper","TextField","Button","Grid","AppBar","Typography","Toolbar","AgGridReact","FormDialog","DayWorkerGrid","props","console","log","initialValue","empCode","empName","joinDate","dept","phoneNumber","accountNumber","accountHolder","salary","timeSalary","open","setOpen","formData","setFormData","handleClickOpen","handleClose","onChange","e","value","id","target","getDayWorker","searchDayWorker","setEmpCode","setEmpName","classes","today","format","delData","setDelData","handleFormSubmit","confirm","window","insertDayWorker","column","columnDefs","headerName","field","hide","sortable","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","checkboxSelection","handleDayWorker","onRowSelected","api","getSelectedRows","deleteDayWorker","length","alert","delDayWorker","data","height","width","textAlign","textField","shrink","button","dayworkerData","param"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport GridStyle from \"./GridStyle\";\r\nimport \"./App.css\";\r\nimport moment from \"moment\";\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Button,\r\n    Grid,\r\n    AppBar,\r\n    Typography,\r\n    Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\nimport FormDialog from './DayWorkerModal';\r\n\r\n//===========================예솔 일용직 관리 등록/조회 21.12.22======================//\r\nconst DayWorkerGrid= props => {\r\n    console.log(\"DayWorkerGrid :\",props);\r\n    // sessionStorage.getItem 모든값을 문자로 저장\r\n    // 여기서 session 저장해놧기때메 empCode 가 바로 나오는거네\r\n    // const empCode = sessionStorage.getItem(\"empCodeInfo_token\");\r\n    //일용직 사원인데 저장한 session으로 사용해도 될까? ==>an)일용직 사원을 등록하고 관리하는 건 일반 사원이 할 일이다.\r\n   \r\n    const initialValue={\r\n        empCode:\"\",\r\n        empName: \"\",\r\n        joinDate: \"\",\r\n        dept: \"\",\r\n        phoneNumber: \"\",\r\n        accountNumber: \"\",\r\n        accountHolder: \"\",\r\n        salary: \"\",\r\n        timeSalary: \"\"\r\n    }\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const [formData, setFormData] = useState(initialValue);\r\n    //const [reload, setReload] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setFormData(initialValue)\r\n      };\r\n    \r\n      const onChange = (e) => { \r\n        const { value, id } = e.target\r\n        setFormData({ ...formData, [id]: value })\r\n      }\r\n\r\n    useEffect(() => {\r\n        getDayWorker()\r\n      }, []); \r\n\r\n \r\n  \r\n  //fetching user data from server\r\n  const getDayWorker = () => {\r\n    searchDayWorker();\r\n\r\n  }\r\n    //사원코드\r\n    const [empCode, setEmpCode] = useState();\r\n    //사원명 \r\n    const [empName, setEmpName] = useState();\r\n    // Grid\r\n    const classes = GridStyle();\r\n    // 오늘 날짜\r\n    let today = moment().format(\"YYYY-MM-DD\");\r\n    // 삭제데이터\r\n    const [delData, setDelData] = useState([]);\r\n\r\n\r\n    const handleFormSubmit = () => {\r\n        const confirm = window.confirm(\"해당 일용직 사원을 추가하시겠습니까?\");\r\n        console.log(\"formDataformData\"+formData);\r\n        if (confirm) {\r\n           props.insertDayWorker(formData); // SAGA로 바로 넘겨줘야 데이터가 전부 같이 들어간다. \r\n          handleClose();\r\n      } else {\r\n         console.log(\"입력양식을 확인해주세요\")\r\n      }\r\n    }\r\n\r\n\r\n\r\n  \r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: \"사원코드\", field: \"empCode\", hide: true }, // 숨기기\r\n            {\r\n                headerName: \"귀속년월\",\r\n                field: \"joinDate\",\r\n                sortable: true,\r\n                headerCheckboxSelection: true,\r\n                headerCheckboxSelectionFilteredOnly: true,\r\n                checkboxSelection: true,\r\n            },\r\n            { headerName: \"사원명\", field: \"empName\" },\r\n            { headerName: \"부서명\", field: \"dept\" },\r\n            { headerName: \"휴대폰 번호\", field: \"phoneNumber\" },\r\n            { headerName: \"계좌번호\", field: \"accountNumber\" },\r\n            { headerName: \"예금주\", field: \"accountHolder\" },\r\n            { headerName: \"급여\", field: \"salary\" },\r\n            { headerName: \"시간당 급여\", field: \"timeSalary\" },\r\n        ],\r\n    };\r\n\r\n    const searchDayWorker = () => {\r\n        console.log('view!!' + empCode);\r\n        console.log('view!!' + empName);\r\n        props.handleDayWorker(empCode, empName);\r\n    };\r\n\r\n\r\n    const onRowSelected = e => {\r\n        setDelData(e.api.getSelectedRows());\r\n    };\r\n\r\n    const deleteDayWorker = () => {\r\n        console.log(delData);\r\n        if (delData.length === 0) {\r\n            alert('삭제완료');\r\n        } else {\r\n            props.delDayWorker({ data: delData });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <AppBar position=\"relative\">\r\n                    <Toolbar>\r\n                        <Typography component=\"h2\" variant=\"h4\">\r\n                             일용직 등록 / 조회\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n          \r\n                <Grid container spacing={1}>\r\n                         \r\n                            <div\r\n                                className={\"ag-theme-material\"}\r\n                                //skipHeaderOnAutoSize=\"true\"\r\n                                enableColResize=\"true\"\r\n                                enableSorting=\"true\"\r\n                                enableFilter=\"true\"\r\n                                enableRangeSelection=\"true\"\r\n                                rowStyle={{ \"text-align\": \"center\" }}\r\n                                style={{\r\n                                    height: \"500px\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                                cellStyle={{ textAlign: \"center\" }}\r\n                            >\r\n                                      <br />\r\n                            <br />\r\n                                <div align=\"center\">\r\n                                <TextField\r\n                                    id=\"requestDate\"\r\n                                    label=\"사원번호\"\r\n                                    type=\"text\"\r\n                                    defaultValue={empCode}\r\n                                    onChange={e => {     //지정한 값을 설정한다.\r\n                                    setEmpCode(e.target.value);\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    />\r\n                                    <TextField\r\n                                    id=\"requestDate\"\r\n                                    label=\"사원명\"\r\n                                    type=\"text\"\r\n                                    defaultValue={empName}\r\n                                    onChange={e => {\r\n                                    setEmpName(e.target.value);\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    />    <br/>\r\n                                    <Button\r\n                                      //  className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={searchDayWorker}\r\n                                    >조회\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleClickOpen}\r\n                                    >등록창</Button>\r\n                                    <FormDialog data={formData} open={open} handleClose={handleClose} \r\n                                      onChange={onChange} handleFormSubmit={handleFormSubmit}\r\n                                    />\r\n                                    <br/>\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={deleteDayWorker}\r\n                                    >삭제하기\r\n                                    </Button>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                <AgGridReact\r\n                                    columnDefs={column.columnDefs}\r\n                                    rowData={props.dayworkerData}\r\n                                    getRowStyle={function (param) {\r\n                                        return { \"text-align\": \"center\" };\r\n                                    }}\r\n                                    onRowSelected={onRowSelected}\r\n                                    // onGridSizeChanged={event => {\r\n                                    //     event.api.sizeColumnsToFit();\r\n                                    // }}\r\n                                    // onGridReady={event => {\r\n                                    //     event.api.sizeColumnsToFit();\r\n                                    //     setDeleteGridList(event.api);\r\n                                    // }}\r\n                                    rowSelection=\"multiple\" //여러개선택가능\r\n                                />\r\n                            </div>\r\n                            </Grid>\r\n             </>\r\n    );\r\n};\r\n\r\nexport default DayWorkerGrid;\r\n"]},"metadata":{},"sourceType":"module"}