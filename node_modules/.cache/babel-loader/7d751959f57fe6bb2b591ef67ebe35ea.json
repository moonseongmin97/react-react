{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\production\\\\page\\\\WorkInstruction\\\\WorkOrderStatus.js\";\nimport { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport Axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction WorkOrderStatus(props) {\n  const [list, setList] = useState([]);\n  const [size, setSize] = useState('50vh'); //const [selectedRows, setSelectedRows] = useState([]);\n\n  const [grid, setGrid] = useState([]);\n  const column = {\n    columnDefs: [{\n      headerName: 'ÏûëÏóÖÏßÄÏãúÏùºÎ†®Î≤àÌò∏',\n      field: 'workOrderNo',\n      minWidth: 150,\n      //suppressSizeToFit: true,\n      headerCheckboxSelection: false,\n      headerCheckboxSelectionFilteredOnly: true,\n      suppressRowClickSelection: true,\n      checkboxSelection: true\n    }, {\n      headerName: 'ÏÜåÏöîÎüâÏ∑®Ìï©Î≤àÌò∏',\n      field: 'mrpGatheringNo' //minWidth: 150\n\n    }, {\n      headerName: 'ÌíàÎ™©Î∂ÑÎ•ò',\n      field: 'itemClassification'\n    }, {\n      headerName: 'ÌíàÎ™©ÏΩîÎìú',\n      field: 'itemCode'\n    }, {\n      headerName: 'ÌíàÎ™©Î™Ö',\n      field: 'itemName' //minWidth: 150\n\n    }, {\n      headerName: 'Îã®ÏúÑ',\n      field: 'unitOfMrp'\n    }, {\n      headerName: 'ÏßÄÏãúÏàòÎüâ',\n      field: 'requiredAmount'\n    }, {\n      headerName: 'ÏÉùÏÇ∞Í≥µÏ†ïÏΩîÎìú',\n      field: 'productionProcessCode'\n    }, {\n      headerName: 'ÏÉùÏÇ∞Í≥µÏ†ïÎ™Ö',\n      field: 'productionProcessName'\n    }, {\n      headerName: 'ÏûëÏóÖÏû•ÏΩîÎìú',\n      field: 'workSiteCode'\n    }, {\n      headerName: 'ÏûëÏóÖÏû•Î™Ö',\n      field: 'workStieName'\n    }, {\n      headerName: 'ÏôÑÎ£åÏÉÅÌÉú',\n      field: 'completionStatus',\n      minWidth: 50,\n      //suppressSizeToFit: true,\n      cellRenderer: function (params) {\n        if (params.value === 'Y') {\n          return params.value = 'üü¢';\n        }\n\n        return '‚ùå';\n      }\n    }, {\n      headerName: 'ÏûëÏóÖÏôÑÎ£åÎêúÏàòÎüâ',\n      //suppressSizeToFit: true,\n      minWidth: 50,\n      field: 'actualCompletionAmount',\n      editable: true,\n      cellRenderer: function (params) {\n        if (params.value == null) {\n          return 'üì∑';\n        }\n\n        return 'üì∑' + params.value;\n      }\n    }]\n  };\n\n  const onCellClicked = params => {\n    setGrid(params);\n  };\n\n  const completionRegist = () => {\n    if (grid.length === 0) {\n      return;\n    }\n\n    grid.api.stopEditing();\n    let selectedRows = grid.api.getSelectedRows();\n    let selectedRow = selectedRows[0];\n\n    if (selectedRow === undefined || selectedRows === undefined) {\n      Swal.fire('ÏïåÎ¶º', 'ÏÑ†ÌÉùÌïú ÌñâÏù¥ ÏóÜÏäµÎãàÎã§.', 'info');\n      return;\n    }\n\n    if (selectedRow.completionStatus !== 'Y') {\n      Swal.fire('ÏïåÎ¶º', 'ÏûëÏóÖÍ≥µÏ†ïÏù¥ Îã§ ÎÅùÎÇòÏßÄ ÏïäÏïòÏäµÎãàÎã§. ÏûëÏóÖÏû•ÏùÑ Î∞©Î¨∏ÌïòÏã≠ÏãúÏò§', 'info');\n      return;\n    }\n\n    if (selectedRow.actualCompletionAmount === undefined || selectedRow.actualCompletionAmount === '') {\n      Swal.fire('ÏïåÎ¶º', 'ÏûëÏóÖÏôÑÎ£åÏàòÎüâÏùÑ ÏûÖÎ†•ÌïòÏã≠ÏãúÏò§.', 'info');\n      return;\n    }\n\n    let confirmMsg = 'ÏûëÏóÖÏùÑ ÏôÑÎ£åÌï©ÎãàÎã§.</br>' + 'ÏûëÏóÖÏùºÎ†®Î≤àÌò∏ : ' + selectedRow.workOrderNo + '</br>' + '<b>ÏûëÏóÖÏôÑÎ£åÎêúÏàòÎüâ : ' + selectedRow.actualCompletionAmount + '</b></br>'; // o Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°\n\n    Swal.fire({\n      title: 'ÏûëÏóÖÏùÑ ÏôÑÎ£åÌïòÏãúÍ≤†ÏäµÎãàÍπå?',\n      html: confirmMsg,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ï∑®ÏÜå',\n      confirmButtonText: 'ÌôïÏù∏'\n    }).then(result => {\n      if (result.isConfirmed) {\n        Axios.get('http://localhost:8282/logi/production/workOrderCompletion', {\n          params: {\n            workOrderNo: selectedRow.workOrderNo,\n            actualCompletionAmount: selectedRow.actualCompletionAmount\n          }\n        }).then(response => {\n          grid.api.updateRowData({\n            remove: [selectedRow]\n          });\n          Swal.fire('ÏÑ±Í≥µ!', 'ÏûëÏóÖÎì±Î°ùÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success');\n        }).catch(e => {\n          Swal.fire('Ïò§Î•ò', e, 'error');\n        });\n      }\n    });\n  };\n\n  const contractSearch = () => {\n    Axios.get('http://localhost:8282/logi/production/showWorkOrderInfoList').then(response => {\n      setList(response.data.gridRowJson);\n    }).catch(e => {\n      Swal.fire('Ïò§Î•ò', e, 'error');\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: column,\n    title: 'ÏûëÏóÖÏßÄÏãúÌòÑÌô©',\n    list: list,\n    onCellClicked: onCellClicked,\n    rowSelection: \"single\",\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh'\n    },\n    onClick: contractSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\\uC791\\uC5C5\\uC9C0\\uC2DC\\uD604\\uD669\\uC870\\uD68C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\" //style={{ marginTop: \"1vh\" }}\n    ,\n    onClick: completionRegist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\uC791\\uC5C5\\uC644\\uB8CC\\uB4F1\\uB85D\")));\n}\n\nexport default WorkOrderStatus;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/production/page/WorkInstruction/WorkOrderStatus.js"],"names":["Button","React","useState","MyGrid","Axios","Swal","WorkOrderStatus","props","list","setList","size","setSize","grid","setGrid","column","columnDefs","headerName","field","minWidth","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","suppressRowClickSelection","checkboxSelection","cellRenderer","params","value","editable","onCellClicked","completionRegist","length","api","stopEditing","selectedRows","getSelectedRows","selectedRow","undefined","fire","completionStatus","actualCompletionAmount","confirmMsg","workOrderNo","title","html","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","get","response","updateRowData","remove","catch","e","contractSearch","data","gridRowJson","marginRight"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,MAAD,CAAhC,CAF4B,CAG5B;;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMY,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CACR;AACIC,MAAAA,UAAU,EAAE,UADhB;AAEIC,MAAAA,KAAK,EAAE,aAFX;AAGIC,MAAAA,QAAQ,EAAE,GAHd;AAII;AACAC,MAAAA,uBAAuB,EAAE,KAL7B;AAMIC,MAAAA,mCAAmC,EAAE,IANzC;AAOIC,MAAAA,yBAAyB,EAAE,IAP/B;AAQIC,MAAAA,iBAAiB,EAAE;AARvB,KADQ,EAWR;AACIN,MAAAA,UAAU,EAAE,SADhB;AAEIC,MAAAA,KAAK,EAAE,gBAFX,CAGI;;AAHJ,KAXQ,EAgBR;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAhBQ,EAiBR;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAjBQ,EAkBR;AACID,MAAAA,UAAU,EAAE,KADhB;AAEIC,MAAAA,KAAK,EAAE,UAFX,CAGI;;AAHJ,KAlBQ,EAuBR;AAAED,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAvBQ,EAwBR;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAxBQ,EAyBR;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAzBQ,EA0BR;AAAED,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KA1BQ,EA2BR;AAAED,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KA3BQ,EA4BR;AAAED,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KA5BQ,EA6BR;AACID,MAAAA,UAAU,EAAE,MADhB;AAEIC,MAAAA,KAAK,EAAE,kBAFX;AAGIC,MAAAA,QAAQ,EAAE,EAHd;AAII;AACAK,MAAAA,YAAY,EAAE,UAASC,MAAT,EAAiB;AAC3B,YAAIA,MAAM,CAACC,KAAP,KAAiB,GAArB,EAA0B;AACtB,iBAAQD,MAAM,CAACC,KAAP,GAAe,IAAvB;AACH;;AACD,eAAO,GAAP;AACH;AAVL,KA7BQ,EAyCR;AACIT,MAAAA,UAAU,EAAE,SADhB;AAEI;AACAE,MAAAA,QAAQ,EAAE,EAHd;AAIID,MAAAA,KAAK,EAAE,wBAJX;AAKIS,MAAAA,QAAQ,EAAE,IALd;AAMIH,MAAAA,YAAY,EAAE,UAASC,MAAT,EAAiB;AAC3B,YAAIA,MAAM,CAACC,KAAP,IAAgB,IAApB,EAA0B;AACtB,iBAAO,IAAP;AACH;;AACD,eAAO,OAAOD,MAAM,CAACC,KAArB;AACH;AAXL,KAzCQ;AADD,GAAf;;AA0DA,QAAME,aAAa,GAAGH,MAAM,IAAI;AAC5BX,IAAAA,OAAO,CAACW,MAAD,CAAP;AACH,GAFD;;AAIA,QAAMI,gBAAgB,GAAG,MAAM;AAC3B,QAAIhB,IAAI,CAACiB,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACH;;AACDjB,IAAAA,IAAI,CAACkB,GAAL,CAASC,WAAT;AACA,QAAIC,YAAY,GAAGpB,IAAI,CAACkB,GAAL,CAASG,eAAT,EAAnB;AACA,QAAIC,WAAW,GAAGF,YAAY,CAAC,CAAD,CAA9B;;AACA,QAAIE,WAAW,KAAKC,SAAhB,IAA6BH,YAAY,KAAKG,SAAlD,EAA6D;AACzD9B,MAAAA,IAAI,CAAC+B,IAAL,CAAU,IAAV,EAAgB,cAAhB,EAAgC,MAAhC;AACA;AACH;;AACD,QAAIF,WAAW,CAACG,gBAAZ,KAAiC,GAArC,EAA0C;AACtChC,MAAAA,IAAI,CAAC+B,IAAL,CAAU,IAAV,EAAgB,gCAAhB,EAAkD,MAAlD;AACA;AACH;;AACD,QACIF,WAAW,CAACI,sBAAZ,KAAuCH,SAAvC,IACAD,WAAW,CAACI,sBAAZ,KAAuC,EAF3C,EAGE;AACEjC,MAAAA,IAAI,CAAC+B,IAAL,CAAU,IAAV,EAAgB,iBAAhB,EAAmC,MAAnC;AACA;AACH;;AACD,QAAIG,UAAU,GACV,oBACA,WADA,GAEAL,WAAW,CAACM,WAFZ,GAGA,OAHA,GAIA,eAJA,GAKAN,WAAW,CAACI,sBALZ,GAMA,WAPJ,CAtB2B,CA+B3B;;AACAjC,IAAAA,IAAI,CAAC+B,IAAL,CAAU;AACNK,MAAAA,KAAK,EAAE,eADD;AAENC,MAAAA,IAAI,EAAEH,UAFA;AAGNI,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,gBAAgB,EAAE,IAJZ;AAKNC,MAAAA,kBAAkB,EAAE,SALd;AAMNC,MAAAA,iBAAiB,EAAE,MANb;AAONC,MAAAA,gBAAgB,EAAE,IAPZ;AAQNC,MAAAA,iBAAiB,EAAE;AARb,KAAV,EASGC,IATH,CASQC,MAAM,IAAI;AACd,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACpB/C,QAAAA,KAAK,CAACgD,GAAN,CAAU,2DAAV,EAAuE;AACnE5B,UAAAA,MAAM,EAAE;AACJgB,YAAAA,WAAW,EAAEN,WAAW,CAACM,WADrB;AAEJF,YAAAA,sBAAsB,EAAEJ,WAAW,CAACI;AAFhC;AAD2D,SAAvE,EAMKW,IANL,CAMUI,QAAQ,IAAI;AACdzC,UAAAA,IAAI,CAACkB,GAAL,CAASwB,aAAT,CAAuB;AAAEC,YAAAA,MAAM,EAAE,CAACrB,WAAD;AAAV,WAAvB;AACA7B,UAAAA,IAAI,CAAC+B,IAAL,CAAU,KAAV,EAAiB,gBAAjB,EAAmC,SAAnC;AACH,SATL,EAUKoB,KAVL,CAUWC,CAAC,IAAI;AACRpD,UAAAA,IAAI,CAAC+B,IAAL,CAAU,IAAV,EAAgBqB,CAAhB,EAAmB,OAAnB;AACH,SAZL;AAaH;AACJ,KAzBD;AA0BH,GA1DD;;AA4DA,QAAMC,cAAc,GAAG,MAAM;AACzBtD,IAAAA,KAAK,CAACgD,GAAN,CAAU,6DAAV,EACKH,IADL,CACUI,QAAQ,IAAI;AACd5C,MAAAA,OAAO,CAAC4C,QAAQ,CAACM,IAAT,CAAcC,WAAf,CAAP;AACH,KAHL,EAIKJ,KAJL,CAIWC,CAAC,IAAI;AACRpD,MAAAA,IAAI,CAAC+B,IAAL,CAAU,IAAV,EAAgBqB,CAAhB,EAAmB,OAAnB;AACH,KANL;AAOH,GARD;;AAUA,SACI,0CACI,oBAAC,MAAD;AACI,IAAA,MAAM,EAAE3C,MADZ;AAEI,IAAA,KAAK,EAAE,QAFX;AAGI,IAAA,IAAI,EAAEN,IAHV;AAII,IAAA,aAAa,EAAEmB,aAJnB;AAKI,IAAA,YAAY,EAAC,QALjB;AAMI,IAAA,IAAI,EAAEjB,IANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,KAAK,EAAE;AAAEmD,MAAAA,WAAW,EAAE;AAAf,KAHX;AAII,IAAA,OAAO,EAAEH,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDARJ,EAgBI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,WAFV,CAGI;AAHJ;AAII,IAAA,OAAO,EAAE9B,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAhBJ,CADJ,CADJ;AA6BH;;AAED,eAAetB,eAAf","sourcesContent":["import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport Axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction WorkOrderStatus(props) {\n    const [list, setList] = useState([]);\n    const [size, setSize] = useState('50vh');\n    //const [selectedRows, setSelectedRows] = useState([]);\n    const [grid, setGrid] = useState([]);\n\n    const column = {\n        columnDefs: [\n            {\n                headerName: 'ÏûëÏóÖÏßÄÏãúÏùºÎ†®Î≤àÌò∏',\n                field: 'workOrderNo',\n                minWidth: 150,\n                //suppressSizeToFit: true,\n                headerCheckboxSelection: false,\n                headerCheckboxSelectionFilteredOnly: true,\n                suppressRowClickSelection: true,\n                checkboxSelection: true\n            },\n            {\n                headerName: 'ÏÜåÏöîÎüâÏ∑®Ìï©Î≤àÌò∏',\n                field: 'mrpGatheringNo'\n                //minWidth: 150\n            },\n            { headerName: 'ÌíàÎ™©Î∂ÑÎ•ò', field: 'itemClassification' },\n            { headerName: 'ÌíàÎ™©ÏΩîÎìú', field: 'itemCode' },\n            {\n                headerName: 'ÌíàÎ™©Î™Ö',\n                field: 'itemName'\n                //minWidth: 150\n            },\n            { headerName: 'Îã®ÏúÑ', field: 'unitOfMrp' },\n            { headerName: 'ÏßÄÏãúÏàòÎüâ', field: 'requiredAmount' },\n            { headerName: 'ÏÉùÏÇ∞Í≥µÏ†ïÏΩîÎìú', field: 'productionProcessCode' },\n            { headerName: 'ÏÉùÏÇ∞Í≥µÏ†ïÎ™Ö', field: 'productionProcessName' },\n            { headerName: 'ÏûëÏóÖÏû•ÏΩîÎìú', field: 'workSiteCode' },\n            { headerName: 'ÏûëÏóÖÏû•Î™Ö', field: 'workStieName' },\n            {\n                headerName: 'ÏôÑÎ£åÏÉÅÌÉú',\n                field: 'completionStatus',\n                minWidth: 50,\n                //suppressSizeToFit: true,\n                cellRenderer: function(params) {\n                    if (params.value === 'Y') {\n                        return (params.value = 'üü¢');\n                    }\n                    return '‚ùå';\n                }\n            },\n            {\n                headerName: 'ÏûëÏóÖÏôÑÎ£åÎêúÏàòÎüâ',\n                //suppressSizeToFit: true,\n                minWidth: 50,\n                field: 'actualCompletionAmount',\n                editable: true,\n                cellRenderer: function(params) {\n                    if (params.value == null) {\n                        return 'üì∑';\n                    }\n                    return 'üì∑' + params.value;\n                }\n            }\n        ]\n    };\n\n    const onCellClicked = params => {\n        setGrid(params);\n    };\n\n    const completionRegist = () => {\n        if (grid.length === 0) {\n            return;\n        }\n        grid.api.stopEditing();\n        let selectedRows = grid.api.getSelectedRows();\n        let selectedRow = selectedRows[0];\n        if (selectedRow === undefined || selectedRows === undefined) {\n            Swal.fire('ÏïåÎ¶º', 'ÏÑ†ÌÉùÌïú ÌñâÏù¥ ÏóÜÏäµÎãàÎã§.', 'info');\n            return;\n        }\n        if (selectedRow.completionStatus !== 'Y') {\n            Swal.fire('ÏïåÎ¶º', 'ÏûëÏóÖÍ≥µÏ†ïÏù¥ Îã§ ÎÅùÎÇòÏßÄ ÏïäÏïòÏäµÎãàÎã§. ÏûëÏóÖÏû•ÏùÑ Î∞©Î¨∏ÌïòÏã≠ÏãúÏò§', 'info');\n            return;\n        }\n        if (\n            selectedRow.actualCompletionAmount === undefined ||\n            selectedRow.actualCompletionAmount === ''\n        ) {\n            Swal.fire('ÏïåÎ¶º', 'ÏûëÏóÖÏôÑÎ£åÏàòÎüâÏùÑ ÏûÖÎ†•ÌïòÏã≠ÏãúÏò§.', 'info');\n            return;\n        }\n        let confirmMsg =\n            'ÏûëÏóÖÏùÑ ÏôÑÎ£åÌï©ÎãàÎã§.</br>' +\n            'ÏûëÏóÖÏùºÎ†®Î≤àÌò∏ : ' +\n            selectedRow.workOrderNo +\n            '</br>' +\n            '<b>ÏûëÏóÖÏôÑÎ£åÎêúÏàòÎüâ : ' +\n            selectedRow.actualCompletionAmount +\n            '</b></br>';\n\n        // o Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°\n        Swal.fire({\n            title: 'ÏûëÏóÖÏùÑ ÏôÑÎ£åÌïòÏãúÍ≤†ÏäµÎãàÍπå?',\n            html: confirmMsg,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            cancelButtonText: 'Ï∑®ÏÜå',\n            confirmButtonText: 'ÌôïÏù∏'\n        }).then(result => {\n            if (result.isConfirmed) {\n                Axios.get('http://localhost:8282/logi/production/workOrderCompletion', {\n                    params: {\n                        workOrderNo: selectedRow.workOrderNo,\n                        actualCompletionAmount: selectedRow.actualCompletionAmount\n                    }\n                })\n                    .then(response => {\n                        grid.api.updateRowData({ remove: [selectedRow] });\n                        Swal.fire('ÏÑ±Í≥µ!', 'ÏûëÏóÖÎì±Î°ùÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success');\n                    })\n                    .catch(e => {\n                        Swal.fire('Ïò§Î•ò', e, 'error');\n                    });\n            }\n        });\n    };\n\n    const contractSearch = () => {\n        Axios.get('http://localhost:8282/logi/production/showWorkOrderInfoList')\n            .then(response => {\n                setList(response.data.gridRowJson);\n            })\n            .catch(e => {\n                Swal.fire('Ïò§Î•ò', e, 'error');\n            });\n    };\n\n    return (\n        <>\n            <MyGrid\n                column={column}\n                title={'ÏûëÏóÖÏßÄÏãúÌòÑÌô©'}\n                list={list}\n                onCellClicked={onCellClicked}\n                rowSelection=\"single\"\n                size={size}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh' }}\n                    onClick={contractSearch}\n                >\n                    ÏûëÏóÖÏßÄÏãúÌòÑÌô©Ï°∞Ìöå\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    //style={{ marginTop: \"1vh\" }}\n                    onClick={completionRegist}\n                >\n                    ÏûëÏóÖÏôÑÎ£åÎì±Î°ù\n                </Button>\n            </MyGrid>\n        </>\n    );\n}\n\nexport default WorkOrderStatus;\n"]},"metadata":{},"sourceType":"module"}