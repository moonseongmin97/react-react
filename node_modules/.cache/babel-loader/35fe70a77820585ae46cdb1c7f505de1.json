{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\sales\\\\page\\\\Estimate\\\\EstimateInfo\\\\Presentational\\\\ItemDialog.js\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport * as api from 'erp/logistic/sales/api';\nimport useAsync from 'util/useAsync';\n\nconst ItemDialog = props => {\n  const [list, setList] = useState([]);\n  const column = {\n    columnDefs: [{\n      headerName: '품목코드',\n      field: 'itemCode',\n      width: 100\n    }, {\n      headerName: '품목명',\n      field: 'itemName',\n      width: 100\n    }]\n  };\n\n  const onCellClicked = params => {\n    //console.log(params.data);\n    props.onCellClicked(params);\n    props.close();\n  };\n\n  const [item, searchItemFetch] = useAsync(() => api.searchItem(), [], false);\n  let renameDetailCodeList = null;\n\n  if (item.data) {\n    let detailCodeList = item.data.detailCodeList;\n    renameDetailCodeList = detailCodeList.map(item => {\n      let rename = [];\n      rename.itemCode = item.detailCode;\n      rename.itemName = item.detailCodeName;\n      return rename;\n    });\n  }\n\n  return React.createElement(MyGrid, {\n    style: {\n      height: '10vh'\n    },\n    column: column,\n    title: '품목명 검색',\n    list: renameDetailCodeList,\n    onCellClicked: onCellClicked,\n    rowSelection: \"single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n};\n\nexport default ItemDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/sales/page/Estimate/EstimateInfo/Presentational/ItemDialog.js"],"names":["Axios","React","useEffect","useState","MyGrid","api","useAsync","ItemDialog","props","list","setList","column","columnDefs","headerName","field","width","onCellClicked","params","close","item","searchItemFetch","searchItem","renameDetailCodeList","data","detailCodeList","map","rename","itemCode","detailCode","itemName","detailCodeName","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMQ,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CACR;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE,UAA7B;AAAyCC,MAAAA,KAAK,EAAE;AAAhD,KADQ,EAER;AAAEF,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,KAAK,EAAE,UAA5B;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAFQ;AADD,GAAf;;AAOA,QAAMC,aAAa,GAAGC,MAAM,IAAI;AAC5B;AACAT,IAAAA,KAAK,CAACQ,aAAN,CAAoBC,MAApB;AACAT,IAAAA,KAAK,CAACU,KAAN;AACH,GAJD;;AAMA,QAAM,CAACC,IAAD,EAAOC,eAAP,IAA0Bd,QAAQ,CAAC,MAAKD,GAAG,CAACgB,UAAJ,EAAN,EAAwB,EAAxB,EAA4B,KAA5B,CAAxC;AAEA,MAAIC,oBAAoB,GAAG,IAA3B;;AACA,MAAGH,IAAI,CAACI,IAAR,EAAa;AACb,QAAIC,cAAc,GAAGL,IAAI,CAACI,IAAL,CAAUC,cAA/B;AAEAF,IAAAA,oBAAoB,GAAGE,cAAc,CAACC,GAAf,CAAmBN,IAAI,IAAI;AAC9C,UAAIO,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACC,QAAP,GAAkBR,IAAI,CAACS,UAAvB;AACAF,MAAAA,MAAM,CAACG,QAAP,GAAkBV,IAAI,CAACW,cAAvB;AACA,aAAOJ,MAAP;AACH,KALsB,CAAvB;AAMH;;AAEG,SACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,MAAM,EAAEpB,MAFZ;AAGI,IAAA,KAAK,EAAE,QAHX;AAII,IAAA,IAAI,EAAEW,oBAJV;AAKI,IAAA,aAAa,EAAEN,aALnB;AAMI,IAAA,YAAY,EAAC,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CAvCD;;AAyCA,eAAeT,UAAf","sourcesContent":["import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MyGrid from 'util/LogiUtil/MyGrid';\r\nimport * as api from 'erp/logistic/sales/api';\r\nimport useAsync from 'util/useAsync';\r\n\r\nconst ItemDialog = props => {\r\n    const [list, setList] = useState([]);\r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: '품목코드', field: 'itemCode', width: 100 },\r\n            { headerName: '품목명', field: 'itemName', width: 100 }\r\n        ]\r\n    };\r\n\r\n    const onCellClicked = params => {\r\n        //console.log(params.data);\r\n        props.onCellClicked(params);\r\n        props.close();\r\n    };\r\n    \r\n    const [item, searchItemFetch] = useAsync(() =>api.searchItem(), [], false);\r\n\r\n    let renameDetailCodeList = null;\r\n    if(item.data){\r\n    let detailCodeList = item.data.detailCodeList;\r\n\r\n    renameDetailCodeList = detailCodeList.map(item => {\r\n        let rename = [];\r\n        rename.itemCode = item.detailCode;\r\n        rename.itemName = item.detailCodeName;\r\n        return rename;\r\n    });\r\n}\r\n\r\n    return (\r\n        <MyGrid\r\n            style={{ height: '10vh' }}\r\n            column={column}\r\n            title={'품목명 검색'}\r\n            list={renameDetailCodeList}\r\n            onCellClicked={onCellClicked}\r\n            rowSelection=\"single\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default ItemDialog;\r\n"]},"metadata":{},"sourceType":"module"}