{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\common\\\\page\\\\dashboard\\\\Dashboard.js\";\nimport React, { Suspense, useEffect, useRef, useMemo } from 'react';\nimport { Canvas, Dom, useLoader, useFrame } from 'react-three-fiber';\nimport { TextureLoader, LinearFilter } from 'three';\nimport lerp from 'lerp';\nimport { Text, MultilineText } from './components/Text';\nimport Plane from './components/Plane';\nimport { Block, useBlock } from './blocks';\nimport state from './store';\nimport './styles.css';\nimport * as types from '../../reducer/commonReducer';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter, Link } from 'react-router-dom'; // function Startup() {\n//   const ref = useRef()\n//   useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\n//   return <Plane ref={ref} color=\"#0e0e0f\" position={[0, 0, 200]} scale={[100, 100, 1]} />\n// }\n// function Paragraph({ image, index, offset, factor, header, aspect, text }) {\n//   const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\n//   const size = aspect < 1 && !mobile ? 0.65 : 1\n//   const alignRight = (canvasWidth - w * size - margin) / 2\n//   const pixelWidth = w * state.zoom * size\n//   const left = !(index % 2)\n//   const color = index % 2 ? \"#D40749\" : \"#2FE8C3\" // 소 제목 색상\n//   return (\n//     <Block factor={factor} offset={offset}>\n//       <group position={[left ? -alignRight : alignRight, 0, 0]}>\n//         <Plane map={image} args={[1, 1, 32, 32]} shift={75} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\n//         <Dom\n//           style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\n//           position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\n//           <div tabIndex={index}>{text}</div>\n//         </Dom>\n//         <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\n//           {header}\n//         </Text>\n//         <Block factor={0.2}>\n//           <Text opacity={0.5} size={w * 0.1} color=\"#1A1E2A\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\n//             {\"0\" + (index + 1)}\n//           </Text>\n//         </Block>\n//       </group>\n//     </Block>\n//   )\n// }\n\nfunction Content() {\n  const images = useLoader(TextureLoader, state.paragraphs.map(({\n    image\n  }) => image));\n  useMemo(() => images.forEach(texture => texture.minFilter = LinearFilter), [images]);\n  const {\n    contentMaxWidth: w,\n    canvasWidth,\n    canvasHeight,\n    mobile\n  } = useBlock();\n  return React.createElement(React.Fragment, null, React.createElement(Block, {\n    factor: 1,\n    offset: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Block, {\n    factor: 1.2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Text, {\n    left: true,\n    size: w * 0.0825,\n    position: [-w / 3.2, 0.5, -1],\n    color: \"#d40749\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"REACT\")), React.createElement(Block, {\n    factor: 1.0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Dom, {\n    position: [-w / 3.2, -w * 0.08 + 0.25, -1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"React isn't magic, \", mobile ? React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : ' ', \" It's adding innovation to thought\"))));\n}\n\nfunction App() {\n  const dispatch = useDispatch(); // const scrollArea = useRef()\n  // const onScroll = e => (state.top.current = e.target.scrollTop)\n  // useEffect(() => void onScroll({ target: scrollArea.current }), [])\n\n  const startClick = e => {\n    e.preventDefault();\n    dispatch({\n      type: types.START_PROJECT\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Canvas, {\n    className: \"canvas\",\n    concurrent: true,\n    pixelRatio: 1,\n    orthographic: true,\n    camera: {\n      zoom: state.zoom,\n      position: [0, 0, 500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Dom, {\n      center: true,\n      className: \"loading\",\n      children: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"frame__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"72th REACT PROJECT\"), React.createElement(\"div\", {\n    className: \"frame__links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"frame__link\",\n    to: \"/\",\n    children: \"\\uC2DC\\uC791\\uD558\\uAE30\",\n    onClick: startClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/common/page/dashboard/Dashboard.js"],"names":["React","Suspense","useEffect","useRef","useMemo","Canvas","Dom","useLoader","useFrame","TextureLoader","LinearFilter","lerp","Text","MultilineText","Plane","Block","useBlock","state","types","useDispatch","BrowserRouter","Link","Content","images","paragraphs","map","image","forEach","texture","minFilter","contentMaxWidth","w","canvasWidth","canvasHeight","mobile","App","dispatch","startClick","e","preventDefault","type","START_PROJECT","zoom","position"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useRef, useMemo } from 'react';\nimport { Canvas, Dom, useLoader, useFrame } from 'react-three-fiber';\nimport { TextureLoader, LinearFilter } from 'three';\nimport lerp from 'lerp';\nimport { Text, MultilineText } from './components/Text';\nimport Plane from './components/Plane';\nimport { Block, useBlock } from './blocks';\nimport state from './store';\nimport './styles.css';\nimport * as types from '../../reducer/commonReducer';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter, Link } from 'react-router-dom';\n\n// function Startup() {\n//   const ref = useRef()\n//   useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\n//   return <Plane ref={ref} color=\"#0e0e0f\" position={[0, 0, 200]} scale={[100, 100, 1]} />\n// }\n\n// function Paragraph({ image, index, offset, factor, header, aspect, text }) {\n//   const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\n//   const size = aspect < 1 && !mobile ? 0.65 : 1\n//   const alignRight = (canvasWidth - w * size - margin) / 2\n//   const pixelWidth = w * state.zoom * size\n//   const left = !(index % 2)\n//   const color = index % 2 ? \"#D40749\" : \"#2FE8C3\" // 소 제목 색상\n//   return (\n//     <Block factor={factor} offset={offset}>\n//       <group position={[left ? -alignRight : alignRight, 0, 0]}>\n//         <Plane map={image} args={[1, 1, 32, 32]} shift={75} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\n//         <Dom\n//           style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\n//           position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\n//           <div tabIndex={index}>{text}</div>\n//         </Dom>\n//         <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\n//           {header}\n//         </Text>\n//         <Block factor={0.2}>\n//           <Text opacity={0.5} size={w * 0.1} color=\"#1A1E2A\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\n//             {\"0\" + (index + 1)}\n//           </Text>\n//         </Block>\n//       </group>\n//     </Block>\n//   )\n// }\n\nfunction Content() {\n    const images = useLoader(\n        TextureLoader,\n        state.paragraphs.map(({ image }) => image)\n    );\n    useMemo(() => images.forEach(texture => (texture.minFilter = LinearFilter)), [images]);\n    const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock();\n    return (\n        <>\n            <Block factor={1} offset={0}>\n                <Block factor={1.2}>\n                    <Text left size={w * 0.0825} position={[-w / 3.2, 0.5, -1]} color=\"#d40749\">\n                        REACT\n                    </Text>\n                </Block>\n                <Block factor={1.0}>\n                    <Dom position={[-w / 3.2, -w * 0.08 + 0.25, -1]}>\n                        React isn't magic, {mobile ? <br /> : ' '} It's adding innovation to thought\n                    </Dom>\n                </Block>\n            </Block>\n            {/* <Block factor={1.2} offset={5.7}>\n        <MultilineText top left size={w * 0.08} lineHeight={w / 8} position={[-w / 3.5, 0, -1]} color=\"#2fe8c3\" text={\"Difficulties\\nduring\\nthe\\nproject\"} />\n      </Block>\n      {state.paragraphs.map((props, index) => (\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\n      ))}\n      {state.stripes.map(({ offset, color, height }, index) => (\n        <Block key={index} factor={-1.5} offset={offset}>\n          <Plane args={[50, height, 32, 32]} shift={-4} color={color} rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]} />\n        </Block>\n      ))} \n      <Block factor={1.25} offset={8}>\n        <MultilineText top left size={w * 0.05} lineHeight={w / 10} position={[-w / 3.5, 0, -1]} color=\"#2fe8c3\" text={\"Thank\\nyou\\nfor\\nattending\"} />\n        <Dom className=\"bottom-left\" position={[-canvasWidth / 2, -canvasHeight / 2, 0]}>\n          Copyright@68th, All Rights Reserved\n        </Dom>\n      </Block>\n      */}\n        </>\n    );\n}\n\nfunction App() {\n    const dispatch = useDispatch();\n    // const scrollArea = useRef()\n    // const onScroll = e => (state.top.current = e.target.scrollTop)\n    // useEffect(() => void onScroll({ target: scrollArea.current }), [])\n\n    const startClick = e => {\n        e.preventDefault();\n        dispatch({ type: types.START_PROJECT });\n    };\n    return (\n        <>\n            <Canvas\n                className=\"canvas\"\n                concurrent\n                pixelRatio={1}\n                orthographic\n                camera={{ zoom: state.zoom, position: [0, 0, 500] }}\n            >\n                <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\n                    <Content />\n                    {/* <Diamonds /> */}\n                    {/* <Startup /> */}\n                </Suspense>\n            </Canvas>\n            {/* <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}> */}\n            {/* <div className=\"scrollArea\" >\n        {new Array(state.sections).fill().map((_, index) => (\n          <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\n        ))}\n      </div> */}\n            <div className=\"frame\">\n                <h1 className=\"frame__title\">72th REACT PROJECT</h1>\n                <div className=\"frame__links\">\n                    <BrowserRouter>\n                        <Link\n                            className=\"frame__link\"\n                            to=\"/\"\n                            children=\"시작하기\"\n                            onClick={startClick}\n                        />\n                    </BrowserRouter>\n                </div>\n                {/*<div className=\"frame__nav\">\n           <a className=\"frame__link\" href=\"#00\" children=\"intro\" />\n          <a className=\"frame__link\" href=\"#01\" children=\"01\" />\n          <a className=\"frame__link\" href=\"#02\" children=\"02\" />\n          <a className=\"frame__link\" href=\"#03\" children=\"03\" />\n          <a className=\"frame__link\" href=\"#04\" children=\"04\" />\n          <a className=\"frame__link\" href=\"#05\" children=\"05\" />\n          <a className=\"frame__link\" href=\"#07\" children=\"06\" />\n          <a className=\"frame__link\" href=\"https://celestialsys.com/blog/redux-fundamentals-building-blocks-and-data-flow/\" children=\"redux\" /> \n        </div>*/}\n            </div>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}