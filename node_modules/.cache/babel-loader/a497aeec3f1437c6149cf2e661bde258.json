{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\purchase\\\\page\\\\LogisticsBOM\\\\DetailDialog.js\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { AgGridReact } from 'ag-grid-react/lib/agGridReact';\nimport React, { useState } from 'react';\n\nconst DetailDialog = ({\n  open,\n  close,\n  data\n}) => {\n  const [positionGridApi, setPositionGridApi] = useState(); //========================== 그리드 객체 준비 ==========================\n\n  const onGridReady = params => {\n    setPositionGridApi(params.api);\n  }; //========================== 그리드내용 ==========================\n\n\n  const columnDefs = [{\n    headerName: \"상세코드번호\",\n    field: \"detailCode\",\n    width: 140\n  }, {\n    headerName: \"상세코드이름\",\n    field: \"detailCodeName\",\n    width: 140\n  }, {\n    headerName: \"사용여부\",\n    field: \"codeUseCheck\",\n    width: 80\n  }];\n\n  const handleClose = node => {\n    if (node.data.detailCode === undefined || node.data.detailCodeName === undefined) {\n      return;\n    } else {\n      if (!window.confirm(\"선택하시겠습니까?\")) {\n        return;\n      } else {\n        close({\n          data: positionGridApi.getSelectedRows()\n        });\n      }\n    }\n  };\n\n  const Close = () => {\n    close({});\n  };\n\n  return React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\uD488\\uBAA9\\uCF54\\uB4DC\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ad-theme-balham\",\n    style: {\n      height: \"300px\",\n      width: \"100%\",\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: columnDefs,\n    rowData: data,\n    rowSelection: \"single\",\n    onGridReady: onGridReady,\n    onCellClicked: handleClose,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: Close,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Close\")));\n};\n\nexport default DetailDialog;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/purchase/page/LogisticsBOM/DetailDialog.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","AgGridReact","React","useState","DetailDialog","open","close","data","positionGridApi","setPositionGridApi","onGridReady","params","api","columnDefs","headerName","field","width","handleClose","node","detailCode","undefined","detailCodeName","window","confirm","getSelectedRows","Close","height","paddingTop","param"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,WAAvD,QAA0E,mBAA1E;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAE5C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,EAAtD,CAF4C,CAI5C;;AACA,QAAMO,WAAW,GAAIC,MAAD,IAAY;AAC5BF,IAAAA,kBAAkB,CAACE,MAAM,CAACC,GAAR,CAAlB;AACH,GAFD,CAL4C,CAS3C;;;AACD,QAAMC,UAAU,GAAG,CACf;AAAEC,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,KAAK,EAAE,YAA/B;AAA6CC,IAAAA,KAAK,EAAE;AAApD,GADe,EAEf;AAAEF,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,KAAK,EAAE,gBAA/B;AAAiDC,IAAAA,KAAK,EAAE;AAAxD,GAFe,EAGf;AAAEF,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,cAA7B;AAA6CC,IAAAA,KAAK,EAAE;AAApD,GAHe,CAAnB;;AAMC,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC3B,QAAGA,IAAI,CAACX,IAAL,CAAUY,UAAV,KAAyBC,SAAzB,IAAsCF,IAAI,CAACX,IAAL,CAAUc,cAAV,KAA6BD,SAAtE,EAAiF;AAC7E;AACH,KAFD,MAEM;AACF,UAAG,CAACE,MAAM,CAACC,OAAP,CAAe,WAAf,CAAJ,EAAiC;AAC7B;AACH,OAFD,MAEM;AACFjB,QAAAA,KAAK,CAAC;AACFC,UAAAA,IAAI,EAAEC,eAAe,CAACgB,eAAhB;AADJ,SAAD,CAAL;AAGH;AACJ;AACH,GAZD;;AAcA,QAAMC,KAAK,GAAG,MAAM;AAChBnB,IAAAA,KAAK,CAAC,EAAD,CAAL;AACH,GAFD;;AAID,SACI,oBAAC,MAAD;AACI,uBAAkB,qBADtB;AAEI,IAAA,IAAI,EAAID,IAFZ;AAGI,IAAA,SAAS,EAAI,IAHjB;AAII,IAAA,QAAQ,EAAI,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ,EASI,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAI,iBAAlB;AACI,IAAA,KAAK,EAAI;AACLqB,MAAAA,MAAM,EAAE,OADH;AAELV,MAAAA,KAAK,EAAE,MAFF;AAGLW,MAAAA,UAAU,EAAE;AAHP,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAId,UADlB;AAEI,IAAA,OAAO,EAAIN,IAFf;AAGI,IAAA,YAAY,EAAG,QAHnB;AAII,IAAA,WAAW,EAAIG,WAJnB;AAKI,IAAA,aAAa,EAAIO,WALrB;AAMI,IAAA,WAAW,EAAE,UAASW,KAAT,EAAgB;AACzB,aAAO;AAAE,sBAAc;AAAhB,OAAP;AACH,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CATJ,EA6BI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAIH,KAAnB;AAA0B,IAAA,KAAK,EAAG,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CA7BJ,CADJ;AAsCH,CAxED;;AA0EA,eAAerB,YAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { AgGridReact } from 'ag-grid-react/lib/agGridReact';\nimport React, { useState } from 'react';\n\nconst DetailDialog = ({ open, close, data }) => {\n\n    const [positionGridApi, setPositionGridApi] = useState();\n\n    //========================== 그리드 객체 준비 ==========================\n    const onGridReady = (params) => {\n        setPositionGridApi(params.api);\n    };\n\n     //========================== 그리드내용 ==========================\n    const columnDefs = [\n        { headerName: \"상세코드번호\", field: \"detailCode\", width: 140 },\n        { headerName: \"상세코드이름\", field: \"detailCodeName\", width: 140 },\n        { headerName: \"사용여부\", field: \"codeUseCheck\", width: 80 }\n    ];\n\n     const handleClose = (node) => {\n        if(node.data.detailCode === undefined || node.data.detailCodeName === undefined) {\n            return;\n        }else {\n            if(!window.confirm(\"선택하시겠습니까?\")) {\n                return;\n            }else {\n                close({\n                    data: positionGridApi.getSelectedRows()                \n                });\n            }\n        }\n     }\n\n     const Close = () => {\n         close({});\n     };\n\n    return (\n        <Dialog\n            aria-labelledby = \"simple-dialog-title\"\n            open = {open}\n            fullWidth = {true}\n            maxWidth = {\"xs\"}\n        >\n            <DialogTitle id=\"simple-dialog-title\">\n                품목코드\n            </DialogTitle>\n            <DialogContent dividers>\n                <div className = {\"ad-theme-balham\"}\n                    style = {{\n                        height: \"300px\",\n                        width: \"100%\",\n                        paddingTop: \"8px\"\n                    }}\n                >\n                    <AgGridReact\n                        columnDefs = {columnDefs} \n                        rowData = {data}\n                        rowSelection = \"single\"\n                        onGridReady = {onGridReady}\n                        onCellClicked = {handleClose}\n                        getRowStyle={function(param) {\n                            return { \"text-align\": \"center\" };\n                        }}\n                    />\n                </div>\n            </DialogContent>  \n            <DialogActions>\n                <Button onClick = {Close} color = \"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n        \n    );\n};\n\nexport default DetailDialog;"]},"metadata":{},"sourceType":"module"}