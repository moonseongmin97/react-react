{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\affair\\\\page\\\\EmpRegist\\\\EmpRegist.jsx\";\n//******************************************************08-26 손유찬 **************************************************** */ -->\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { FormLabel, Input, Button, Select, Grid, MenuItem, AppBar, Toolbar, Typography, Dialog, DialogTitle, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SEARCH_DIVISION_CODE_REQUEST, EMP_REGISTER_REQUEST } from \"../../saga/EmpRegisterSaga\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Calendar from \"./Calendar\";\n\nfunction autoHypenPhone(str) {\n  str = str.replace(/[^0-9]/g, \"\");\n  var tmp = \"\";\n\n  if (str.length < 4) {\n    return str;\n  } else if (str.length < 7) {\n    tmp += str.substr(0, 3);\n    tmp += \"-\";\n    tmp += str.substr(3);\n    return tmp;\n  } else if (str.length < 11) {\n    tmp += str.substr(0, 3);\n    tmp += \"-\";\n    tmp += str.substr(3, 3);\n    tmp += \"-\";\n    tmp += str.substr(6);\n    return tmp;\n  } else {\n    tmp += str.substr(0, 3);\n    tmp += \"-\";\n    tmp += str.substr(3, 4);\n    tmp += \"-\";\n    tmp += str.substr(7);\n    return tmp;\n  }\n\n  return str;\n}\n\nconst EmpRegist = () => {\n  const useInput = initValue => {\n    const [value, setter] = useState(initValue);\n\n    const handler = e => {\n      setter(e.target.value);\n    };\n\n    return [value, handler];\n  };\n\n  const [id, setId] = useInput(\"\");\n  const [password, setPassword] = useInput(\"\");\n  const [passwordChk, setPasswordChk] = useState(\"\");\n  const [name, setName] = useInput(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useInput(\"\");\n  const [workplace, setWorkplace] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [rank, setRank] = useInput(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [postcode, setPostcode] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [extraAddress, setExtraAddress] = useInput(\"\");\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [selectedDate, setSelectedDate] = useState(today);\n  const [gender, setGender] = useInput(\"\");\n  const [authorityCode, setAuthorityCode] = useState(\"\");\n  const [accessCode, setAccessCode] = useState(\"\");\n  const dispatch = useDispatch();\n  const workPlace = useSelector(state => state.hr.base.workplace);\n  const departmentList = useSelector(state => state.hr.affair.departmentList);\n  let data = [];\n  console.log(workPlace + \"@@@@workPlace\");\n  console.log(departmentList + \"@@@@departmentList\");\n  useEffect(() => {\n    dispatch({\n      type: SEARCH_DIVISION_CODE_REQUEST,\n      workplaceCode: workplace\n    });\n  }, [workplace]);\n  const handleDateChange = useCallback(e => {\n    setSelectedDate(e.target.value);\n    console.log(selectedDate);\n  }, [selectedDate]);\n  const onChangePhone = useCallback(e => {\n    setPhone(autoHypenPhone(e.target.value));\n  }, []);\n  const onChangePasswordChk = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordChk(e.target.value);\n  }, [password]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (password !== passwordChk) {\n      return setPasswordError(true);\n    }\n\n    console.log(\"ID : \" + id);\n    console.log(\"PW : \" + password);\n    console.log(\"NAME : \" + name);\n    console.log(\"PHONE : \" + phone);\n    console.log(\"EMAIL : \" + email);\n    console.log(\"WORKPLACE : \" + workplace);\n    console.log(\"DIVISION : \" + division);\n    console.log(\"RANK : \" + rank);\n    console.log(\"POSTCODE : \" + postcode);\n    console.log(\"ADDRESS : \" + address);\n    console.log(\"EXADDRESS : \" + extraAddress);\n    console.log(\"HIREDATE : \" + selectedDate);\n    console.log(\"GENDER : \" + gender);\n    console.log(\"AC : \" + authorityCode);\n    data = {\n      companyCode: \"COM-01\",\n      userPassword: password,\n      updateDate: \"\",\n      workplaceCode: workplace,\n      deptCode: division,\n      positionCode: rank,\n      userId: id,\n      phoneNumber: phone,\n      email: email,\n      zipCode: postcode,\n      basicAddress: address,\n      detailAddress: extraAddress,\n      levelOfEducation: \"\",\n      image: \"\",\n      empName: name,\n      empEngName: \"\",\n      socialSecurityNumber: \"\",\n      hireDate: selectedDate,\n      retirementDate: \"\",\n      userOrNot: \"Y\",\n      birthDate: \"\",\n      gender: gender,\n      authorityCode: authorityCode,\n      accessCode: 'AC0002'\n    };\n    console.log(\"온서브밋 이벤트 작동\" + Object.keys(data));\n    alert(\"등록되었습니다.\");\n    dispatch({\n      type: EMP_REGISTER_REQUEST,\n      data: data\n    });\n  }; //******************************************************08-26 손유찬 **************************************************** */\n\n\n  const onChangeWorkplace = e => {\n    setWorkplace(e.target.value);\n  };\n\n  const onChangeDivision = e => {\n    setDivision(e.target.value);\n  };\n\n  useEffect(() => {\n    division === \"DPT-01\" ? setAuthorityCode(\"SYSTEM\") : division === \"DPT-02\" ? setAuthorityCode(\"HR\") : division === \"DPT-05\" ? setAuthorityCode(\"HR\") : setAuthorityCode(\"LOGI\");\n  }, [division]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handlePostData = data => {\n    var addr = \"\";\n    var extraAddr = \"\";\n\n    if (data.userSelectedType === \"R\") {\n      // 사용자가 도로명 주소를 선택했을 경우\n      addr = data.roadAddress;\n\n      if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\n        extraAddr += data.bname;\n      } // 건물명이 있고, 공동주택일 경우 추가한다.\n\n\n      if (data.buildingName !== \"\" && data.apartment === \"Y\") {\n        extraAddr += extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\n      } // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n\n\n      if (extraAddr !== \"\") {\n        extraAddr = \" (\" + extraAddr + \")\";\n      }\n    } else {\n      //사용자가 지번 주소를 선택했을 경우\n      addr = data.jibunAddress;\n    }\n\n    setAddress(addr + \" \" + extraAddr);\n    setPostcode(data.zonecode);\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"\\uC0AC\\uC6D0 \\uB4F1\\uB85D\")))), React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"auto\",\n      borderSpacing: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"workplace\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"\\uC0AC\\uC5C5\\uC7A5\\uBA85\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"\\xA0\\xA0\\xA0\", React.createElement(Select, {\n    name: \"workplace\",\n    onChange: onChangeWorkplace,\n    value: workplace,\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, workPlace && workPlace.map((v, i) => {\n    return React.createElement(MenuItem, {\n      value: v.workplaceCode,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, v.workplaceName);\n  })))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"division\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"\\uBD80\\uC11C\\uBA85\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(Select, {\n    name: \"division\",\n    onChange: onChangeDivision,\n    value: division,\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, departmentList && departmentList.map((v, i) => {\n    return React.createElement(MenuItem, {\n      value: v.deptCode,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, v.deptName);\n  })))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"rank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"\\uC9C1\\uAE09\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(Select, {\n    name: \"rank\",\n    onChange: setRank,\n    value: rank,\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"POS-01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"\\uC0AC\\uC7A5\"), React.createElement(MenuItem, {\n    value: \"POS-02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, \"\\uC774\\uC0AC\"), React.createElement(MenuItem, {\n    value: \"POS-03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"\\uBD80\\uC7A5\"), React.createElement(MenuItem, {\n    value: \"POS-04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"\\uCC28\\uC7A5\"), React.createElement(MenuItem, {\n    value: \"POS-05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, \"\\uACFC\\uC7A5\"), React.createElement(MenuItem, {\n    value: \"POS-06\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \"\\uB300\\uB9AC\"), React.createElement(MenuItem, {\n    value: \"POS-07\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"\\uC0AC\\uC6D0\"), React.createElement(MenuItem, {\n    value: \"POS-08\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, \"\\uC778\\uD134\"), React.createElement(MenuItem, {\n    value: \"POS-09\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \"\\uACC4\\uC57D\\uC9C1\")))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, \"\\uC0AC\\uC6D0\\uBA85\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"name\",\n    required: true,\n    value: name,\n    onChange: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"id\",\n    required: true,\n    value: id,\n    onChange: setId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"passwordChk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"passwordChk\",\n    type: \"password\",\n    required: true,\n    value: passwordChk,\n    onChange: onChangePasswordChk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, passwordError && React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, \" \", React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638\",\n    value: postcode,\n    inputProps: {\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleOpen,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, \"\\uC6B0\\uD3B8\\uBC88\\uD638\\uCC3E\\uAE30\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"\\uC8FC\\uC18C\",\n    value: address,\n    inputProps: {\n      style: {\n        textAlign: \"center\",\n        width: 400\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"\\uC0C1\\uC138\\uC8FC\\uC18C\",\n    value: extraAddress,\n    onChange: setExtraAddress,\n    required: true,\n    inputProps: {\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, \"\\uC804\\uD654\\uBC88\\uD638\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"phone\",\n    value: phone,\n    onChange: onChangePhone,\n    type: \"tel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, \"\\uC774\\uBA54\\uC77C\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"email\",\n    value: email,\n    onChange: setEmail,\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"hiredate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, \"\\uC785\\uC0AC\\uC77C\\uC790\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    callback: handleDateChange,\n    value: selectedDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"gender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, \"\\uC131\\uBCC4\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender\",\n    value: gender,\n    onChange: setGender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"female\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }),\n    label: \"\\uC5EC\\uC131\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"male\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }),\n    label: \"\\uB0A8\\uC131\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  })))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))))), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }, \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uAC80\\uC0C9\"), React.createElement(DaumPostcode, {\n    onComplete: handlePostData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  })));\n};\n\nexport default EmpRegist;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/hr/affair/page/EmpRegist/EmpRegist.jsx"],"names":["React","useState","useCallback","useEffect","axios","moment","FormLabel","Input","Button","Select","Grid","MenuItem","AppBar","Toolbar","Typography","Dialog","DialogTitle","RadioGroup","Radio","FormControlLabel","useDispatch","useSelector","SEARCH_DIVISION_CODE_REQUEST","EMP_REGISTER_REQUEST","DaumPostcode","Calendar","autoHypenPhone","str","replace","tmp","length","substr","EmpRegist","useInput","initValue","value","setter","handler","e","target","id","setId","password","setPassword","passwordChk","setPasswordChk","name","setName","phone","setPhone","email","setEmail","workplace","setWorkplace","division","setDivision","rank","setRank","passwordError","setPasswordError","open","setOpen","postcode","setPostcode","address","setAddress","extraAddress","setExtraAddress","today","Date","format","selectedDate","setSelectedDate","gender","setGender","authorityCode","setAuthorityCode","accessCode","setAccessCode","dispatch","workPlace","state","hr","base","departmentList","affair","data","console","log","type","workplaceCode","handleDateChange","onChangePhone","onChangePasswordChk","onSubmit","preventDefault","companyCode","userPassword","updateDate","deptCode","positionCode","userId","phoneNumber","zipCode","basicAddress","detailAddress","levelOfEducation","image","empName","empEngName","socialSecurityNumber","hireDate","retirementDate","userOrNot","birthDate","Object","keys","alert","onChangeWorkplace","onChangeDivision","handleOpen","handleClose","handlePostData","addr","extraAddr","userSelectedType","roadAddress","bname","test","buildingName","apartment","jibunAddress","zonecode","textAlign","margin","borderSpacing","map","v","i","workplaceName","deptName","color","style","width"],"mappings":"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","sourcesContent":["//******************************************************08-26 손유찬 **************************************************** */ -->\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from 'moment';\nimport {\n  FormLabel,\n  Input,\n  Button,\n  Select,\n  Grid,\n  MenuItem,\n  AppBar,\n  Toolbar,\n  Typography,\n  Dialog,\n  DialogTitle,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  SEARCH_DIVISION_CODE_REQUEST,\n  EMP_REGISTER_REQUEST,\n} from \"../../saga/EmpRegisterSaga\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Calendar from \"./Calendar\";\n\nfunction autoHypenPhone(str) {\n  str = str.replace(/[^0-9]/g, \"\");\n  var tmp = \"\";\n  if (str.length < 4) {\n    return str;\n  } else if (str.length < 7) {\n    tmp += str.substr(0, 3);\n    tmp += \"-\";\n    tmp += str.substr(3);\n    return tmp;\n  } else if (str.length < 11) {\n    tmp += str.substr(0, 3);\n    tmp += \"-\";\n    tmp += str.substr(3, 3);\n    tmp += \"-\";\n    tmp += str.substr(6);\n    return tmp;\n  } else {\n    tmp += str.substr(0, 3);\n    tmp += \"-\";\n    tmp += str.substr(3, 4);\n    tmp += \"-\";\n    tmp += str.substr(7);\n    return tmp;\n  }\n  return str;\n}\n\nconst EmpRegist = () => {\n  const useInput = initValue => {\n    const [value, setter] = useState(initValue);\n    const handler = e => {\n      setter(e.target.value);\n    };\n    return [value, handler];\n  };\n\n  const [id, setId] = useInput(\"\");\n  const [password, setPassword] = useInput(\"\");\n  const [passwordChk, setPasswordChk] = useState(\"\");\n  const [name, setName] = useInput(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useInput(\"\");\n  const [workplace, setWorkplace] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [rank, setRank] = useInput(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [postcode, setPostcode] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [extraAddress, setExtraAddress] = useInput(\"\");\n\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [selectedDate, setSelectedDate] = useState(today);\n\n  const [gender, setGender] = useInput(\"\");\n  const [authorityCode, setAuthorityCode] = useState(\"\");\n  const [accessCode, setAccessCode] = useState(\"\");\n  const dispatch = useDispatch();\n  const workPlace = useSelector(state => state.hr.base.workplace);\n  const departmentList = useSelector(state => state.hr.affair.departmentList);\n  let data = [];\n  console.log(workPlace+ \"@@@@workPlace\");\n  console.log(departmentList+ \"@@@@departmentList\");\n  useEffect(() => {\n    dispatch({\n      type: SEARCH_DIVISION_CODE_REQUEST,\n      workplaceCode: workplace,\n    });\n  }, [workplace]);\n\n  const handleDateChange = useCallback(\n    e => {\n      setSelectedDate(e.target.value);\n      console.log(selectedDate);\n    },\n    [selectedDate],\n  );\n\n  const onChangePhone = useCallback(e => {\n    setPhone(autoHypenPhone(e.target.value));\n  }, []);\n\n  const onChangePasswordChk = useCallback(\n    e => {\n      setPasswordError(e.target.value !== password);\n      setPasswordChk(e.target.value);\n    },\n    [password],\n  );\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (password !== passwordChk) {\n      return setPasswordError(true);\n    }\n    console.log(\"ID : \" + id);\n    console.log(\"PW : \" + password);\n    console.log(\"NAME : \" + name);\n    console.log(\"PHONE : \" + phone);\n    console.log(\"EMAIL : \" + email);\n    console.log(\"WORKPLACE : \" + workplace);\n    console.log(\"DIVISION : \" + division);\n    console.log(\"RANK : \" + rank);\n    console.log(\"POSTCODE : \" + postcode);\n    console.log(\"ADDRESS : \" + address);\n    console.log(\"EXADDRESS : \" + extraAddress);\n    console.log(\"HIREDATE : \" + selectedDate);\n    console.log(\"GENDER : \" + gender);\n    console.log(\"AC : \" + authorityCode);\n    data = {\n      companyCode: \"COM-01\",\n      userPassword: password,\n      updateDate: \"\",\n      workplaceCode: workplace,\n      deptCode: division,\n      positionCode: rank,\n      userId: id,\n      phoneNumber: phone,\n      email: email,\n      zipCode: postcode,\n      basicAddress: address,\n      detailAddress: extraAddress,\n      levelOfEducation: \"\",\n      image: \"\",\n      empName: name,\n      empEngName: \"\",\n      socialSecurityNumber: \"\",\n      hireDate: selectedDate,\n      retirementDate: \"\",\n      userOrNot: \"Y\",\n      birthDate: \"\",\n      gender: gender,\n      authorityCode: authorityCode,\n      accessCode:'AC0002'\n    };\n\n    console.log(\"온서브밋 이벤트 작동\" + Object.keys(data));\n    alert(\"등록되었습니다.\")\n    dispatch({ type: EMP_REGISTER_REQUEST, data: data });\n  };\n\n  //******************************************************08-26 손유찬 **************************************************** */\n\n  const onChangeWorkplace = e => {\n    setWorkplace(e.target.value);\n  };\n\n  const onChangeDivision = e => {\n    setDivision(e.target.value);\n  };\n\n  useEffect(() => {\n    division === \"DPT-01\"\n      ? setAuthorityCode(\"SYSTEM\")\n      : division === \"DPT-02\"\n      ? setAuthorityCode(\"HR\")\n      : division === \"DPT-05\"\n      ? setAuthorityCode(\"HR\")\n      : setAuthorityCode(\"LOGI\");\n  }, [division]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handlePostData = data => {\n    var addr = \"\";\n    var extraAddr = \"\";\n    if (data.userSelectedType === \"R\") {\n      // 사용자가 도로명 주소를 선택했을 경우\n      addr = data.roadAddress;\n      if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\n        extraAddr += data.bname;\n      }\n      // 건물명이 있고, 공동주택일 경우 추가한다.\n      if (data.buildingName !== \"\" && data.apartment === \"Y\") {\n        extraAddr +=\n          extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\n      }\n      // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n      if (extraAddr !== \"\") {\n        extraAddr = \" (\" + extraAddr + \")\";\n      }\n    } else {\n      //사용자가 지번 주소를 선택했을 경우\n      addr = data.jibunAddress;\n    }\n    setAddress(addr + \" \" + extraAddr);\n    setPostcode(data.zonecode);\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h5\">사원 등록</Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Grid\n        container\n        spacing={0}\n        align=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n      >\n        <Grid>\n          <form onSubmit={onSubmit}>\n            <table\n              style={{\n                textAlign: \"center\",\n                margin: \"auto\",\n                borderSpacing: \"20px\",\n              }}\n            >\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"workplace\">사업장명</FormLabel>\n                </td>\n                <td>\n                  &nbsp;&nbsp;&nbsp;\n                  <Select\n                    name=\"workplace\"\n                    onChange={onChangeWorkplace}\n                    value={workplace}\n                    autoWidth\n                  >\n                    {workPlace && workPlace.map((v, i) => {\n                      return (\n                        <MenuItem value={v.workplaceCode} key={i}>\n                          {v.workplaceName}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"division\">부서명</FormLabel>\n                </td>\n                <td>\n                  <Select\n                    name=\"division\"\n                    onChange={onChangeDivision}\n                    value={division}\n                    autoWidth\n                  >\n                    {departmentList && departmentList.map((v, i) => {\n                      return (\n                        <MenuItem value={v.deptCode} key={i}>\n                          {v.deptName}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"rank\">직급</FormLabel>\n                </td>\n                <td>\n                  <Select name=\"rank\" onChange={setRank} value={rank} autoWidth>\n                    <MenuItem value=\"POS-01\">사장</MenuItem>\n                    <MenuItem value=\"POS-02\">이사</MenuItem>\n                    <MenuItem value=\"POS-03\">부장</MenuItem>\n                    <MenuItem value=\"POS-04\">차장</MenuItem>\n                    <MenuItem value=\"POS-05\">과장</MenuItem>\n                    <MenuItem value=\"POS-06\">대리</MenuItem>\n                    <MenuItem value=\"POS-07\">사원</MenuItem>\n                    <MenuItem value=\"POS-08\">인턴</MenuItem>\n                    <MenuItem value=\"POS-09\">계약직</MenuItem>\n                  </Select>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"name\">사원명</FormLabel>\n                </td>\n                <td>\n                  <Input name=\"name\" required value={name} onChange={setName} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"id\">아이디</FormLabel>\n                </td>\n                <td>\n                  <Input name=\"id\" required value={id} onChange={setId} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"password\">비밀번호</FormLabel>\n                </td>\n                <td>\n                  <Input\n                    name=\"password\"\n                    type=\"password\"\n                    required\n                    value={password}\n                    onChange={setPassword}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"passwordChk\">비밀번호확인</FormLabel>\n                </td>\n                <td>\n                  <Input\n                    name=\"passwordChk\"\n                    type=\"password\"\n                    required\n                    value={passwordChk}\n                    onChange={onChangePasswordChk}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td></td>\n                <td>\n                  {passwordError && (\n                    <div style={{ color: \"red\" }}>\n                      비밀번호가 일치하지 않습니다.\n                    </div>\n                  )}\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"2\">\n                  {\" \"}\n                  <Input\n                    type=\"text\"\n                    placeholder=\"우편번호\"\n                    value={postcode}\n                    inputProps={{ style: { textAlign: \"center\" } }}\n                  />\n                  <Button\n                    onClick={handleOpen}\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    우편번호찾기\n                  </Button>{\" \"}\n                  <br />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"주소\"\n                    value={address}\n                    inputProps={{ style: { textAlign: \"center\", width: 400 } }}\n                  />\n                  <br />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"상세주소\"\n                    value={extraAddress}\n                    onChange={setExtraAddress}\n                    required\n                    inputProps={{ style: { textAlign: \"center\" } }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"phone\">전화번호</FormLabel>\n                </td>\n                <td>\n                  <Input\n                    name=\"phone\"\n                    value={phone}\n                    onChange={onChangePhone}\n                    type=\"tel\"\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"email\">이메일</FormLabel>\n                </td>\n                <td>\n                  <Input\n                    name=\"email\"\n                    value={email}\n                    onChange={setEmail}\n                    type=\"email\"\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"hiredate\">입사일자</FormLabel>\n                </td>\n                <td>\n                  <Calendar callback={handleDateChange} value={selectedDate} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FormLabel htmlFor=\"gender\">성별</FormLabel>\n                </td>\n                <td>\n                  <RadioGroup\n                    aria-label=\"gender\"\n                    name=\"gender\"\n                    value={gender}\n                    onChange={setGender}\n                  >\n                    <FormControlLabel\n                      value=\"female\"\n                      control={<Radio />}\n                      label=\"여성\"\n                    />\n                    <FormControlLabel\n                      value=\"male\"\n                      control={<Radio />}\n                      label=\"남성\"\n                    />\n                  </RadioGroup>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"2\">\n                  <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                    등록하기\n                  </Button>\n                </td>\n              </tr>\n            </table>\n          </form>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>우편번호 검색</DialogTitle>\n        <DaumPostcode onComplete={handlePostData} />\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default EmpRegist;\n"]},"metadata":{},"sourceType":"module"}