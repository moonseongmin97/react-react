{"ast":null,"code":"import { put, takeEvery, takeLatest, all, call } from 'redux-saga/effects';\nimport createRequestSaga from \"util/createRequestSaga\";\nimport * as actions from '../reducer/BaseCodeReducer';\nimport * as types from '../reducer/BaseCodeReducer';\nimport { createAction } from 'redux-actions';\nimport * as api from '../api';\nimport axios from 'axios'; // const SEARCH_CODE = \"src/erp/hr/Saga/Saga/SEARCH_CODE\";\n// const SEARCH_COMPANY_CODE =\"src/erp/hr/Saga/Saga/SEARCH_COMPANY_CODE\";\n// const SEARCH_WORKPLACE_CODE = \"src/erp/hr/Saga/Saga/SEARCH_WORKPLACE_CODE\";\n// export const searchCode = createAction(SEARCH_CODE);\n// export const searchCompanyCode = createAction(SEARCH_COMPANY_CODE);\n// export const searchWorkplaceCode = createAction(SEARCH_WORKPLACE_CODE);\n//const searchCompanyCodeSaga = createRequestSaga(SEARCH_COMPANY_CODE, api.searchCompany) \n//const searchWorkPlaceCodeSaga = createRequestSaga(SEARCH_WORKPLACE_CODE, api.searchWorkplace) \n\nfunction* codeSaga(action) {\n  try {\n    if (action.payload.type === 'companyCode') {\n      const {\n        data\n      } = yield axios.get('http://localhost:8282/hr/company/searchCompany');\n      yield put(actions.searchCompanyCode(data.gridRowJson));\n    } else if (action.payload.type === 'workplaceCode') {\n      const {\n        data\n      } = yield axios.get('http://localhost:8282/hr/company/searchWorkplace', {\n        params: {\n          companyCode: action.payload.companyCode\n        }\n      });\n      yield put(actions.searchWorkplaceCode(data.gridRowJson));\n    }\n  } catch (error) {\n    console.log('에러', error.response);\n    action.payload.history.put('/error');\n  }\n}\n\nexport function* onCodeSearch() {\n  yield takeEvery(types.SEARCH_CODE, codeSaga);\n}\nexport default function* basecode() {\n  yield all([//takeEvery(SEARCH_COMPANY_CODE, searchCompanyCodeSaga),\n  //takeEvery(SEARCH_WORKPLACE_CODE, searchWorkPlaceCodeSaga),\n  call(onCodeSearch)]);\n}","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/base/saga/BaseCodeSaga.js"],"names":["put","takeEvery","takeLatest","all","call","createRequestSaga","actions","types","createAction","api","axios","codeSaga","action","payload","type","data","get","searchCompanyCode","gridRowJson","params","companyCode","searchWorkplaceCode","error","console","log","response","history","onCodeSearch","SEARCH_CODE","basecode"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,GAArC,EAA0CC,IAA1C,QAAsD,oBAAtD;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,4BAAvB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAGA,UAAUC,QAAV,CAAmBC,MAAnB,EAA2B;AACvB,MAAI;AACA,QAAIA,MAAM,CAACC,OAAP,CAAeC,IAAf,KAAwB,aAA5B,EAA2C;AACvC,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAML,KAAK,CAACM,GAAN,CAAU,gDAAV,CAAvB;AACA,YAAMhB,GAAG,CAACM,OAAO,CAACW,iBAAR,CAA0BF,IAAI,CAACG,WAA/B,CAAD,CAAT;AACH,KAHD,MAGO,IAAIN,MAAM,CAACC,OAAP,CAAeC,IAAf,KAAwB,eAA5B,EAA6C;AAChD,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAML,KAAK,CAACM,GAAN,CACnB,kDADmB,EAEnB;AACIG,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAER,MAAM,CAACC,OAAP,CAAeO;AADxB;AADZ,OAFmB,CAAvB;AAQA,YAAMpB,GAAG,CAACM,OAAO,CAACe,mBAAR,CAA4BN,IAAI,CAACG,WAAjC,CAAD,CAAT;AACH;AACJ,GAfD,CAeE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAK,CAACG,QAAxB;AACAb,IAAAA,MAAM,CAACC,OAAP,CAAea,OAAf,CAAuB1B,GAAvB,CAA2B,QAA3B;AACH;AACJ;;AAED,OAAO,UAAU2B,YAAV,GAAyB;AAC5B,QAAM1B,SAAS,CAACM,KAAK,CAACqB,WAAP,EAAoBjB,QAApB,CAAf;AACH;AAED,eAAe,UAAUkB,QAAV,GAAqB;AAChC,QAAM1B,GAAG,CAAC,CACV;AACA;AACAC,EAAAA,IAAI,CAACuB,YAAD,CAHM,CAAD,CAAT;AAKH","sourcesContent":["import { put, takeEvery, takeLatest, all, call } from 'redux-saga/effects';\r\nimport createRequestSaga from \"util/createRequestSaga\";\r\nimport * as actions from '../reducer/BaseCodeReducer';\r\nimport * as types from '../reducer/BaseCodeReducer';\r\nimport { createAction } from 'redux-actions';\r\nimport * as api from '../api';\r\nimport axios from 'axios';\r\n\r\n// const SEARCH_CODE = \"src/erp/hr/Saga/Saga/SEARCH_CODE\";\r\n// const SEARCH_COMPANY_CODE =\"src/erp/hr/Saga/Saga/SEARCH_COMPANY_CODE\";\r\n// const SEARCH_WORKPLACE_CODE = \"src/erp/hr/Saga/Saga/SEARCH_WORKPLACE_CODE\";\r\n\r\n// export const searchCode = createAction(SEARCH_CODE);\r\n// export const searchCompanyCode = createAction(SEARCH_COMPANY_CODE);\r\n// export const searchWorkplaceCode = createAction(SEARCH_WORKPLACE_CODE);\r\n\r\n//const searchCompanyCodeSaga = createRequestSaga(SEARCH_COMPANY_CODE, api.searchCompany) \r\n//const searchWorkPlaceCodeSaga = createRequestSaga(SEARCH_WORKPLACE_CODE, api.searchWorkplace) \r\n\r\n\r\nfunction* codeSaga(action) {\r\n    try {\r\n        if (action.payload.type === 'companyCode') {\r\n            const { data } = yield axios.get('http://localhost:8282/hr/company/searchCompany');\r\n            yield put(actions.searchCompanyCode(data.gridRowJson));\r\n        } else if (action.payload.type === 'workplaceCode') {\r\n            const { data } = yield axios.get(\r\n                'http://localhost:8282/hr/company/searchWorkplace',\r\n                {\r\n                    params: {\r\n                        companyCode: action.payload.companyCode\r\n                    }\r\n                }\r\n            );\r\n            yield put(actions.searchWorkplaceCode(data.gridRowJson));\r\n        }\r\n    } catch (error) {\r\n        console.log('에러', error.response);\r\n        action.payload.history.put('/error');\r\n    }\r\n}\r\n\r\nexport function* onCodeSearch() {\r\n    yield takeEvery(types.SEARCH_CODE, codeSaga);\r\n}\r\n\r\nexport default function* basecode() {\r\n    yield all([\r\n    //takeEvery(SEARCH_COMPANY_CODE, searchCompanyCodeSaga),\r\n    //takeEvery(SEARCH_WORKPLACE_CODE, searchWorkPlaceCodeSaga),\r\n    call(onCodeSearch)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}