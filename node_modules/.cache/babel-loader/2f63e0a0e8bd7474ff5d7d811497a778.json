{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\common\\\\page\\\\dashboard\\\\blocks.js\";\nimport React, { createContext, useRef, useContext } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport state from \"./store\";\nconst offsetContext = createContext(0);\n\nfunction Block({\n  children,\n  offset,\n  factor,\n  ...props\n}) {\n  const {\n    offset: parentOffset,\n    sectionHeight\n  } = useBlock();\n  const ref = useRef();\n  offset = offset !== undefined ? offset : parentOffset;\n  useFrame(() => {\n    const curY = ref.current.position.y;\n    const curTop = state.top.current;\n    ref.current.position.y = lerp(curY, curTop / state.zoom * factor, 0.1);\n  });\n  return React.createElement(offsetContext.Provider, {\n    value: offset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"group\", Object.assign({}, props, {\n    position: [0, -sectionHeight * offset * factor, 0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"group\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, children)));\n}\n\nfunction useBlock() {\n  const {\n    sections,\n    pages,\n    zoom\n  } = state;\n  const {\n    size,\n    viewport\n  } = useThree();\n  const offset = useContext(offsetContext);\n  const viewportWidth = viewport.width;\n  const viewportHeight = viewport.height;\n  const canvasWidth = viewportWidth / zoom;\n  const canvasHeight = viewportHeight / zoom;\n  const mobile = size.width < 700;\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\n  const offsetFactor = (offset + 1.0) / sections;\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  };\n}\n\nexport { Block, useBlock };","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/common/page/dashboard/blocks.js"],"names":["React","createContext","useRef","useContext","useFrame","useThree","lerp","state","offsetContext","Block","children","offset","factor","props","parentOffset","sectionHeight","useBlock","ref","undefined","curY","current","position","y","curTop","top","zoom","sections","pages","size","viewport","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor"],"mappings":"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","sourcesContent":["import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n"]},"metadata":{},"sourceType":"module"}