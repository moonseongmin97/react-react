{"ast":null,"code":"import { put, takeEvery, delay, all, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport * as types from 'erp/logistic/base/action/LogisticsInfoActionType';\nimport createRequestSaga from 'util/createRequestSaga';\nimport * as api from '../api'; //code\n\nfunction* codeInfo(action) {\n  try {\n    const {\n      data\n    } = yield axios.get('http://localhost:8282/logi/base/searchCodeList', null);\n\n    if (data.errorCode > 0) {\n      yield put({\n        type: types.CODE_LIST,\n        mode: 'search',\n        data\n      });\n    } else {\n      alert(data.errorMsg + '로 인한 구분코드 조회 실패');\n    }\n  } catch (error) {\n    alert(error);\n  }\n}\n\nfunction* addCodeInfo(action) {\n  try {\n    // console.log('action',action)\n    yield put({\n      type: types.CODE_LIST,\n      mode: 'add',\n      codeTo: action.payload.codeTo\n    });\n  } catch (error) {\n    alert(error);\n  }\n}\n\nfunction* updateCodeInfo(action) {\n  try {\n    yield put({\n      type: types.CODE_LIST,\n      mode: 'update',\n      divisionCodeNo: action.payload.divisionCodeNo\n    });\n  } catch (error) {\n    alert(error);\n  }\n}\n\nfunction* delCodeInfo(action) {\n  try {\n    yield put({\n      type: types.CODE_LIST,\n      mode: 'delete',\n      newList: action.payload.newList\n    });\n  } catch (error) {\n    alert(error);\n  }\n}\n\nconst saveCodeInfo = createRequestSaga(types.SAVE_DEAIL_CODE_LIST, api.saveCodeInfo);\nexport function* codeinfo() {\n  yield takeEvery(types.SEARCH_CODE_LIST, codeInfo);\n  yield takeEvery(types.ADD_CODE_LIST, addCodeInfo);\n  yield takeEvery(types.SAVE_CODE_LIST, saveCodeInfo);\n  yield takeEvery(types.UPDATE_CODE_LIST, updateCodeInfo);\n  yield takeEvery(types.DEL_CODE_LIST, delCodeInfo);\n} //detailCode\n\nfunction* addDetailCodeInfo(action) {\n  // console.log(action);\n  try {\n    yield put({\n      type: types.DETAIL_CODE_LIST,\n      mode: 'add',\n      detailCodeTo: action.payload\n    });\n  } catch (error) {\n    alert(error);\n  }\n}\n\nconst saveDetailCodeInfo = createRequestSaga(types.SAVE_DEAIL_CODE_LIST, api.saveDetailCodeInfo);\nexport function* detailcodeinfo() {\n  yield takeEvery(types.ADD_DEAIL_CODE_LIST, addDetailCodeInfo);\n  yield takeEvery(types.SAVE_DEAIL_CODE_LIST, saveDetailCodeInfo);\n} // WAREHOUSE_LIST Saga\n\nconst warehouseInfo = createRequestSaga(types.SEARCH_WAREHOUSE_LIST, api.warehouseInfo);\nconst saveWarehouseInfo = createRequestSaga(types.SAVE_WAREHOUSE_LIST, api.saveWarehouseInfo);\nexport function* warehouseinfo() {\n  yield takeEvery(types.SEARCH_WAREHOUSE_LIST, warehouseInfo);\n  yield takeEvery(types.SAVE_WAREHOUSE_LIST, saveWarehouseInfo);\n}\nexport default function* LogisticsInfoSaga() {\n  yield all([call(codeinfo), call(detailcodeinfo), call(warehouseinfo)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/logistic/base/saga/LogisticsInfoSaga.js"],"names":["put","takeEvery","delay","all","call","axios","types","createRequestSaga","api","codeInfo","action","data","get","errorCode","type","CODE_LIST","mode","alert","errorMsg","error","addCodeInfo","codeTo","payload","updateCodeInfo","divisionCodeNo","delCodeInfo","newList","saveCodeInfo","SAVE_DEAIL_CODE_LIST","codeinfo","SEARCH_CODE_LIST","ADD_CODE_LIST","SAVE_CODE_LIST","UPDATE_CODE_LIST","DEL_CODE_LIST","addDetailCodeInfo","DETAIL_CODE_LIST","detailCodeTo","saveDetailCodeInfo","detailcodeinfo","ADD_DEAIL_CODE_LIST","warehouseInfo","SEARCH_WAREHOUSE_LIST","saveWarehouseInfo","SAVE_WAREHOUSE_LIST","warehouseinfo","LogisticsInfoSaga"],"mappings":"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","sourcesContent":["import { put, takeEvery, delay, all, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport * as types from 'erp/logistic/base/action/LogisticsInfoActionType';\nimport createRequestSaga from 'util/createRequestSaga';\nimport * as api from '../api';\n\n//code\nfunction* codeInfo(action) {\n    try {\n        const { data } = yield axios.get('http://localhost:8282/logi/base/searchCodeList', null);\n        if (data.errorCode > 0) {\n            yield put({ type: types.CODE_LIST, mode: 'search', data });\n        } else {\n            alert(data.errorMsg + '로 인한 구분코드 조회 실패');\n        }\n    } catch (error) {\n        alert(error);\n    }\n}\n\nfunction* addCodeInfo(action) {\n    try {\n        // console.log('action',action)\n        yield put({ type: types.CODE_LIST, mode: 'add', codeTo: action.payload.codeTo });\n    } catch (error) {\n        alert(error);\n    }\n}\n\nfunction* updateCodeInfo(action) {\n    try {\n        yield put({\n            type: types.CODE_LIST,\n            mode: 'update',\n            divisionCodeNo: action.payload.divisionCodeNo\n        });\n    } catch (error) {\n        alert(error);\n    }\n}\n\nfunction* delCodeInfo(action) {\n    try {\n        yield put({ type: types.CODE_LIST, mode: 'delete', newList: action.payload.newList });\n    } catch (error) {\n        alert(error);\n    }\n}\n\nconst saveCodeInfo = createRequestSaga(types.SAVE_DEAIL_CODE_LIST,api.saveCodeInfo);\n\nexport function* codeinfo() {\n    yield takeEvery(types.SEARCH_CODE_LIST, codeInfo);\n    yield takeEvery(types.ADD_CODE_LIST, addCodeInfo);\n    yield takeEvery(types.SAVE_CODE_LIST, saveCodeInfo);\n    yield takeEvery(types.UPDATE_CODE_LIST, updateCodeInfo);\n    yield takeEvery(types.DEL_CODE_LIST, delCodeInfo);\n}\n\n//detailCode\nfunction* addDetailCodeInfo(action) {\n    // console.log(action);\n    try {\n        yield put({ type: types.DETAIL_CODE_LIST, mode: 'add', detailCodeTo: action.payload });\n    } catch (error) {\n        alert(error);\n    }\n}\n\nconst saveDetailCodeInfo = createRequestSaga(types.SAVE_DEAIL_CODE_LIST, api.saveDetailCodeInfo);\n\nexport function* detailcodeinfo() {\n    yield takeEvery(types.ADD_DEAIL_CODE_LIST, addDetailCodeInfo);\n    yield takeEvery(types.SAVE_DEAIL_CODE_LIST, saveDetailCodeInfo);\n}\n\n// WAREHOUSE_LIST Saga\nconst warehouseInfo = createRequestSaga(types.SEARCH_WAREHOUSE_LIST, api.warehouseInfo);\nconst  saveWarehouseInfo = createRequestSaga(types.SAVE_WAREHOUSE_LIST, api.saveWarehouseInfo);\n\n\nexport function* warehouseinfo() {\n    yield takeEvery(types.SEARCH_WAREHOUSE_LIST, warehouseInfo);\n    yield takeEvery(types.SAVE_WAREHOUSE_LIST, saveWarehouseInfo);\n}\n\nexport default function* LogisticsInfoSaga() {\n    yield all([call(codeinfo), call(detailcodeinfo), call(warehouseinfo)]);\n}\n"]},"metadata":{},"sourceType":"module"}