{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\logistic\\\\transport\\\\page\\\\transport.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Typography, TextField } from '@material-ui/core';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommercialDialog from \"./CommercialDialog\";\nimport useStyles from './Theme';\nimport Axios from 'axios'; //최수진\n\nfunction Transport(props) {\n  const dispatch = useDispatch();\n  const theme = useStyles();\n  const [list, setList] = useState([]);\n  const [codeGird, setCodeGrid] = useState();\n  const [nodeid, setNodeId] = useState('');\n  const [openCommercialDialog, setOpenCommercialDialog] = useState(false); //거래처 다이알로그\n\n  const [commercialRow, setCommercialRow] = useState(\"\"); //거래처 다이알로그 상태값\n\n  const [startDate, setStartDate] = useState(); //시작 날짜\n\n  const [endDate, setEndDate] = useState();\n  const column = {\n    columnDefs: [{\n      headerName: '출차상태',\n      field: 'transportStatus'\n    }, {\n      width: '150',\n      headerName: '수주일련번호',\n      field: 'contractNo'\n    }, {\n      headerName: '납기일',\n      field: 'dueDateOfContract'\n    }, {\n      headerName: '차량',\n      field: 'commercialVehicle'\n    }, {\n      headerName: '기사님',\n      field: 'driver'\n    }, {\n      headerName: '거래처 기본 주소',\n      field: 'customerBasicAddress'\n    }, {\n      headerName: '거래처 상세 주소',\n      field: 'customerDetailAddress'\n    }, {\n      headerName: '요청사항',\n      field: 'memo',\n      editable: true\n    }, // editable : 편집가능\n    {\n      headerName: '요청일시',\n      field: 'reportingDate'\n    }]\n  }; // ==============================================그리드 셀 하나 Auto============================\n\n  const onCellClicked = e => {\n    if (e.colDef.field === \"commercialVehicle\" || e.colDef.field === \"driver\") {\n      console.log('차량 셀 클릭' + e.rowIndex);\n      setNodeId(e.rowIndex);\n      setOpenCommercialDialog(true);\n    }\n  };\n\n  const codeApi = params => {\n    setCodeGrid(params.api);\n  }; //=================================================== 차량 다이알로그 CLOSED  =========================================\n\n\n  const handleCommercialDialogClose = value => {\n    console.log('핸들다이어로그닫음');\n    setOpenCommercialDialog(false);\n\n    if (value.data === undefined) {\n      return;\n    } else {\n      console.log(\"선택차량 : \" + JSON.stringify(value.data));\n      setCommercialRow(value.data); //거래처 Row값을 set\n    }\n  }; //---------------------------------조회-----------------------------------\n\n\n  const searchDateClick = () => {\n    console.log('날짜조회버튼클릭');\n    console.log(startDate + 'StartDate');\n    Axios.get('http://localhost:8282/logi/transport/searchTransportAbleList', {\n      params: {\n        startDate: startDate,\n        endDate: endDate\n      }\n    }).then(response => {\n      setList(response.data.gridRowJson);\n      console.log('그리드로우제이선' + JSON.stringify(response.data.gridRowJson));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const saveClick = () => {\n    console.log('저장버튼클릭');\n    console.log(list);\n    console.log('!@!@!@!@!@!@!@' + JSON.stringify(list));\n\n    for (var i = 0; i < list.length; i++) {\n      if (list[i].commercialVehicle === null || list[i].driver === null) {\n        alert('빈칸기입하시오');\n        return;\n      } else if (list[i].status = 'update') {\n        console.log('asios');\n        Axios.post('http://localhost:8282/logi/transport/batchTransportProcess', list[i]).then(response => {\n          console.log('성공1');\n          setList(response.data.gridRowJson);\n          console.log('성공2');\n          alert('완료 되었습니다');\n        }).catch(e => {\n          console.log('실패' + e);\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log('Ddddd', commercialRow);\n    console.log('Ddddd', list);\n\n    if (commercialRow[0] !== undefined) {\n      console.log('commercialRow : ' + JSON.stringify(commercialRow));\n      console.log('list전 : ' + JSON.stringify(list));\n      console.log(nodeid + ' : 어떤인덱스');\n      var newArray = [...list];\n      newArray[nodeid].commercialVehicle = commercialRow[0].commercialVehicle;\n      newArray[nodeid].driver = commercialRow[0].driver;\n      newArray[nodeid].transportStatus = commercialRow[0].transportStatus;\n      newArray[nodeid].status = 'update';\n      console.log('뉴어레이' + JSON.stringify(newArray));\n      setList(newArray);\n      console.log('list후 : ' + JSON.stringify(list));\n      setList(list.filter(list => list.status == 'update'));\n      console.log('list후후후 : ' + JSON.stringify(list));\n    }\n  }, [commercialRow]);\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"\\uCD9C\\uCC28 \\uAD00\\uB9AC\"), React.createElement(CommercialDialog, {\n    open: openCommercialDialog,\n    close: handleCommercialDialogClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(MyGrid, {\n    column: column,\n    title: '배차 관리',\n    list: list,\n    onCellClicked: onCellClicked,\n    rowSelection: \"multiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: theme.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"startDate\",\n    type: \"date\",\n    value: startDate,\n    onChange: e => {\n      setStartDate(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"endDate\",\n    type: \"date\",\n    value: endDate,\n    onChange: e => {\n      setEndDate(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: searchDateClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"\\uB0A9\\uAE30\\uC77C \\uBC30\\uC1A1 \\uAC00\\uB2A5 \\uC5C5\\uBB34 \\uC870\\uD68C\"), \"|\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: saveClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"\\uC77C\\uAD04\\uC800\\uC7A5\")))));\n}\n\nexport default Transport;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/logistic/transport/page/transport.js"],"names":["React","useEffect","useState","Button","Typography","TextField","MyGrid","useDispatch","useSelector","CommercialDialog","useStyles","Axios","Transport","props","dispatch","theme","list","setList","codeGird","setCodeGrid","nodeid","setNodeId","openCommercialDialog","setOpenCommercialDialog","commercialRow","setCommercialRow","startDate","setStartDate","endDate","setEndDate","column","columnDefs","headerName","field","width","editable","onCellClicked","e","colDef","console","log","rowIndex","codeApi","params","api","handleCommercialDialogClose","value","data","undefined","JSON","stringify","searchDateClick","get","then","response","gridRowJson","catch","saveClick","i","length","commercialVehicle","driver","alert","status","post","newArray","transportStatus","filter","margin","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Typography,TextField } from '@material-ui/core';\r\nimport MyGrid from 'util/LogiUtil/MyGrid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CommercialDialog from \"./CommercialDialog\";\r\nimport useStyles from './Theme';\r\nimport Axios from 'axios';\r\n\r\n//최수진\r\nfunction Transport(props) {\r\n    const dispatch = useDispatch();\r\n    const theme = useStyles();\r\n    const [list, setList] = useState([]);\r\n    const [codeGird, setCodeGrid] = useState();\r\n    const [nodeid, setNodeId] = useState('');\r\n    const [openCommercialDialog, setOpenCommercialDialog] = useState(false); //거래처 다이알로그\r\n    const [commercialRow, setCommercialRow] = useState(\"\"); //거래처 다이알로그 상태값\r\n    const [startDate, setStartDate] = useState(); //시작 날짜\r\n    const [endDate, setEndDate] = useState();\r\n\r\n\r\n\r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: '출차상태', field: 'transportStatus' },\r\n            { width: '150', headerName: '수주일련번호', field: 'contractNo' },\r\n            { headerName: '납기일', field: 'dueDateOfContract' },\r\n            { headerName: '차량', field: 'commercialVehicle' },\r\n            { headerName: '기사님', field: 'driver' }, \r\n            { headerName: '거래처 기본 주소', field: 'customerBasicAddress' },\r\n            { headerName: '거래처 상세 주소', field: 'customerDetailAddress' },\r\n            { headerName: '요청사항', field: 'memo', editable: true },  // editable : 편집가능\r\n            { headerName: '요청일시', field: 'reportingDate' },\r\n        ]\r\n    };\r\n\r\n\r\n    // ==============================================그리드 셀 하나 Auto============================\r\n    const onCellClicked = e => {\r\n        if (\r\n        e.colDef.field === \"commercialVehicle\" ||\r\n        e.colDef.field === \"driver\"\r\n        ) {\r\n        console.log('차량 셀 클릭'+e.rowIndex);\r\n        setNodeId(e.rowIndex);\r\n        setOpenCommercialDialog(true);\r\n        } \r\n    };\r\n\r\n    const codeApi = params => {\r\n        setCodeGrid(params.api);\r\n    };\r\n\r\n\r\n    //=================================================== 차량 다이알로그 CLOSED  =========================================\r\n    const handleCommercialDialogClose = value => {\r\n        console.log('핸들다이어로그닫음');\r\n        setOpenCommercialDialog(false);\r\n        if (value.data === undefined) {\r\n            return;\r\n        } else {\r\n            console.log(\"선택차량 : \" + JSON.stringify(value.data));\r\n            setCommercialRow(value.data); //거래처 Row값을 set\r\n        }\r\n    };\r\n    //---------------------------------조회-----------------------------------\r\n    const searchDateClick = () => {\r\n        console.log('날짜조회버튼클릭');\r\n        console.log(startDate + 'StartDate');\r\n        Axios.get('http://localhost:8282/logi/transport/searchTransportAbleList', {\r\n            params: {\r\n                startDate: startDate,\r\n                endDate: endDate\r\n            }\r\n        })\r\n            .then(response => {\r\n                setList(response.data.gridRowJson);\r\n                console.log('그리드로우제이선'+JSON.stringify(response.data.gridRowJson));\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n\r\n    const saveClick = () => {\r\n        console.log('저장버튼클릭');\r\n        console.log(list);\r\n        console.log('!@!@!@!@!@!@!@'+JSON.stringify(list));\r\n        \r\n        for (var i = 0; i < list.length; i++) {\r\n            if (\r\n                list[i].commercialVehicle === null ||\r\n                list[i].driver === null \r\n            ) {\r\n                alert('빈칸기입하시오');\r\n                return;\r\n            }\r\n            else if(list[i].status = 'update'){\r\n                console.log('asios');\r\n                Axios.post('http://localhost:8282/logi/transport/batchTransportProcess', list[i])\r\n                .then(response => {\r\n                    console.log('성공1');\r\n                    setList(response.data.gridRowJson);\r\n                    console.log('성공2');\r\n                    alert('완료 되었습니다');\r\n                })\r\n                .catch(e => {\r\n                    console.log('실패'+e);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('Ddddd', commercialRow);\r\n        console.log('Ddddd', list);\r\n        if (commercialRow[0] !== undefined) {\r\n            console.log('commercialRow : '+JSON.stringify(commercialRow));\r\n            console.log('list전 : '+JSON.stringify(list));\r\n            console.log(nodeid+' : 어떤인덱스');\r\n           var newArray=[...list];\r\n           newArray[nodeid].commercialVehicle = commercialRow[0].commercialVehicle;\r\n           newArray[nodeid].driver = commercialRow[0].driver;\r\n           newArray[nodeid].transportStatus = commercialRow[0].transportStatus;\r\n           newArray[nodeid].status = 'update';\r\n           console.log('뉴어레이'+JSON.stringify(newArray));\r\n           setList(newArray);\r\n           console.log('list후 : '+JSON.stringify(list));\r\n           setList(list.filter(list=>list.status == 'update'));\r\n           console.log('list후후후 : '+JSON.stringify(list));\r\n        }\r\n    }, [commercialRow]);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h3\" align=\"center\">\r\n                출차 관리\r\n            </Typography>      \r\n            <CommercialDialog \r\n                open={openCommercialDialog} \r\n                close={handleCommercialDialogClose} \r\n            />\r\n            <br />\r\n            <MyGrid\r\n                column={column}\r\n                title={'배차 관리'}\r\n                list={list}\r\n                onCellClicked={onCellClicked}\r\n                rowSelection=\"multiple\"\r\n             \r\n            >\r\n                <fieldset>\r\n                    <div className={theme.margin}>\r\n                        <TextField\r\n                            id=\"startDate\"\r\n                            type={\"date\"}\r\n                            value={startDate}\r\n                            onChange={e => {\r\n                                setStartDate(e.target.value);\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"endDate\"\r\n                            type={\"date\"}\r\n                            value={endDate}\r\n                            onChange={e => {\r\n                                setEndDate(e.target.value);\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={searchDateClick}\r\n                        >\r\n                            납기일 배송 가능 업무 조회\r\n                        </Button>\r\n                        |\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={saveClick}>\r\n                            일괄저장\r\n                        </Button>\r\n                    </div>\r\n                </fieldset>\r\n            </MyGrid>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Transport;"]},"metadata":{},"sourceType":"module"}