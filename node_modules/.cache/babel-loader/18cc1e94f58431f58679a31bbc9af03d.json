{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\account\\\\account\\\\page\\\\GeneralAccountLedger\\\\GeneralAccountLedgerGrid.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst GeneralAccountLedgerGrid = props => {\n  const data = useSelector(({\n    AccReducer\n  }) => AccReducer.AccountReducer.generalAccountLedgerList); // const [journalDetailDialogOpen, setJournalDetailDialogOpen] = useState(false);\n  // const [journalNo, setjournalNo] = useState(\"\");\n  // const handleClose = () => {\n  //   setJournalDetailDialogOpen(false);\n  // };\n  // const onCellClicked = id => {\n  //   setJournalDetailDialogOpen(true);\n  //   setjournalNo(id.data.journalNo);\n  // };\n\n  const JournalFoamColumnDefs = [{\n    headerName: \"일자\",\n    field: \"reportingDate\"\n  }, {\n    headerName: \"회계계정\",\n    field: \"accountName\"\n  }, {\n    headerName: \"차변금액\",\n    field: \"leftDebtorPrice\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"대변금액\",\n    field: \"rightCreditsPrice\",\n    valueFormatter: ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"'\n  }, {\n    headerName: \"거래처\",\n    field: \"customerName\"\n  }, {\n    headerName: \"적요\",\n    field: \"expenseReport\"\n  }];\n\n  const onGridSizeChanged = params => {\n    var gridWidth = document.getElementById(\"grid-wrapper\").offsetWidth;\n    var columnsToShow = [];\n    var columnsToHide = [];\n    var totalColsWidth = 0;\n    var allColumns = params.columnApi.getAllColumns();\n\n    for (var i = 0; i < allColumns.length; i++) {\n      var column = allColumns[i];\n      totalColsWidth += column.getMinWidth();\n\n      if (totalColsWidth > gridWidth) {\n        columnsToHide.push(column.colId);\n      } else {\n        columnsToShow.push(column.colId);\n      }\n    }\n\n    params.columnApi.setColumnsVisible(columnsToShow, true);\n    params.columnApi.setColumnsVisible(columnsToHide, false);\n    params.api.sizeColumnsToFit();\n  };\n\n  const {\n    dark\n  } = useThemeSwitcher();\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"grid-wrapper\",\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\",\n    style: {\n      //height: \"60vh\",\n      wieth: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    domLayout: \"autoHeight\",\n    columnDefs: JournalFoamColumnDefs,\n    rowData: data,\n    rowSelection: \"single\" //onCellClicked={onCellClicked}\n    ,\n    onGridReady: params => {\n      props.setGeneralAccountLedgerGrid(params.api);\n      params.api.sizeColumnsToFit(); //params.api.setQuickFilter(props.filterChanged);\n    },\n    getRowStyle: param => ({\n      \"text-align\": \"center\"\n    }),\n    onGridSizeChanged: onGridSizeChanged,\n    onFirstDataRendered: params => params.api.sizeColumnsToFit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n};\n\nexport default GeneralAccountLedgerGrid;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/account/account/page/GeneralAccountLedger/GeneralAccountLedgerGrid.js"],"names":["React","useEffect","useState","useSelector","AgGridReact","useThemeSwitcher","GeneralAccountLedgerGrid","props","data","AccReducer","AccountReducer","generalAccountLedgerList","JournalFoamColumnDefs","headerName","field","valueFormatter","onGridSizeChanged","params","gridWidth","document","getElementById","offsetWidth","columnsToShow","columnsToHide","totalColsWidth","allColumns","columnApi","getAllColumns","i","length","column","getMinWidth","push","colId","setColumnsVisible","api","sizeColumnsToFit","dark","width","wieth","setGeneralAccountLedgerGrid","param"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\nconst GeneralAccountLedgerGrid = props => {\n  const data = useSelector(\n    ({ AccReducer }) => AccReducer.AccountReducer.generalAccountLedgerList,\n  );\n\n  // const [journalDetailDialogOpen, setJournalDetailDialogOpen] = useState(false);\n  // const [journalNo, setjournalNo] = useState(\"\");\n\n  // const handleClose = () => {\n  //   setJournalDetailDialogOpen(false);\n  // };\n\n  // const onCellClicked = id => {\n  //   setJournalDetailDialogOpen(true);\n  //   setjournalNo(id.data.journalNo);\n  // };\n\n  const JournalFoamColumnDefs = [\n    { headerName: \"일자\", field: \"reportingDate\" },\n    { headerName: \"회계계정\", field: \"accountName\" },\n    {\n      headerName: \"차변금액\",\n      field: \"leftDebtorPrice\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    {\n      headerName: \"대변금액\",\n      field: \"rightCreditsPrice\",\n      valueFormatter:\n        ' Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")+\" 원\"',\n    },\n    { headerName: \"거래처\", field: \"customerName\" },\n    { headerName: \"적요\", field: \"expenseReport\" },\n  ];\n\n  const onGridSizeChanged = params => {\n    var gridWidth = document.getElementById(\"grid-wrapper\").offsetWidth;\n    var columnsToShow = [];\n    var columnsToHide = [];\n    var totalColsWidth = 0;\n    var allColumns = params.columnApi.getAllColumns();\n    for (var i = 0; i < allColumns.length; i++) {\n      var column = allColumns[i];\n      totalColsWidth += column.getMinWidth();\n      if (totalColsWidth > gridWidth) {\n        columnsToHide.push(column.colId);\n      } else {\n        columnsToShow.push(column.colId);\n      }\n    }\n    params.columnApi.setColumnsVisible(columnsToShow, true);\n    params.columnApi.setColumnsVisible(columnsToHide, false);\n    params.api.sizeColumnsToFit();\n  };\n\n  const { dark } = useThemeSwitcher();\n\n  return (\n    <>\n      {/* <GeneralAccountLedgerDialog\n        journalNo={journalNo}\n        open={journalDetailDialogOpen}\n        onClose={handleClose}\n      /> */}\n      <div id=\"grid-wrapper\" style={{ width: \"100%\" }}>\n        <div\n          className={dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\"}\n          style={{\n            //height: \"60vh\",\n            wieth: \"100%\",\n          }}\n        >\n          <AgGridReact\n            domLayout={\"autoHeight\"}\n            columnDefs={JournalFoamColumnDefs}\n            rowData={data}\n            rowSelection=\"single\"\n            //onCellClicked={onCellClicked}\n            onGridReady={params => {\n              props.setGeneralAccountLedgerGrid(params.api);\n              params.api.sizeColumnsToFit();\n              //params.api.setQuickFilter(props.filterChanged);\n            }}\n            getRowStyle={param => ({ \"text-align\": \"center\" })}\n            onGridSizeChanged={onGridSizeChanged}\n            onFirstDataRendered={params => params.api.sizeColumnsToFit()}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GeneralAccountLedgerGrid;\n"]},"metadata":{},"sourceType":"module"}