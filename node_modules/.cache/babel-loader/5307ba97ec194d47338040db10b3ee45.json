{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\attendance\\\\page\\\\CorporateEducation\\\\ClasslistBriefGrid.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport \"./CorporateEducation.css\";\n\nconst ClasslistBrief = props => {\n  const initialValue = {\n    classCode: \"\",\n    className: \"\"\n  };\n  const [formDatas, setFormDatas] = useState(initialValue);\n  console.log(\"ClasslistBrief formDatas\", { ...formDatas\n  });\n  props.setFormData(props.formData, { ...formDatas\n  });\n  sessionStorage.setItem(\"classinfo-className\", formDatas.className);\n  sessionStorage.setItem(\"classinfo-classCode\", formDatas.classCode);\n\n  const getAttendeeList = classCode => {\n    props.attendeeListRequest({\n      classCode: classCode\n    });\n  };\n\n  const onChange = e => {\n    const {\n      value,\n      id\n    } = e.target; //console.log(\"onchange\",value,id)\n    //setFormDatas({ ...formDatas, [id]: value })\n  };\n\n  const onSelectionChanged = event => {\n    //console.log(event.api.getSelectedRows())  // 선택한 row의 전체데이터를 [{컬럼값,컬럼값...}] 형태로 리턴 \n    var selectedClassCode = event.api.getSelectedRows()[0].classCode;\n    var selectedClassName = event.api.getSelectedRows()[0].className;\n    getAttendeeList(selectedClassCode);\n    setFormDatas({\n      classCode: selectedClassCode,\n      className: selectedClassName\n    });\n    props.setFormData({ ...props.formData,\n      ...formDatas\n    });\n  };\n\n  const defaultColDef = {\n    sortable: true,\n    flex: 1,\n    cellClass: \"grid-cell-centered\"\n  };\n  const columnDefs = [{\n    headerName: \"교육코드\",\n    field: \"classCode\",\n    editable: false,\n    width: '70px'\n  }, {\n    headerName: \"교육명\",\n    field: \"className\",\n    editable: true,\n    width: '200px'\n  }];\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      height: 300,\n      width: 250\n    },\n    className: \"ag-theme-balham\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    defaultColDef: defaultColDef,\n    columnDefs: columnDefs,\n    rowData: props.data,\n    rowSelection: \"single\",\n    onSelectionChanged: onSelectionChanged,\n    handleFormSubmit: props.handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nexport default ClasslistBrief;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/attendance/page/CorporateEducation/ClasslistBriefGrid.js"],"names":["React","useState","AgGridReact","ClasslistBrief","props","initialValue","classCode","className","formDatas","setFormDatas","console","log","setFormData","formData","sessionStorage","setItem","getAttendeeList","attendeeListRequest","onChange","e","value","id","target","onSelectionChanged","event","selectedClassCode","api","getSelectedRows","selectedClassName","defaultColDef","sortable","flex","cellClass","columnDefs","headerName","field","editable","width","height","data","handleFormSubmit"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { AgGridReact} from 'ag-grid-react';\r\nimport \"./CorporateEducation.css\";\r\n\r\nconst ClasslistBrief =(props)=>{\r\n  const initialValue = {\r\n    classCode: \"\",\r\n    className: \"\",\r\n  }\r\n\r\n  const [formDatas, setFormDatas] = useState(initialValue);\r\n  console.log(\"ClasslistBrief formDatas\",{...formDatas})\r\n  props.setFormData(props.formData,{...formDatas})\r\n  \r\n  sessionStorage.setItem(\"classinfo-className\", formDatas.className);\r\n  sessionStorage.setItem(\"classinfo-classCode\", formDatas.classCode);\r\n\r\n  const getAttendeeList = (classCode) => {\r\n    props.attendeeListRequest({\r\n      classCode:classCode,\r\n    });\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    const { value, id } = e.target\r\n    //console.log(\"onchange\",value,id)\r\n    //setFormDatas({ ...formDatas, [id]: value })\r\n  }\r\n\r\n    const onSelectionChanged=(event)=>{\r\n      //console.log(event.api.getSelectedRows())  // 선택한 row의 전체데이터를 [{컬럼값,컬럼값...}] 형태로 리턴 \r\n      var selectedClassCode=event.api.getSelectedRows()[0].classCode\r\n      var selectedClassName=event.api.getSelectedRows()[0].className\r\n      getAttendeeList(selectedClassCode)\r\n      setFormDatas({classCode:selectedClassCode, className:selectedClassName,})\r\n      props.setFormData({...props.formData, ...formDatas})\r\n    }\r\n    \r\n    const defaultColDef = { \r\n      sortable: true,\r\n      flex: 1,\r\n      cellClass: \"grid-cell-centered\",\r\n    };\r\n\r\n    const columnDefs = [\r\n      {\r\n          headerName: \"교육코드\",\r\n          field: \"classCode\",\r\n          editable: false,\r\n          width:'70px',\r\n        },\r\n        {\r\n          headerName: \"교육명\",\r\n          field: \"className\",\r\n          editable: true,\r\n          width:'200px'\r\n        },\r\n    ];\r\n  \r\n    return(\r\n    <>\r\n        <div style={{height: 300, width: 250}} className={\"ag-theme-balham\"}>\r\n          <AgGridReact\r\n            defaultColDef={defaultColDef}\r\n            columnDefs={columnDefs}\r\n            rowData={props.data}\r\n            rowSelection=\"single\"\r\n            onSelectionChanged={onSelectionChanged}\r\n            handleFormSubmit={props.handleFormSubmit}\r\n          />\r\n       </div>\r\n       </>\r\n    )\r\n  }\r\n\r\nexport default ClasslistBrief;"]},"metadata":{},"sourceType":"module"}