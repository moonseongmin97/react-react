{"ast":null,"code":"import moment from \"moment\";\nexport const formatNumber = number => {\n  // this puts commas into the number eg 1000 goes to 1,000,\n  // i pulled this from stack overflow, i have no idea how it works\n  let num;\n\n  if (number.value === undefined || number.value === null) {\n    num = number;\n  } else {\n    num = number.value;\n  }\n\n  return Math.floor(num).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\nexport const thisYear = () => {\n  const thisYear = new Date().getFullYear();\n  const beforeYear = new Date().getFullYear() - 1;\n  let months = [];\n\n  for (var j = beforeYear; j <= thisYear; j++) {\n    if (j < thisYear) {\n      for (var i = 1; i < 13; i++) {\n        months.push({\n          value: beforeYear + \"-\" + i,\n          key: beforeYear + \"년 \" + i + \"월\"\n        });\n      }\n    }\n\n    if (j === thisYear) {\n      for (var i = 1; i < 13; i++) {\n        months.push({\n          value: thisYear + \"-\" + i,\n          key: thisYear + \"년 \" + i + \"월\"\n        });\n      }\n    }\n  }\n\n  return months;\n};\nexport const today = moment(new Date()).format(\"yyyy-MM-DD\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/hr/util/lib.js"],"names":["moment","formatNumber","number","num","value","undefined","Math","floor","toString","replace","thisYear","Date","getFullYear","beforeYear","months","j","i","push","key","today","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY;AACpC;AACA;AACA,MAAIC,GAAJ;;AACA,MAAGD,MAAM,CAACE,KAAP,KAAiBC,SAAjB,IAA8BH,MAAM,CAACE,KAAP,KAAiB,IAAlD,EAAuD;AACnDD,IAAAA,GAAG,GAAGD,MAAN;AACH,GAFD,MAEK;AACDC,IAAAA,GAAG,GAAGD,MAAM,CAACE,KAAb;AACH;;AACD,SAAQE,IAAI,CAACC,KAAL,CAAWJ,GAAX,EAAgBK,QAAhB,GAA2BC,OAA3B,CAAmC,yBAAnC,EAA8D,KAA9D,CAAR;AACH,CAVM;AAWP,OAAO,MAAMC,QAAQ,GAAE,MAAM;AAC3B,QAAMA,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAjB;AACA,QAAMC,UAAU,GAAC,IAAIF,IAAJ,GAAWC,WAAX,KAAyB,CAA1C;AACE,MAAIE,MAAM,GAAG,EAAb;;AACA,OAAI,IAAIC,CAAC,GAACF,UAAV,EAAsBE,CAAC,IAAEL,QAAzB,EAAmCK,CAAC,EAApC,EAAuC;AACrC,QAAGA,CAAC,GAACL,QAAL,EAAc;AACV,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,QAAAA,MAAM,CAACG,IAAP,CAAY;AACTb,UAAAA,KAAK,EAAES,UAAU,GAAG,GAAb,GAAmBG,CADjB;AAETE,UAAAA,GAAG,EAAEL,UAAU,GAAG,IAAb,GAAoBG,CAApB,GAAwB;AAFpB,SAAZ;AAIF;AACH;;AACD,QAAGD,CAAC,KAAGL,QAAP,EAAgB;AACZ,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,QAAAA,MAAM,CAACG,IAAP,CAAY;AACTb,UAAAA,KAAK,EAAEM,QAAQ,GAAG,GAAX,GAAiBM,CADf;AAETE,UAAAA,GAAG,EAAER,QAAQ,GAAG,IAAX,GAAkBM,CAAlB,GAAsB;AAFlB,SAAZ;AAIF;AACH;AACH;;AAGA,SAAOF,MAAP;AACH,CAzBM;AA2BP,OAAO,MAAMK,KAAK,GAAGnB,MAAM,CAAC,IAAIW,IAAJ,EAAD,CAAN,CAAmBS,MAAnB,CAA0B,YAA1B,CAAd","sourcesContent":["import moment from \"moment\";\nexport const formatNumber = (number) => {\n    // this puts commas into the number eg 1000 goes to 1,000,\n    // i pulled this from stack overflow, i have no idea how it works\n    let num;\n    if(number.value === undefined || number.value === null){\n        num = number;\n    }else{\n        num = number.value;\n    }\n    return  Math.floor(num).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n}\nexport const thisYear =() => {\n  const thisYear = new Date().getFullYear();\n  const beforeYear=new Date().getFullYear()-1;\n    let months = [];\n    for(var j=beforeYear; j<=thisYear; j++){\n      if(j<thisYear){\n          for (var i = 1; i < 13; i++) {\n            months.push({\n               value: beforeYear + \"-\" + i,\n               key: beforeYear + \"년 \" + i + \"월\",\n            });\n         }\n      }\n      if(j===thisYear){\n          for (var i = 1; i < 13; i++) {\n            months.push({\n               value: thisYear + \"-\" + i,\n               key: thisYear + \"년 \" + i + \"월\",\n            });\n         }\n      }    \n   }\n    \n\n    return months\n}\n\nexport const today = moment(new Date()).format(\"yyyy-MM-DD\");"]},"metadata":{},"sourceType":"module"}