{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\outsourc\\\\page\\\\Forward\\\\ForwardOrderDialog.js\";\nimport { Button, NativeSelect } from '@material-ui/core';\nimport Axios from 'axios';\nimport { checkPropTypes } from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Swal from 'sweetalert2';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nfunction WorkOrderDialog(props) {\n  const [list, setList] = useState([]);\n  const [workpalce, setWorkplace] = useState([]);\n  const [divisionCode, setDivisionCode] = useState([]);\n  const [workPlaceCode, setWorkPlaceCode] = useState();\n  const [productionProcessCode, setProductionProcessCode] = useState();\n  const column = {\n    columnDefs: [{\n      headerName: '소요량취합번호',\n      field: 'mrpGatheringNo'\n    }, {\n      headerName: '품목분류',\n      field: 'itemClassification'\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode'\n    }, {\n      headerName: '품목명',\n      field: 'itemName'\n    }, {\n      headerName: '단위',\n      field: 'unitOfMrp'\n    }, {\n      headerName: '투입예정재고량',\n      field: 'inputAmount'\n    }, {\n      headerName: '재고소요/제품제작수량',\n      field: 'requiredAmount'\n    }, {\n      headerName: '재고량(재고소요이후)',\n      field: 'stockAfterWork'\n    }, {\n      headerName: '작업지시기한',\n      field: 'orderDate'\n    }, {\n      headerName: '작업완료기한',\n      field: 'requiredDate'\n    }]\n  };\n  const forwardRegist = useCallback(params => {\n    let bool = list.map(el => el.stockAfterWork).includes('재고부족');\n\n    if (bool) {\n      props.close();\n      return Swal.fire({\n        icon: 'error',\n        title: '재고부족',\n        text: '재고를 확인하세요.'\n      });\n    }\n\n    var result = window.confirm('현재 모의 전개된 결과를 작업하시겠습니까?');\n\n    if (result) {\n      Axios.get('http://localhost:8282/logi/outsourc/updateStock', {\n        params: {\n          itemCode: props.data.data.itemCode,\n          mrpGatheringNo: props.data.data.mrpGatheringNo,\n          id: props.id,\n          seq: props.seq\n        }\n      }).then(response => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Wow...',\n          text: 'Something went success!'\n        });\n      }).catch(e => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        });\n      });\n      props.setList(null);\n      props.close();\n    }\n  }, [list, props]);\n  useEffect(() => {\n    console.log(\"id, seq\");\n    console.log(props.id);\n    console.log(props.seq);\n    Axios.get('http://localhost:8282/logi/outsourc/showReleaseDialog', {\n      params: {\n        mrpGatheringNo: props.data.data.mrpGatheringNo,\n        id: props.id,\n        seq: props.seq\n      }\n    }).then(response => {\n      setList(response.data.result);\n    }).catch(e => {\n      Swal.fire('오류', e, 'error');\n    }); //사업장\n\n    Axios.get('http://localhost:8282/hr/basicInfo/searchWorkplace', {\n      params: {\n        companyCode: 'COM-01'\n      }\n    }).then(response => {\n      setWorkplace(response.data.gridRowJson);\n      setWorkPlaceCode(response.data.gridRowJson[0].workplaceCode);\n    }).catch(e => {\n      Swal.fire('오류', e, 'error');\n    }); //생산공정코드\n\n    Axios.get('http://localhost:8282/logi/base/codeList', {\n      params: {\n        divisionCode: 'PP'\n      }\n    }).then(response => {\n      setDivisionCode(response.data.detailCodeList);\n      setProductionProcessCode(response.data.detailCodeList[0].detailCode);\n    }).catch(e => {\n      Swal.fire('오류', e, 'error');\n    });\n  }, []);\n  return React.createElement(MyGrid, {\n    column: column,\n    title: '작업지시 시뮬레이션',\n    list: list,\n    rowSelection: \"single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    onChange: e => setWorkPlaceCode(e.target.value),\n    inputProps: {\n      name: 'searchSelect',\n      id: 'age-native-label-placeholder'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, workpalce.map((value, inedx) => {\n    return React.createElement(\"option\", {\n      value: value.workplaceCode,\n      key: inedx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, value.workplaceName);\n  })), React.createElement(NativeSelect, {\n    onChange: e => {\n      setProductionProcessCode(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, divisionCode.map((value, inedx) => {\n    if (value.codeUseCheck !== 'N') return React.createElement(\"option\", {\n      value: value.detailCode,\n      key: inedx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, value.detailCodeName);\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: forwardRegist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uBAA8\\uC758\\uC804\\uAC1C\\uB41C \\uACB0\\uACFC \\uC791\\uC5C5\\uC9C0\\uC2DC\"));\n}\n\nexport default WorkOrderDialog;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/outsourc/page/Forward/ForwardOrderDialog.js"],"names":["Button","NativeSelect","Axios","checkPropTypes","React","useEffect","useState","useCallback","Swal","MyGrid","WorkOrderDialog","props","list","setList","workpalce","setWorkplace","divisionCode","setDivisionCode","workPlaceCode","setWorkPlaceCode","productionProcessCode","setProductionProcessCode","column","columnDefs","headerName","field","forwardRegist","params","bool","map","el","stockAfterWork","includes","close","fire","icon","title","text","result","window","confirm","get","itemCode","data","mrpGatheringNo","id","seq","then","response","catch","e","console","log","companyCode","gridRowJson","workplaceCode","detailCodeList","detailCode","target","value","name","inedx","workplaceName","codeUseCheck","detailCodeName"],"mappings":"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","sourcesContent":["import { Button, NativeSelect } from '@material-ui/core';\nimport Axios from 'axios';\nimport { checkPropTypes } from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Swal from 'sweetalert2';\nimport MyGrid from 'util/LogiUtil/MyGrid';\n\nfunction WorkOrderDialog(props) {\n    const [list, setList] = useState([]);\n    const [workpalce, setWorkplace] = useState([]);\n    const [divisionCode, setDivisionCode] = useState([]);\n    const [workPlaceCode, setWorkPlaceCode] = useState();\n    const [productionProcessCode, setProductionProcessCode] = useState();\n\n\n   \n    const column = {\n        columnDefs: [\n            { headerName: '소요량취합번호', field: 'mrpGatheringNo' },\n            { headerName: '품목분류', field: 'itemClassification' },\n            { headerName: '품목코드', field: 'itemCode' },\n            { headerName: '품목명', field: 'itemName' },\n            { headerName: '단위', field: 'unitOfMrp' },\n            { headerName: '투입예정재고량', field: 'inputAmount' },\n            { headerName: '재고소요/제품제작수량', field: 'requiredAmount' },\n            { headerName: '재고량(재고소요이후)', field: 'stockAfterWork' },\n            { headerName: '작업지시기한', field: 'orderDate' },\n            { headerName: '작업완료기한', field: 'requiredDate' }\n        ]\n    };\n    const forwardRegist = useCallback(params => {\n\n        let bool = list.map(el => el.stockAfterWork).includes('재고부족');\n        if(bool){\n            props.close();\n            return Swal.fire({\n                icon: 'error',\n                title: '재고부족',\n                text: '재고를 확인하세요.'\n            });\n        }\n        var result = window.confirm('현재 모의 전개된 결과를 작업하시겠습니까?');\n        if (result) {\n            Axios.get('http://localhost:8282/logi/outsourc/updateStock', {\n                params: {\n                    itemCode: props.data.data.itemCode,\n                    mrpGatheringNo: props.data.data.mrpGatheringNo,\n                    id: props.id,\n                    seq: props.seq\n                }\n            })\n                .then(response => {\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Wow...',\n                        text: 'Something went success!'\n                    });\n                })\n                .catch(e => {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: 'Something went wrong!'\n                    });\n                });\n                props.setList(null);\n            props.close();\n        }\n    },[list, props]);\n\n    useEffect(() => {\n\n        console.log(\"id, seq\");\n\n        console.log(props.id);\n        console.log(props.seq);\n\n\n        Axios.get('http://localhost:8282/logi/outsourc/showReleaseDialog', {\n            params: {\n                mrpGatheringNo: props.data.data.mrpGatheringNo,\n                id: props.id,\n                seq: props.seq\n            }\n        })\n            .then(response => {\n                setList(response.data.result);\n            })\n            .catch(e => {\n                Swal.fire('오류', e, 'error');\n            });\n\n        //사업장\n        Axios.get('http://localhost:8282/hr/basicInfo/searchWorkplace', {\n            params: {\n                companyCode: 'COM-01'\n            }\n        })\n            .then(response => {\n                setWorkplace(response.data.gridRowJson);\n                setWorkPlaceCode(response.data.gridRowJson[0].workplaceCode);\n            })\n            .catch(e => {\n                Swal.fire('오류', e, 'error');\n            });\n\n        //생산공정코드\n        Axios.get('http://localhost:8282/logi/base/codeList', {\n            params: {\n                divisionCode: 'PP'\n            }\n        })\n            .then(response => {\n                setDivisionCode(response.data.detailCodeList);\n                setProductionProcessCode(response.data.detailCodeList[0].detailCode);\n            })\n            .catch(e => {\n                Swal.fire('오류', e, 'error');\n            });\n    \n           \n        }, []);\n\n\n\n\n    return (\n        <MyGrid column={column} title={'작업지시 시뮬레이션'} list={list} rowSelection=\"single\">\n            <NativeSelect\n                onChange={e => setWorkPlaceCode(e.target.value)}\n                inputProps={{\n                    name: 'searchSelect',\n                    id: 'age-native-label-placeholder'\n                }}\n            >\n                {workpalce.map((value, inedx) => {\n                    return (\n                        <option value={value.workplaceCode} key={inedx}>\n                            {value.workplaceName}\n                        </option>\n                    );\n                })}\n            </NativeSelect>\n            <NativeSelect\n                onChange={e => {\n                    setProductionProcessCode(e.target.value);\n                }}\n            >\n                {divisionCode.map((value, inedx) => {\n                    if (value.codeUseCheck !== 'N')\n                        return (\n                            <option value={value.detailCode} key={inedx}>\n                                {value.detailCodeName}\n                            </option>\n                        );\n                })}\n            </NativeSelect>\n            <Button variant=\"contained\" color=\"secondary\" onClick={forwardRegist}>\n                현재 모의전개된 결과 작업지시\n            </Button>\n        </MyGrid>\n    );\n}\n\nexport default WorkOrderDialog;"]},"metadata":{},"sourceType":"module"}