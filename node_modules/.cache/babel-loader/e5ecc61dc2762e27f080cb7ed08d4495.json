{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\production\\\\page\\\\MPS\\\\MpsContainer.js\";\n//2020-12-04 64기 정준혁\nimport React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport contractListColumn from './contractListColumn';\nimport { searchContractDetailInMpsAvailable, convertContractDetailToMps } from './mpsAxios';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport { today } from 'erp/hr/util/lib';\nimport Swal from 'sweetalert2';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport MpsDialog from './MpsDialog';\n\nconst MpsContainer = () => {\n  const [contractList, setContractList] = useState([]);\n  const [contractGridApi, setcontractGridApi] = useState();\n  const [calendarDate, setCalendarDate] = useState({\n    startDate: today,\n    endDate: today\n  });\n  const [mpsDialog, setMpsDialog] = useState(false);\n\n  const onChangeDate = e => {\n    let nextCalendarDate = { ...calendarDate\n    };\n    nextCalendarDate[e.target.id] = e.target.value;\n    setCalendarDate(nextCalendarDate);\n  };\n\n  const onClickSearchContract = useCallback(() => {\n    searchContractDetailInMpsAvailable(setContractList, calendarDate);\n  }, [calendarDate]);\n\n  const orderGirdApi = params => {\n    setcontractGridApi(params.api);\n  };\n\n  const onClickMpsInsert = () => {\n    let selectNodes = contractGridApi.getSelectedNodes();\n\n    if (selectNodes.length === 0) {\n      return Swal.fire({\n        icon: 'error',\n        title: '조회부터하셈'\n      });\n    }\n\n    let row = selectNodes[0].data;\n\n    if (row.mpsPlanDate === null || row.scheduledEndDate === null || row.mpsPlanDate === '' || row.scheduledEndDate === '') {\n      return Swal.fire({\n        icon: 'error',\n        title: '계획일자,출하예정일 \\r\\n 값을 입력해주세요'\n      });\n    }\n\n    let newRow = { ...row,\n      planClassification: '수주상세'\n    };\n    console.log(\"newRow\");\n    console.log(newRow);\n    console.log(selectNodes);\n    convertContractDetailToMps(newRow);\n    let selectRows = contractGridApi.getSelectedRows();\n    contractGridApi.updateRowData({\n      remove: selectRows\n    });\n  };\n\n  const onClickSearchMps = () => {\n    setMpsDialog(true);\n  };\n\n  const mpsClose = () => {\n    setMpsDialog(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MyGrid, {\n    column: contractListColumn,\n    title: 'MPS 등록',\n    list: contractList,\n    onCellClicked: undefined,\n    rowSelection: \"single\",\n    api: orderGirdApi,\n    components: {\n      datePicker: getDatePicker()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClickMpsInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"MPS \\uB4F1\\uB85D\")), React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClickSearchContract,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"MPS\\uB4F1\\uB85D \\uAC00\\uB2A5 \\uC870\\uD68C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: onClickSearchMps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"MPS \\uC870\\uD68C\")), React.createElement(MyDialog, {\n    open: mpsDialog,\n    close: mpsClose,\n    maxWidth: '150%',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(MpsDialog, {\n    calendarDate: calendarDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))));\n};\n\nexport default MpsContainer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/production/page/MPS/MpsContainer.js"],"names":["React","useState","useCallback","MyCalendar","MyGrid","Button","contractListColumn","searchContractDetailInMpsAvailable","convertContractDetailToMps","getDatePicker","today","Swal","MyDialog","MpsDialog","MpsContainer","contractList","setContractList","contractGridApi","setcontractGridApi","calendarDate","setCalendarDate","startDate","endDate","mpsDialog","setMpsDialog","onChangeDate","e","nextCalendarDate","target","id","value","onClickSearchContract","orderGirdApi","params","api","onClickMpsInsert","selectNodes","getSelectedNodes","length","fire","icon","title","row","data","mpsPlanDate","scheduledEndDate","newRow","planClassification","console","log","selectRows","getSelectedRows","updateRowData","remove","onClickSearchMps","mpsClose","undefined","datePicker","float","marginRight","marginTop"],"mappings":"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","sourcesContent":["//2020-12-04 64기 정준혁\nimport React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport { Button } from '@material-ui/core';\nimport contractListColumn from './contractListColumn';\nimport { searchContractDetailInMpsAvailable, convertContractDetailToMps } from './mpsAxios';\nimport { getDatePicker } from 'erp/hr/util/datePicker';\nimport { today } from 'erp/hr/util/lib';\nimport Swal from 'sweetalert2';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport MpsDialog from './MpsDialog';\nconst MpsContainer = () => {\n    const [contractList, setContractList] = useState([]);\n    const [contractGridApi, setcontractGridApi] = useState();\n    const [calendarDate, setCalendarDate] = useState({\n        startDate: today,\n        endDate: today\n    });\n    const [mpsDialog, setMpsDialog] = useState(false);\n    const onChangeDate = e => {\n        let nextCalendarDate = { ...calendarDate };\n        nextCalendarDate[e.target.id] = e.target.value;\n        setCalendarDate(nextCalendarDate);\n    };\n\n    const onClickSearchContract = useCallback(() => {\n        searchContractDetailInMpsAvailable(setContractList, calendarDate);\n    }, [calendarDate]);\n\n    const orderGirdApi = params => {\n        setcontractGridApi(params.api);\n    };\n\n    const onClickMpsInsert = () => {\n        let selectNodes = contractGridApi.getSelectedNodes();\n        if (selectNodes.length === 0) {\n            return Swal.fire({\n                icon: 'error',\n                title: '조회부터하셈'\n            });\n        }\n        let row = selectNodes[0].data;\n        if (\n            row.mpsPlanDate === null ||\n            row.scheduledEndDate === null ||\n            row.mpsPlanDate === '' ||\n            row.scheduledEndDate === ''\n        ) {\n            return Swal.fire({\n                icon: 'error',\n                title: '계획일자,출하예정일 \\r\\n 값을 입력해주세요'\n            });\n        }\n\n        let newRow = {...row, planClassification : '수주상세'};\n\n        console.log(\"newRow\");\n        console.log(newRow);\n        console.log(selectNodes);\n        convertContractDetailToMps(newRow);\n        let selectRows = contractGridApi.getSelectedRows();\n        contractGridApi.updateRowData({remove:selectRows});\n    };\n\n    const onClickSearchMps = () => {\n        setMpsDialog(true);\n    };\n\n    const mpsClose = () => {\n        setMpsDialog(false);\n    };\n    return (\n        <>\n            <MyGrid\n                column={contractListColumn}\n                title={'MPS 등록'}\n                list={contractList}\n                onCellClicked={undefined}\n                rowSelection=\"single\"\n                api={orderGirdApi}\n                components={{ datePicker: getDatePicker() }}\n            >\n                <div style={{ float: 'left' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ marginRight: '1vh', marginTop: '1vh' }}\n                        onClick={onClickMpsInsert}\n                    >\n                        MPS 등록\n                    </Button>\n                </div>\n                <MyCalendar onChangeDate={onChangeDate} />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={onClickSearchContract}\n                >\n                    MPS등록 가능 조회\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\n                    onClick={onClickSearchMps}\n                >\n                    MPS 조회\n                </Button>\n            </MyGrid>\n\n            <MyDialog open={mpsDialog} close={mpsClose} maxWidth={'150%'}>\n                <div>\n                    <MpsDialog calendarDate={calendarDate} />\n                </div>\n            </MyDialog>\n        </>\n    );\n};\n\nexport default MpsContainer;\n"]},"metadata":{},"sourceType":"module"}