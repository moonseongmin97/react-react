{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\sales\\\\page\\\\Delivery\\\\DeliverySearch.js\";\nimport { Button, Checkbox, FormControlLabel, FormGroup, makeStyles, TextField } from '@material-ui/core';\nimport React, { useState, useCallback } from 'react';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport moment from 'moment';\nimport CustomerSearchDialog from '../Contract/CustomerSearchDialog';\nimport Axios from 'axios';\nimport DeliveryDetailGrid from './DeliveryDetailGrid';\nimport Swal from \"sweetalert2\";\n\nfunction DeliverySearch(props) {\n  const [list, setList] = useState([]);\n  const [detailList, setDetailList] = useState([]);\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(today);\n  const [size, setSize] = useState('50vh');\n  const [customerSearch, setCustomerSearch] = useState(false);\n  const [dateSearch, setDateSearch] = useState(true);\n  const [searchOpenDialog, setSearchOpenDialog] = useState(false);\n  const [selDelivery, setSelDelivery] = useState();\n  const [contractDetailNo, setContractDetailNo] = useState();\n  const [deliveryGrid, setDeliveryGrid] = useState();\n  const [deliveryDetailGrid, setDeliveryDetailGrid] = useState(); //다이알로그에서 가져온 값\n\n  const [selCustomer, setSelCutomer] = useState({\n    detailCodeName: '',\n    detailCode: ''\n  });\n  const column = {\n    columnDefs: [{\n      headerName: '수주번호',\n      field: 'contractNo'\n    }, {\n      headerName: '견적번호',\n      field: 'estimateNo'\n    }, {\n      headerName: '유형',\n      field: 'contractTypeName'\n    }, {\n      headerName: '거래처코드',\n      field: 'customerCode',\n      hide: true\n    }, {\n      headerName: '거래처명',\n      field: 'customerName'\n    }, {\n      headerName: '견적일자',\n      field: 'contractDate',\n      hide: true\n    }, {\n      headerName: '수주일자',\n      field: 'contractDate'\n    }, {\n      headerName: '수주요청자',\n      field: 'contractRequester'\n    }, {\n      headerName: '수주담당자명',\n      field: 'empNameInCharge'\n    }, {\n      headerName: '비고',\n      field: 'description'\n    }]\n  };\n\n  const checkBoxChange = e => {\n    if (e.target.name === 'customerSearch') {\n      setCustomerSearch(true);\n      setDateSearch(false);\n    }\n\n    if (e.target.name === 'dateSearch') {\n      setCustomerSearch(false);\n      setDateSearch(true);\n    }\n  };\n\n  const onCellClicked = param => {\n    //console.log(param.data.contractDetailTOList)\n    setDetailList(param.data.contractDetailTOList);\n    setSelDelivery('select');\n    setSize('30vh');\n    deliveryGrid.sizeColumnsToFit();\n\n    if (deliveryDetailGrid) {\n      deliveryDetailGrid.setRowData(param.data.contractDetailTOList);\n    }\n  };\n\n  const onChangeDate = e => {\n    //console.log(e);\n    if (e.target.id === 'startDate') {\n      setStartDate(e.target.value);\n    } else {\n      setEndDate(e.target.value);\n    }\n  };\n\n  const onDialogCellClicked = params => {\n    setSelCutomer({\n      detailCodeName: params.data.detailCodeName,\n      detailCode: params.data.detailCode\n    });\n  };\n\n  const customerSearchClick = () => {\n    setSearchOpenDialog(true);\n  };\n\n  const close = () => {\n    setSearchOpenDialog(false);\n  };\n\n  const detailClose = () => {\n    setSize('50vh');\n    setSelDelivery();\n    deliveryGrid.sizeColumnsToFit();\n  };\n\n  const updateDetail = contractDetailNo => {\n    setContractDetailNo(contractDetailNo);\n  };\n\n  const delivery = useCallback(() => {\n    if (contractDetailNo === undefined) {\n      return alert('납품할 제품을 먼저 선택해주세요..');\n    }\n\n    if (deliveryDetailGrid.getSelectedRows()[0].deliveryCompletionStatus === 'Y') {\n      return Swal.fire({\n        icon: \"error\",\n        text: \"이미 발주된 항목입니다.\"\n      });\n    }\n\n    Axios.get('http://localhost:8282/logi/logistics/sales/deliver', {\n      params: {\n        contractDetailNo: contractDetailNo\n      }\n    }).then(response => {\n      if (parseInt(response.data.errorCode) === 0) {\n        window.alert(response.data.errorMsg);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n    deliveryDetailGrid.setRowData(null);\n    deliveryGrid.setRowData(null);\n  }, [contractDetailNo, deliveryDetailGrid, deliveryGrid]);\n\n  const api = params => {\n    setDeliveryGrid(params.api);\n  };\n\n  const detailApi = params => {\n    setDeliveryDetailGrid(params.api);\n  };\n\n  const basicInfo = (startDate, endDate) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const deliverySearch = useCallback(() => {\n    if (customerSearch === true) {\n      var param = {\n        startDate: 'null',\n        endDate: 'null',\n        searchCondition: 'searchByCustomer',\n        customerCode: selCustomer.detailCode\n      };\n    }\n\n    if (dateSearch === true) {\n      var param = {\n        startDate: startDate,\n        endDate: endDate,\n        searchCondition: 'searchByDate',\n        customerCode: 'null'\n      };\n    }\n\n    Axios.get('http://localhost:8282/logi/logistics/sales/searchDeliverableContractList', {\n      params: param\n    }).then(response => {\n      setList(response.data.gridRowJson);\n\n      if (deliveryGrid) {\n        deliveryGrid.setRowData(response.data.gridRowJson);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  }, [customerSearch, dateSearch, endDate, list, selCustomer.detailCode, startDate]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(MyGrid, {\n    column: column,\n    title: '수주 조회',\n    list: list,\n    onCellClicked: onCellClicked,\n    rowSelection: \"single\",\n    size: size,\n    api: api,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: customerSearch,\n      onChange: checkBoxChange,\n      name: \"customerSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }),\n    label: \"\\uAC70\\uB798\\uCC98\\uBA85\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: dateSearch,\n      onChange: checkBoxChange,\n      name: \"dateSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }),\n    label: \"\\uB0A0\\uC9DC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }))), dateSearch === true ? React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    basicInfo: basicInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }) : React.createElement(TextField, {\n    id: \"customerName\",\n    label: \"\\uAC70\\uB798\\uCC98\\uBA85\",\n    value: selCustomer.detailCodeName,\n    style: {\n      marginRight: '1vw'\n    },\n    disabled: true,\n    onClick: customerSearchClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onClick: deliverySearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginTop: '1vh'\n    },\n    onClick: delivery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"\\uB0A9\\uD488\")), selDelivery === undefined ? '' : React.createElement(DeliveryDetailGrid, {\n    list: detailList,\n    detailClose: detailClose,\n    updateDetail: updateDetail,\n    detailApi: detailApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }), React.createElement(MyDialog, {\n    open: searchOpenDialog,\n    close: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(CustomerSearchDialog, {\n    close: close,\n    onCellClicked: onDialogCellClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  })));\n}\n\nexport default DeliverySearch;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/sales/page/Delivery/DeliverySearch.js"],"names":["Button","Checkbox","FormControlLabel","FormGroup","makeStyles","TextField","React","useState","useCallback","MyCalendar","MyDialog","MyGrid","moment","CustomerSearchDialog","Axios","DeliveryDetailGrid","Swal","DeliverySearch","props","list","setList","detailList","setDetailList","today","Date","format","startDate","setStartDate","endDate","setEndDate","size","setSize","customerSearch","setCustomerSearch","dateSearch","setDateSearch","searchOpenDialog","setSearchOpenDialog","selDelivery","setSelDelivery","contractDetailNo","setContractDetailNo","deliveryGrid","setDeliveryGrid","deliveryDetailGrid","setDeliveryDetailGrid","selCustomer","setSelCutomer","detailCodeName","detailCode","column","columnDefs","headerName","field","hide","checkBoxChange","e","target","name","onCellClicked","param","data","contractDetailTOList","sizeColumnsToFit","setRowData","onChangeDate","id","value","onDialogCellClicked","params","customerSearchClick","close","detailClose","updateDetail","delivery","undefined","alert","getSelectedRows","deliveryCompletionStatus","fire","icon","text","get","then","response","parseInt","errorCode","window","errorMsg","catch","console","log","api","detailApi","basicInfo","deliverySearch","searchCondition","customerCode","gridRowJson","float","marginRight","marginTop"],"mappings":"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","sourcesContent":["import {\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    makeStyles,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport React, { useState, useCallback } from 'react';\r\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\r\nimport MyDialog from 'util/LogiUtil/MyDialog';\r\nimport MyGrid from 'util/LogiUtil/MyGrid';\r\nimport moment from 'moment';\r\nimport CustomerSearchDialog from '../Contract/CustomerSearchDialog';\r\nimport Axios from 'axios';\r\nimport DeliveryDetailGrid from './DeliveryDetailGrid';\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction DeliverySearch(props) {\r\n    const [list, setList] = useState([]);\r\n    const [detailList, setDetailList] = useState([]);\r\n    let today = moment(new Date()).format('yyyy-MM-DD');\r\n    const [startDate, setStartDate] = useState(today);\r\n    const [endDate, setEndDate] = useState(today);\r\n    const [size, setSize] = useState('50vh');\r\n    const [customerSearch, setCustomerSearch] = useState(false);\r\n    const [dateSearch, setDateSearch] = useState(true);\r\n    const [searchOpenDialog, setSearchOpenDialog] = useState(false);\r\n    const [selDelivery, setSelDelivery] = useState();\r\n    const [contractDetailNo, setContractDetailNo] = useState();\r\n    const [deliveryGrid, setDeliveryGrid] = useState();\r\n    const [deliveryDetailGrid, setDeliveryDetailGrid] = useState();\r\n\r\n    //다이알로그에서 가져온 값\r\n    const [selCustomer, setSelCutomer] = useState({\r\n        detailCodeName: '',\r\n        detailCode: ''\r\n    });\r\n\r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: '수주번호', field: 'contractNo' },\r\n            { headerName: '견적번호', field: 'estimateNo' },\r\n            { headerName: '유형', field: 'contractTypeName' },\r\n            { headerName: '거래처코드', field: 'customerCode', hide: true },\r\n            { headerName: '거래처명', field: 'customerName' },\r\n            { headerName: '견적일자', field: 'contractDate', hide: true },\r\n            { headerName: '수주일자', field: 'contractDate' },\r\n            { headerName: '수주요청자', field: 'contractRequester' },\r\n            { headerName: '수주담당자명', field: 'empNameInCharge' },\r\n            { headerName: '비고', field: 'description' }\r\n        ]\r\n    };\r\n\r\n    const checkBoxChange = e => {\r\n        if (e.target.name === 'customerSearch') {\r\n            setCustomerSearch(true);\r\n            setDateSearch(false);\r\n        }\r\n        if (e.target.name === 'dateSearch') {\r\n            setCustomerSearch(false);\r\n            setDateSearch(true);\r\n        }\r\n    };\r\n\r\n    const onCellClicked = param => {\r\n        //console.log(param.data.contractDetailTOList)\r\n        setDetailList(param.data.contractDetailTOList);\r\n        setSelDelivery('select');\r\n        setSize('30vh');\r\n        deliveryGrid.sizeColumnsToFit();\r\n\r\n        if(deliveryDetailGrid){\r\n            deliveryDetailGrid.setRowData(param.data.contractDetailTOList);\r\n        }\r\n    };\r\n\r\n    const onChangeDate = e => {\r\n        //console.log(e);\r\n        if (e.target.id === 'startDate') {\r\n            setStartDate(e.target.value);\r\n        } else {\r\n            setEndDate(e.target.value);\r\n        }\r\n    };\r\n\r\n    const onDialogCellClicked = params => {\r\n        setSelCutomer({\r\n            detailCodeName: params.data.detailCodeName,\r\n            detailCode: params.data.detailCode\r\n        });\r\n    };\r\n\r\n    const customerSearchClick = () => {\r\n        setSearchOpenDialog(true);\r\n    };\r\n\r\n    const close = () => {\r\n        setSearchOpenDialog(false);\r\n    };\r\n\r\n    const detailClose = () => {\r\n        setSize('50vh');\r\n        setSelDelivery();\r\n        deliveryGrid.sizeColumnsToFit();\r\n    };\r\n\r\n    const updateDetail = contractDetailNo => {\r\n        setContractDetailNo(contractDetailNo);\r\n    };\r\n\r\n    const delivery = useCallback(() => {\r\n        if (contractDetailNo === undefined) {\r\n            return alert('납품할 제품을 먼저 선택해주세요..');\r\n        }\r\n\r\n        if(deliveryDetailGrid.getSelectedRows()[0].deliveryCompletionStatus==='Y'){\r\n            return Swal.fire({\r\n                icon: \"error\",\r\n                text: \"이미 발주된 항목입니다.\",\r\n              });\r\n        }\r\n\r\n\r\n        Axios.get('http://localhost:8282/logi/logistics/sales/deliver', {\r\n            params: {\r\n                contractDetailNo: contractDetailNo\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (parseInt(response.data.errorCode) === 0) {\r\n                    window.alert(response.data.errorMsg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n            deliveryDetailGrid.setRowData(null);\r\n            deliveryGrid.setRowData(null);\r\n\r\n    },[contractDetailNo, deliveryDetailGrid, deliveryGrid]);\r\n    const api = params => {\r\n        setDeliveryGrid(params.api);\r\n    };\r\n\r\n    const detailApi = params => {\r\n        setDeliveryDetailGrid(params.api);\r\n        \r\n    };\r\n\r\n    const basicInfo = (startDate, endDate) => {\r\n        setStartDate(startDate);\r\n        setEndDate(endDate);\r\n    };\r\n\r\n    const deliverySearch = useCallback(() => {\r\n        if (customerSearch === true) {\r\n            var param = {\r\n                startDate: 'null',\r\n                endDate: 'null',\r\n                searchCondition: 'searchByCustomer',\r\n                customerCode: selCustomer.detailCode\r\n            };\r\n        }\r\n        if (dateSearch === true) {\r\n            var param = {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                searchCondition: 'searchByDate',\r\n                customerCode: 'null'\r\n            };\r\n        }\r\n        Axios.get('http://localhost:8282/logi/logistics/sales/searchDeliverableContractList', {\r\n            params: param\r\n        })\r\n            .then(response => {\r\n                setList(response.data.gridRowJson);\r\n                \r\n                if(deliveryGrid){\r\n                    deliveryGrid.setRowData(response.data.gridRowJson);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    },[customerSearch, dateSearch, endDate, list, selCustomer.detailCode, startDate]);\r\n\r\n    return (\r\n        <div>\r\n            <MyGrid\r\n                column={column}\r\n                title={'수주 조회'}\r\n                list={list}\r\n                onCellClicked={onCellClicked}\r\n                rowSelection=\"single\"\r\n                size={size}\r\n                api={api}\r\n            >\r\n                <div style={{ float: 'left' }}>\r\n                    <FormGroup row>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={customerSearch}\r\n                                    onChange={checkBoxChange}\r\n                                    name=\"customerSearch\"\r\n                                />\r\n                            }\r\n                            label=\"거래처명\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={dateSearch}\r\n                                    onChange={checkBoxChange}\r\n                                    name=\"dateSearch\"\r\n                                />\r\n                            }\r\n                            label=\"날짜\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                {dateSearch === true ? (\r\n                    <MyCalendar onChangeDate={onChangeDate} basicInfo={basicInfo} />\r\n                ) : (\r\n                    <TextField\r\n                        id=\"customerName\"\r\n                        label=\"거래처명\"\r\n                        value={selCustomer.detailCodeName}\r\n                        style={{ marginRight: '1vw' }}\r\n                        disabled\r\n                        onClick={customerSearchClick}\r\n                    />\r\n                )}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    style={{ marginRight: '1vh', marginTop: '1vh' }}\r\n                    onClick={deliverySearch}\r\n                >\r\n                    조회\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    style={{ marginTop: '1vh' }}\r\n                    onClick={delivery}\r\n                >\r\n                    납품\r\n                </Button>\r\n            </MyGrid>\r\n            {selDelivery === undefined ? (\r\n                ''\r\n            ) : (\r\n                <DeliveryDetailGrid\r\n                    list={detailList}\r\n                    detailClose={detailClose}\r\n                    updateDetail={updateDetail}\r\n                    detailApi={detailApi}\r\n                />\r\n            )}\r\n            <MyDialog open={searchOpenDialog} close={close}>\r\n                <CustomerSearchDialog close={close} onCellClicked={onDialogCellClicked} />\r\n            </MyDialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeliverySearch;\r\n"]},"metadata":{},"sourceType":"module"}