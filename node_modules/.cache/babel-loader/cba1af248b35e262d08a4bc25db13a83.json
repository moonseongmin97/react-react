{"ast":null,"code":"import { createAction } from 'redux-actions';\nexport const SELECT_BASE_WORK_TIME_LIST = 'src/erp/hr/Saga/Saga/SELECT_BASE_WORK_TIME_LIST'; //export const INSERT_BASE_WORK_TIME_LIST = 'baseworktime/INSERT_BASE_WORK_TIME_LIST';\n\nexport const DELETE_BASE_WORK_TIME = 'src/erp/hr/Saga/Saga/DELETE_BASE_WORK_TIME';\nexport const SELECT_BASE_WORK_TIME_LIST_SUCCESS = 'src/erp/hr/Saga/Saga/SELECT_BASE_WORK_TIME_LIST_SUCCESS';\nexport const SELECT_BASE_WORK_TIME_LIST_FAILURE = 'src/erp/hr/Saga/Saga/SELECT_BASE_WORK_TIME_LIST_FAILURE'; //export const INSERT_BASE_WORK_TIME_LIST_SUCCESS = 'baseworktime/INSERT_BASE_WORK_TIME_LIST_SUCCESS';\n//export const INSERT_BASE_WORK_TIME_LIST_FAILURE = 'baseworktime/INSERT_BASE_WORK_TIME_LIST_FAILURE';\n\nexport const DELETE_BASE_WORK_TIME_SUCCESS = 'src/erp/hr/Saga/Saga/DELETE_BASE_WORK_TIME_SUCCESS';\nexport const DELETE_BASE_WORK_TIME_FAILURE = 'src/erp/hr/Saga/Saga/DELETE_BASE_WORK_TIME_FAILURE';\nexport const BATCH_BASE_WORK_TIME_SUCCESS = 'baseworktime/BATCH_BASE_WORK_TIME_SUCCESS';\nexport const BATCH_BASE_WORK_TIME_FAILURE = 'baseworktime/BATCH_BASE_WORK_TIME_FAILURE';\nconst initialState = {\n  baseWorkTimeList: [],\n  errorCode: '',\n  errorMsg: ''\n};\n\nconst baseworktime = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_BASE_WORK_TIME:\n      console.log('DELETE_BASE_WORK_TIME');\n      return { ...state\n      };\n\n    case DELETE_BASE_WORK_TIME_SUCCESS:\n      alert('삭제 완료');\n      console.log('DELETE_BASE_WORK_TIME_SUCCESS');\n      console.log(action.payload.map(el => el.applyYear));\n      return { ...state,\n        baseWorkTimeList: state.baseWorkTimeList.filter(baseWorkTime => {\n          return !(action.payload.map(el => el.applyYear).indexOf(baseWorkTime.applyYear) > -1);\n        })\n      };\n\n    case DELETE_BASE_WORK_TIME_FAILURE:\n      console.log('DELETE_BASE_WORK_TIME_FAILURE');\n      return { ...state\n      };\n    // case INSERT_BASE_WORK_TIME_LIST:\n    //     console.log('INSERT_BASE_WORK_TIME_LIST');\n    //     return {\n    //         ...state\n    //     };\n    // case INSERT_BASE_WORK_TIME_LIST_SUCCESS:\n    //     console.log('INSERT_BASE_WORK_TIME_LIST_SUCCESS');\n    //     return {\n    //         ...state,\n    //         baseWorkTimeList: state.baseWorkTimeList.concat({\n    //             applyYear: null,\n    //             attendTime: null,\n    //             chk: null,\n    //             dinnerEndTime: null,\n    //             dinnerStartTime: null,\n    //             errorCode: null,\n    //             errorMsg: null,\n    //             lunchEndTime: null,\n    //             lunchStartTime: null,\n    //             nightEndTime: null,\n    //             overEndTime: null,\n    //             quitTime: null,\n    //             status: 'insert'\n    //         })\n    //     };\n    // case INSERT_BASE_WORK_TIME_LIST_FAILURE:\n    //     console.log('HrReducer');\n    //     return {\n    //         ...state\n    //     };\n\n    case SELECT_BASE_WORK_TIME_LIST:\n      console.log('HrReducer');\n      return { ...state\n      };\n\n    case SELECT_BASE_WORK_TIME_LIST_SUCCESS:\n      console.log('HR리듀서 SELECT_BASE_WORK_TIME_LIST_SUCCESS  ', action);\n      return { ...state,\n        baseWorkTimeList: action.payload\n      };\n\n    case SELECT_BASE_WORK_TIME_LIST_FAILURE:\n      console.log('HR리듀서 SELECT_BASE_WORK_TIME_LIST_FAILURE  ', action);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default baseworktime;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/hr/base/reducer/BaseWorkTimeReducer.js"],"names":["createAction","SELECT_BASE_WORK_TIME_LIST","DELETE_BASE_WORK_TIME","SELECT_BASE_WORK_TIME_LIST_SUCCESS","SELECT_BASE_WORK_TIME_LIST_FAILURE","DELETE_BASE_WORK_TIME_SUCCESS","DELETE_BASE_WORK_TIME_FAILURE","BATCH_BASE_WORK_TIME_SUCCESS","BATCH_BASE_WORK_TIME_FAILURE","initialState","baseWorkTimeList","errorCode","errorMsg","baseworktime","state","action","type","console","log","alert","payload","map","el","applyYear","filter","baseWorkTime","indexOf"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,OAAO,MAAMC,0BAA0B,GAAG,iDAAnC,C,CACP;;AACA,OAAO,MAAMC,qBAAqB,GAAG,4CAA9B;AAEP,OAAO,MAAMC,kCAAkC,GAAG,yDAA3C;AACP,OAAO,MAAMC,kCAAkC,GAAG,yDAA3C,C,CAEP;AACA;;AAEA,OAAO,MAAMC,6BAA6B,GAAG,oDAAtC;AACP,OAAO,MAAMC,6BAA6B,GAAG,oDAAtC;AAEP,OAAO,MAAMC,4BAA4B,GAAG,2CAArC;AACP,OAAO,MAAMC,4BAA4B,GAAG,2CAArC;AAEP,MAAMC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,EADD;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,qBAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;;AAGJ,SAAKT,6BAAL;AACIc,MAAAA,KAAK,CAAC,OAAD,CAAL;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAmBC,EAAE,IAAIA,EAAE,CAACC,SAA5B,CAAZ;AACA,aAAO,EACH,GAAGT,KADA;AAEHJ,QAAAA,gBAAgB,EAAEI,KAAK,CAACJ,gBAAN,CAAuBc,MAAvB,CAA8BC,YAAY,IAAI;AAC5D,iBAAO,EACHV,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAmBC,EAAE,IAAIA,EAAE,CAACC,SAA5B,EAAuCG,OAAvC,CAA+CD,YAAY,CAACF,SAA5D,IAAyE,CAAC,CADvE,CAAP;AAGH,SAJiB;AAFf,OAAP;;AASJ,SAAKjB,6BAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;AAIJ;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAKb,0BAAL;AACIgB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;;AAIJ,SAAKX,kCAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DH,MAA1D;AACA,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACK;AAFtB,OAAP;;AAKJ,SAAKhB,kCAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DH,MAA1D;AACA,aAAO,EACH,GAAGD;AADA,OAAP;;AAIJ;AACI,aAAOA,KAAP;AA9ER;AAgFH,CAjFD;;AAmFA,eAAeD,YAAf","sourcesContent":["import { createAction } from 'redux-actions';\r\n\r\nexport const SELECT_BASE_WORK_TIME_LIST = 'src/erp/hr/Saga/Saga/SELECT_BASE_WORK_TIME_LIST';\r\n//export const INSERT_BASE_WORK_TIME_LIST = 'baseworktime/INSERT_BASE_WORK_TIME_LIST';\r\nexport const DELETE_BASE_WORK_TIME = 'src/erp/hr/Saga/Saga/DELETE_BASE_WORK_TIME';\r\n\r\nexport const SELECT_BASE_WORK_TIME_LIST_SUCCESS = 'src/erp/hr/Saga/Saga/SELECT_BASE_WORK_TIME_LIST_SUCCESS';\r\nexport const SELECT_BASE_WORK_TIME_LIST_FAILURE = 'src/erp/hr/Saga/Saga/SELECT_BASE_WORK_TIME_LIST_FAILURE';\r\n\r\n//export const INSERT_BASE_WORK_TIME_LIST_SUCCESS = 'baseworktime/INSERT_BASE_WORK_TIME_LIST_SUCCESS';\r\n//export const INSERT_BASE_WORK_TIME_LIST_FAILURE = 'baseworktime/INSERT_BASE_WORK_TIME_LIST_FAILURE';\r\n\r\nexport const DELETE_BASE_WORK_TIME_SUCCESS = 'src/erp/hr/Saga/Saga/DELETE_BASE_WORK_TIME_SUCCESS';\r\nexport const DELETE_BASE_WORK_TIME_FAILURE = 'src/erp/hr/Saga/Saga/DELETE_BASE_WORK_TIME_FAILURE';\r\n\r\nexport const BATCH_BASE_WORK_TIME_SUCCESS = 'baseworktime/BATCH_BASE_WORK_TIME_SUCCESS';\r\nexport const BATCH_BASE_WORK_TIME_FAILURE = 'baseworktime/BATCH_BASE_WORK_TIME_FAILURE';\r\n\r\nconst initialState = {\r\n    baseWorkTimeList: [],\r\n    errorCode: '',\r\n    errorMsg: '',\r\n};\r\n\r\nconst baseworktime = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DELETE_BASE_WORK_TIME:\r\n            console.log('DELETE_BASE_WORK_TIME');\r\n            return {\r\n                ...state\r\n            };\r\n        case DELETE_BASE_WORK_TIME_SUCCESS:\r\n            alert('삭제 완료');\r\n            console.log('DELETE_BASE_WORK_TIME_SUCCESS');\r\n            console.log(action.payload.map(el => el.applyYear));\r\n            return {\r\n                ...state,\r\n                baseWorkTimeList: state.baseWorkTimeList.filter(baseWorkTime => {\r\n                    return !(\r\n                        action.payload.map(el => el.applyYear).indexOf(baseWorkTime.applyYear) > -1\r\n                    );\r\n                })\r\n            };\r\n\r\n        case DELETE_BASE_WORK_TIME_FAILURE:\r\n            console.log('DELETE_BASE_WORK_TIME_FAILURE');\r\n            return {\r\n                ...state\r\n            };\r\n\r\n        // case INSERT_BASE_WORK_TIME_LIST:\r\n        //     console.log('INSERT_BASE_WORK_TIME_LIST');\r\n        //     return {\r\n        //         ...state\r\n        //     };\r\n\r\n        // case INSERT_BASE_WORK_TIME_LIST_SUCCESS:\r\n        //     console.log('INSERT_BASE_WORK_TIME_LIST_SUCCESS');\r\n        //     return {\r\n        //         ...state,\r\n        //         baseWorkTimeList: state.baseWorkTimeList.concat({\r\n        //             applyYear: null,\r\n        //             attendTime: null,\r\n        //             chk: null,\r\n        //             dinnerEndTime: null,\r\n        //             dinnerStartTime: null,\r\n        //             errorCode: null,\r\n        //             errorMsg: null,\r\n        //             lunchEndTime: null,\r\n        //             lunchStartTime: null,\r\n        //             nightEndTime: null,\r\n        //             overEndTime: null,\r\n        //             quitTime: null,\r\n        //             status: 'insert'\r\n        //         })\r\n        //     };\r\n\r\n        // case INSERT_BASE_WORK_TIME_LIST_FAILURE:\r\n        //     console.log('HrReducer');\r\n        //     return {\r\n        //         ...state\r\n        //     };\r\n\r\n        case SELECT_BASE_WORK_TIME_LIST:\r\n            console.log('HrReducer');\r\n            return {\r\n                ...state\r\n            };\r\n\r\n        case SELECT_BASE_WORK_TIME_LIST_SUCCESS:\r\n            console.log('HR리듀서 SELECT_BASE_WORK_TIME_LIST_SUCCESS  ', action);\r\n            return {\r\n                ...state,\r\n                baseWorkTimeList: action.payload\r\n            };\r\n\r\n        case SELECT_BASE_WORK_TIME_LIST_FAILURE:\r\n            console.log('HR리듀서 SELECT_BASE_WORK_TIME_LIST_FAILURE  ', action);\r\n            return {\r\n                ...state\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default baseworktime;\r\n"]},"metadata":{},"sourceType":"module"}