{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\account\\\\account\\\\page\\\\Slip\\\\Dialog\\\\FinanceAccount.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport axios from \"axios\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\"; //=============================== 2020-09-10 거래처관리 조편백 ======================================\n\nconst FinanceAccount = props => {\n  const [data, setData] = useState(null); //useEffect 로 조회한 결과값 받는 상태 값\n  //===================== useEffect로 비동기적으로 동작  ========================================\n  //컴포넌트가 마운트 됐을 때 호출됨\n\n  useEffect(() => {\n    NormalAccountList(); // 함수호출\n  }, []);\n\n  function NormalAccountList() {\n    axios.get(\"http://localhost:8282/acc/base/getCustomerList\").then(response => {\n      setData(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  } //=============================== ag_grid 시작 ================================================\n\n\n  const FinanceAccountGrid = [// 칼럼정의\n  {\n    headerName: \"금융 거래처코드\",\n    field: \"customerCode\"\n  }, {\n    headerName: \"금융거래처명\",\n    field: \"customerName\"\n  }]; //=================================== ag Grid 초기화 시 실행 ===================================\n\n  const onGridReady = params => {\n    params.api.sizeColumnsToFit(); // 칼럼 사이즈 자동조절\n  }; //=================================================== 셀클릭시 =========================================\n\n\n  const onCellClicked = params => {\n    const Rows = params.api.getSelectedRows(); //선택한 전표 Grid row 1줄을 들고옴\n\n    props.handleFinanceRow(Rows); // 선택한 전표그리드 slipNo 로 분개 그리드 띄움\n  };\n\n  const {\n    dark\n  } = useThemeSwitcher();\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\",\n    skipHeaderOnAutoSize: \"true\",\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"400px\",\n      width: \"100%\",\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(AgGridReact, {\n    columnDefs: FinanceAccountGrid //정의된 컬럼\n    ,\n    rowData: data //Reduce에서 받아온 데이터\n    ,\n    rowSelection: \"single\" //하나만 선택하거나 복수개를 선택할 수 있음\n    ,\n    onGridReady: onGridReady //onload 이벤트와 유사한 것\n    ,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    } //body 가운데 정렬\n    ,\n    onCellClicked: onCellClicked //셀 클릭\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n};\n\nexport default FinanceAccount;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/account/account/page/Slip/Dialog/FinanceAccount.js"],"names":["React","useEffect","useState","AgGridReact","axios","useThemeSwitcher","FinanceAccount","props","data","setData","NormalAccountList","get","then","response","catch","e","console","log","FinanceAccountGrid","headerName","field","onGridReady","params","api","sizeColumnsToFit","onCellClicked","Rows","getSelectedRows","handleFinanceRow","dark","height","width","paddingTop","param"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,2CAAP;AACA,OAAO,mDAAP;AACA,SAASC,gBAAT,QAAiC,oBAAjC,C,CAEA;;AACA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC,CAD8B,CACU;AAExC;AAEA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,iBAAiB,GADH,CACO;AACtB,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,iBAAT,GAA6B;AAC3BN,IAAAA,KAAK,CACFO,GADH,CACO,gDADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACD,KAJH,EAKGM,KALH,CAKSC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KAPH;AAQD,GAnB6B,CAoB9B;;;AAEA,QAAMG,kBAAkB,GAAG,CACzB;AACA;AAAEC,IAAAA,UAAU,EAAE,UAAd;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAFyB,EAGzB;AAAED,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAHyB,CAA3B,CAtB8B,CA2B9B;;AACA,QAAMC,WAAW,GAAGC,MAAM,IAAI;AAC5BA,IAAAA,MAAM,CAACC,GAAP,CAAWC,gBAAX,GAD4B,CACG;AAChC,GAFD,CA5B8B,CA+B9B;;;AACA,QAAMC,aAAa,GAAGH,MAAM,IAAI;AAC9B,UAAMI,IAAI,GAAGJ,MAAM,CAACC,GAAP,CAAWI,eAAX,EAAb,CAD8B,CACa;;AAC3CpB,IAAAA,KAAK,CAACqB,gBAAN,CAAuBF,IAAvB,EAF8B,CAEA;AAC/B,GAHD;;AAKA,QAAM;AAAEG,IAAAA;AAAF,MAAWxB,gBAAgB,EAAjC;AAEA,SACE,0CACE;AACE,IAAA,SAAS,EAAEwB,IAAI,GAAG,sBAAH,GAA4B,mBAD7C;AAEE,IAAA,oBAAoB,EAAC,MAFvB;AAGE,IAAA,eAAe,EAAC,MAHlB;AAIE,IAAA,aAAa,EAAC,MAJhB;AAKE,IAAA,YAAY,EAAC,MALf;AAME,IAAA,oBAAoB,EAAC,MANvB;AAOE,IAAA,QAAQ,EAAE;AAAE,oBAAc;AAAhB,KAPZ;AAQE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,UAAU,EAAE;AAHP,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEd,kBADd,CACkC;AADlC;AAEE,IAAA,OAAO,EAAEV,IAFX,CAEiB;AAFjB;AAGE,IAAA,YAAY,EAAC,QAHf,CAGwB;AAHxB;AAIE,IAAA,WAAW,EAAEa,WAJf,CAI4B;AAJ5B;AAKE,IAAA,WAAW,EAAE,UAASY,KAAT,EAAgB;AAC3B,aAAO;AAAE,sBAAc;AAAhB,OAAP;AACD,KAPH,CAOK;AAPL;AAQE,IAAA,aAAa,EAAER,aARjB,CAQgC;AARhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,CADF;AA6BD,CApED;;AAsEA,eAAenB,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport axios from \"axios\";\n\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { useThemeSwitcher } from \"mui-theme-switcher\";\n\n//=============================== 2020-09-10 거래처관리 조편백 ======================================\nconst FinanceAccount = props => {\n  const [data, setData] = useState(null); //useEffect 로 조회한 결과값 받는 상태 값\n\n  //===================== useEffect로 비동기적으로 동작  ========================================\n\n  //컴포넌트가 마운트 됐을 때 호출됨\n  useEffect(() => {\n    NormalAccountList(); // 함수호출\n  }, []);\n\n  function NormalAccountList() {\n    axios\n      .get(\"http://localhost:8282/acc/base/getCustomerList\")\n      .then(response => {\n        setData(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  //=============================== ag_grid 시작 ================================================\n\n  const FinanceAccountGrid = [\n    // 칼럼정의\n    { headerName: \"금융 거래처코드\", field: \"customerCode\" },\n    { headerName: \"금융거래처명\", field: \"customerName\" },\n  ];\n  //=================================== ag Grid 초기화 시 실행 ===================================\n  const onGridReady = params => {\n    params.api.sizeColumnsToFit(); // 칼럼 사이즈 자동조절\n  };\n  //=================================================== 셀클릭시 =========================================\n  const onCellClicked = params => {\n    const Rows = params.api.getSelectedRows(); //선택한 전표 Grid row 1줄을 들고옴\n    props.handleFinanceRow(Rows); // 선택한 전표그리드 slipNo 로 분개 그리드 띄움\n  };\n\n  const { dark } = useThemeSwitcher();\n\n  return (\n    <>\n      <div\n        className={dark ? \"ag-theme-alpine-dark\" : \"ag-theme-material\"}\n        skipHeaderOnAutoSize=\"true\"\n        enableColResize=\"true\"\n        enableSorting=\"true\"\n        enableFilter=\"true\"\n        enableRangeSelection=\"true\"\n        rowStyle={{ \"text-align\": \"center\" }}\n        style={{\n          height: \"400px\",\n          width: \"100%\",\n          paddingTop: \"8px\",\n        }}\n      >\n        <AgGridReact\n          columnDefs={FinanceAccountGrid} //정의된 컬럼\n          rowData={data} //Reduce에서 받아온 데이터\n          rowSelection=\"single\" //하나만 선택하거나 복수개를 선택할 수 있음\n          onGridReady={onGridReady} //onload 이벤트와 유사한 것\n          getRowStyle={function(param) {\n            return { \"text-align\": \"center\" };\n          }} //body 가운데 정렬\n          onCellClicked={onCellClicked} //셀 클릭\n        />\n      </div>\n    </>\n  );\n};\n\nexport default FinanceAccount;\n"]},"metadata":{},"sourceType":"module"}