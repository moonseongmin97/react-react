{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\68react\\\\src\\\\erp\\\\hr\\\\affair\\\\page\\\\EmpDetailed\\\\DetailEmpSearch\\\\BasicInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, Button } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EMP_UPDATE_REQUEST } from \"../../../saga/EmpInfoSaga\";\n\nfunction BasicInfo(props) {\n  const useStyles = makeStyles(theme => ({\n    root1: {\n      flexGrow: 1,\n      textAlign: 'center',\n      padding: theme.spacing(2),\n      margin: 25\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '30ch'\n    },\n    button: {\n      margin: 20,\n      backgroundColor: blue\n    }\n  })); // const currencies = [\n  //     {\n  //         value: 'female',\n  //         label: 'female',\n  //     },\n  //     {\n  //         value: 'male',\n  //         label: 'male',\n  //     },\n  // ];\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    empDetailFullList\n  } = useSelector(state => state.hr.affair);\n  const [image, setImage] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [basicAddress, setBasicAddress] = useState('');\n  const [email, setEmail] = useState('');\n  const [empName, setEmpName] = useState(''); //EMPLOYEE_BASIC\n\n  const [gender, setGender] = useState(''); //EMPLOYEE_BASIC\n\n  const [birthDate, setBirthDate] = useState(''); //EMPLOYEE_BASIC\n\n  const [levelOfEducation, setLevelOfEducation] = useState('');\n  const [empCode, setEmpCode] = useState('');\n  const [positionName, setPositionName] = useState('');\n  const [deptName, setDeptName] = useState('');\n  let data = [];\n  useEffect(() => {\n    if (empDetailFullList[0] !== undefined) {\n      setImage(empDetailFullList[0].image);\n      setZipCode(empDetailFullList[0].zipCode);\n      setBasicAddress(empDetailFullList[0].basicAddress);\n      setEmail(empDetailFullList[0].email);\n      setEmpName(empDetailFullList[0].empName);\n      setGender(empDetailFullList[0].gender);\n      setBirthDate(empDetailFullList[0].birthDate);\n      setLevelOfEducation(empDetailFullList[0].levelOfEducation);\n      setEmpCode(empDetailFullList[0].empCode);\n      setPositionName(empDetailFullList[0].positionName);\n      setDeptName(empDetailFullList[0].deptName);\n    }\n  }, [empDetailFullList]); //empDetailFullList의 값이 변경될때만 해당 useEffect 함수 실행 즉 사원로우를 클릭했을때 한번만 실행됨\n\n  const update = () => {\n    // axios.post(\"http://localhost:8282/hr/affair/empUpdate.do\",{\n    //     params:{empArray:empDetailFullList}\n    // },{ headers: {\n    //     'Content-Type': 'application/json' },\n    //     }\n    // ).then(response=> {\n    //     console.log('success');\n    // })   \n    // .catch(e => {\n    //     console.log(e);\n    // });\n    data = {\n      empCode: empCode,\n      zipCode: zipCode,\n      basicAddress: basicAddress,\n      email: email,\n      empName: empName,\n      gender: gender,\n      birthDate: birthDate,\n      levelOfEducation: levelOfEducation\n    };\n    dispatch({\n      type: EMP_UPDATE_REQUEST,\n      data: data\n    });\n    alert(\"수정완료\");\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    //src={empDetailFullList[0] !== undefined ? empDetailFullList[0].image:''} //src하면 public으로 이동\n    src: image //이미지 변경은 구현 안함\n    ,\n    width: \"250\",\n    height: \"250\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC6B0\\uD3B8\\uBC88\\uD638\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].zipCode:''}\n    //className={classes.textField}\n    ,\n    value: zipCode,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    onChange: e => {\n      setZipCode(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    sm: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC8FC\\uC18C\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].basicAddress:''}\n    //className={classes.textField}\n    ,\n    value: basicAddress,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    onChange: e => {\n      setBasicAddress(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    sm: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC774\\uBA54\\uC77C\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].email:''}\n    //className={classes.textField}\n    ,\n    value: email,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    sm: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: update,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\uC218\\uC815\")))), React.createElement(Grid, {\n    xs: 12,\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC0AC\\uC6D0\\uBA85\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].empName:''}\n    ,\n    value: empName,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: e => {\n      setEmpName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC131\\uBCC4\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].gender:''}\n    ,\n    value: gender,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: e => {\n      setGender(e.target.value);\n    } //select\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].birthDate:''}\n    ,\n    value: birthDate,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: e => {\n      setBirthDate(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uCD5C\\uC885\\uD559\\uB825\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].levelOfEducation:''}\n    ,\n    value: levelOfEducation,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: e => {\n      setLevelOfEducation(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC0AC\\uC6D0\\uCF54\\uB4DC\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].empCode:''}\n    ,\n    value: empCode,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\" //onChange={(e => { setEmpCode(e.target.value)})} 변경하면 안됨\n    ,\n    editable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uC9C1\\uAE09\\uBA85\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].positionName:''}\n    ,\n    value: positionName,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\" //onChange={(e => { setPositionName(e.target.value)})} 상세정보에서 관리할 것이 아니라 인사발령에서 관리 해야함\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\uBD80\\uC11C\\uBA85\",\n    id: \"outlined-margin-normal\" //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].deptName:''}\n    ,\n    value: deptName,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\" //onChange={(e => { setDeptName(e.target.value)})} 상세정보에서 관리할 것이 아니라 인사발령에서 관리 해야함\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }))))));\n}\n\nexport default BasicInfo;","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68react/src/erp/hr/affair/page/EmpDetailed/DetailEmpSearch/BasicInfo.js"],"names":["React","useEffect","useState","axios","makeStyles","Grid","TextField","Button","blue","useDispatch","useSelector","EMP_UPDATE_REQUEST","BasicInfo","props","useStyles","theme","root1","flexGrow","textAlign","padding","spacing","margin","textField","marginLeft","marginRight","width","button","backgroundColor","classes","dispatch","empDetailFullList","state","hr","affair","image","setImage","zipCode","setZipCode","basicAddress","setBasicAddress","email","setEmail","empName","setEmpName","gender","setGender","birthDate","setBirthDate","levelOfEducation","setLevelOfEducation","empCode","setEmpCode","positionName","setPositionName","deptName","setDeptName","data","undefined","update","type","alert","e","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    TextField,\n    Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {EMP_UPDATE_REQUEST\n} from \"../../../saga/EmpInfoSaga\";\n\n\nfunction BasicInfo(props) {\n\n    const useStyles = makeStyles((theme) => ({\n        root1: {\n            flexGrow: 1,\n            textAlign: 'center',\n            padding: theme.spacing(2),\n            margin: 25\n        },\n\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: '30ch',\n        },\n        button: {\n            margin: 20,\n            backgroundColor:blue,\n        },\n    }));\n\n    // const currencies = [\n    //     {\n    //         value: 'female',\n    //         label: 'female',\n    //     },\n    //     {\n    //         value: 'male',\n    //         label: 'male',\n    //     },\n    // ];\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const {empDetailFullList} = useSelector(state => state.hr.affair);\n    const [image,setImage] = useState('');\n    const [zipCode,setZipCode] = useState('');\n    const [basicAddress,setBasicAddress] = useState('');\n    const [email,setEmail] = useState('');\n    const [empName,setEmpName] = useState('');//EMPLOYEE_BASIC\n    const [gender,setGender] = useState('');//EMPLOYEE_BASIC\n    const [birthDate,setBirthDate] = useState('');//EMPLOYEE_BASIC\n    const [levelOfEducation,setLevelOfEducation] = useState('');\n    const [empCode,setEmpCode] = useState('');\n    const [positionName,setPositionName] = useState('');\n    const [deptName,setDeptName] = useState('');\n    let data = [];\n    useEffect(()=>{\n        if(empDetailFullList[0] !== undefined){\n            setImage(empDetailFullList[0].image);\n            setZipCode(empDetailFullList[0].zipCode);\n            setBasicAddress(empDetailFullList[0].basicAddress);\n            setEmail(empDetailFullList[0].email);\n            setEmpName(empDetailFullList[0].empName);\n            setGender(empDetailFullList[0].gender);\n            setBirthDate(empDetailFullList[0].birthDate);\n            setLevelOfEducation(empDetailFullList[0].levelOfEducation);\n            setEmpCode(empDetailFullList[0].empCode);\n            setPositionName(empDetailFullList[0].positionName);\n            setDeptName(empDetailFullList[0].deptName);\n        }\n    },[empDetailFullList])//empDetailFullList의 값이 변경될때만 해당 useEffect 함수 실행 즉 사원로우를 클릭했을때 한번만 실행됨\n\n\n    const update = () => {\n        // axios.post(\"http://localhost:8282/hr/affair/empUpdate.do\",{\n        //     params:{empArray:empDetailFullList}\n        // },{ headers: {\n        //     'Content-Type': 'application/json' },\n        //     }\n        // ).then(response=> {\n        //     console.log('success');\n        // })   \n        // .catch(e => {\n        //     console.log(e);\n        // });\n        data={\n            empCode: empCode,\n            zipCode: zipCode,\n            basicAddress: basicAddress,\n            email: email,\n            empName: empName,\n            gender: gender,\n            birthDate: birthDate,\n            levelOfEducation: levelOfEducation\n        }\n        dispatch({ type: EMP_UPDATE_REQUEST, \n            data: data\n        });\n        alert(\"수정완료\");\n    }\n\n    return (\n        <div className={classes.root1}>\n            <Grid container spacing={1}>\n                <Grid xs={12} sm={7}>\n                        <Grid container spacing={3}>\n                            <Grid sm={12}>\n                                <img \n                                //src={empDetailFullList[0] !== undefined ? empDetailFullList[0].image:''} //src하면 public으로 이동\n                                src={image}//이미지 변경은 구현 안함\n                                width='250'\n                                height='250'/>\n                            </Grid>\n                            <Grid sm={6}>\n                                <TextField\n                                    label=\"우편번호\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].zipCode:''}\n                                    //className={classes.textField}\n                                    value={zipCode}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    fullWidth\n                                    onChange={(e => { \n                                        setZipCode(e.target.value)\n                                    })}\n                                />\n                            </Grid>\n                            <Grid sm={11}>\n                                <TextField\n                                    label=\"주소\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].basicAddress:''}\n                                    //className={classes.textField}\n                                    value={basicAddress}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    fullWidth\n                                    onChange={(e => { setBasicAddress(e.target.value)})}\n                                />\n                            </Grid>\n                            <Grid sm={11}>\n                                <TextField\n                                    label=\"이메일\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].email:''}\n                                    //className={classes.textField}\n                                    value={email}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    fullWidth\n                                    onChange={(e => { setEmail(e.target.value)})}\n                                />\n                            </Grid>\n                            <Grid sm={11}>\n                                <Button\n                                    className={classes.button}\n                                    variant=\"contained\" color=\"primary\" size=\"large\" onClick = {update}\n                                >수정</Button>\n                            </Grid>\n                        </Grid>\n                </Grid>\n\n\n                <Grid xs={12} sm={5}>\n                        <Grid container spacing={1}>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"사원명\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].empName:''}\n                                    value={empName}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={(e => { setEmpName(e.target.value)})}\n                                />\n                            </Grid>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"성별\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].gender:''}\n                                    value={gender}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={(e => { setGender(e.target.value)})}\n                                    //select\n                                >\n                                    {/* {currencies.map((val) => (\n                                    <option key={val.value} value={val.value}>\n                                        {val.label}\n                                    </option>\n                                ))} */}\n                                    </TextField>\n                            </Grid>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"생년월일\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].birthDate:''}\n                                    value={birthDate}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={(e => { setBirthDate(e.target.value)})}\n                                />\n                            </Grid>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"최종학력\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].levelOfEducation:''}\n                                    value={levelOfEducation}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={(e => { setLevelOfEducation(e.target.value)})}\n                                />\n                            </Grid>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"사원코드\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].empCode:''}\n                                    value={empCode}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    //onChange={(e => { setEmpCode(e.target.value)})} 변경하면 안됨\n                                    editable=\"false\"\n                                />\n                            </Grid>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"직급명\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].positionName:''}\n                                    value={positionName}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    //onChange={(e => { setPositionName(e.target.value)})} 상세정보에서 관리할 것이 아니라 인사발령에서 관리 해야함\n                                />\n                            </Grid>\n                            <Grid xs={12}>\n                            <TextField\n                                    label=\"부서명\"\n                                    id=\"outlined-margin-normal\"\n                                    //value={empDetailFullList[0] !== undefined ? empDetailFullList[0].deptName:''}\n                                    value={deptName}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    //onChange={(e => { setDeptName(e.target.value)})} 상세정보에서 관리할 것이 아니라 인사발령에서 관리 해야함\n                                />\n                            </Grid>\n                        </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default BasicInfo;\n\n\n"]},"metadata":{},"sourceType":"module"}