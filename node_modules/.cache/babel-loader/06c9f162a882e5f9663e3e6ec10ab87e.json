{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from './loading';\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return function* (action) {\n    console.log('createRequestSaga: action');\n    console.log(action);\n    console.log(request);\n    console.log('로딩 시작');\n    yield put(startLoading(type)); //로딩 시작\n\n    try {\n      const response = yield call(request, action);\n      console.log('response');\n      console.log(response);\n      console.log('SUCCESS');\n      console.log(SUCCESS);\n      if (response) yield put({\n        type: SUCCESS,\n        payload: response.data\n      });\n      console.log('완료');\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n      console.log('실패');\n      console.log(e);\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/util/createRequestSaga.js"],"names":["call","put","startLoading","finishLoading","createRequestSaga","type","request","SUCCESS","FAILURE","action","console","log","response","payload","data","e","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,WAA5C;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AACrD,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,OAAO,GAAI,GAAEH,IAAK,UAAxB;AAEA,SAAO,WAAUI,MAAV,EAAkB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMV,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT,CALqB,CAKU;;AAC/B,QAAI;AACA,YAAMO,QAAQ,GAAG,MAAMZ,IAAI,CAACM,OAAD,EAAUG,MAAV,CAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,UAAIK,QAAJ,EACI,MAAMX,GAAG,CAAC;AACNI,QAAAA,IAAI,EAAEE,OADA;AAENM,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFZ,OAAD,CAAT;AAIJJ,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KAbD,CAaE,OAAOI,CAAP,EAAU;AACR,YAAMd,GAAG,CAAC;AACNI,QAAAA,IAAI,EAAEG,OADA;AAENK,QAAAA,OAAO,EAAEE,CAFH;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAD,CAAT;AAKAN,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH;;AACD,UAAMd,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT;AACH,GA7BD;AA8BH","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from './loading';\n\nexport default function createRequestSaga(type, request) {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return function*(action) {\n        console.log('createRequestSaga: action');\n        console.log(action);\n        console.log(request);\n        console.log('로딩 시작');\n        yield put(startLoading(type)); //로딩 시작\n        try {\n            const response = yield call(request, action);\n            console.log('response');\n            console.log(response);\n\n            console.log('SUCCESS');\n            console.log(SUCCESS);\n            if (response)\n                yield put({\n                    type: SUCCESS,\n                    payload: response.data\n                });\n            console.log('완료');\n        } catch (e) {\n            yield put({\n                type: FAILURE,\n                payload: e,\n                error: true\n            });\n            console.log('실패');\n            console.log(e);\n        }\n        yield put(finishLoading(type));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}