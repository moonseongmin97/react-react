{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyn\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\hr\\\\dayworker\\\\page\\\\dayworkersalary\\\\DayWorkerSalaryGrid.js\";\nimport React, { useState } from \"react\";\nimport GridStyle from \"./GridStyle\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport { Paper, TextField, Button, Grid, AppBar, Typography, Toolbar } from \"@material-ui/core\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\"; //===========================예솔 일용직 급여 관리 등록/조회 21.12.27======================//\n\nconst DayWorkerSalaryGrid = props => {\n  const [empCode, setEmpCode] = useState();\n  const [empName, setEmpName] = useState();\n  const [joinDate, setJoinDate] = useState();\n  const [workTime, setWorkTime] = useState(); // Grid\n\n  const classes = GridStyle();\n  const column = {\n    columnDefs: [{\n      headerName: \"사원코드\",\n      field: \"empCode\"\n    }, {\n      headerName: \"마지막일자\",\n      field: \"joinDate\",\n      sortable: true,\n      headerCheckboxSelection: true,\n      headerCheckboxSelectionFilteredOnly: true,\n      checkboxSelection: true\n    }, {\n      headerName: \"사원명\",\n      field: \"empName\",\n      hide: true\n    }]\n  };\n\n  const selectDayWorkerSalary = () => {\n    console.log('view!!' + empCode);\n    console.log('view!!' + empName);\n    props.selectDayWorkerSalary(empCode, empName);\n  };\n\n  const insertDayWorkerSalary = e => {\n    console.log(\"insertDayWorkerSalary\" + empCode);\n    console.log(empName);\n    console.log(workTime);\n    props.insertDayWorkerSalaryHandler(empCode, empName, workTime);\n  };\n\n  const insertMonthyWorkerSalary = e => {\n    //월급 프로시저\n    console.log(\"insertMonthyWorkerSalary\" + empCode);\n    console.log(empName);\n    console.log(joinDate);\n    props.insertMonthWorkerSalaryHandler(empCode, empName, joinDate); // window.loaction.reload()\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(AppBar, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\uAE09\\uC5EC\\uACC4\\uC0B0 \\uBC0F \\uC870\\uD68C\"))), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ag-theme-material\" //skipHeaderOnAutoSize=\"true\"\n    ,\n    enableColResize: \"true\",\n    enableSorting: \"true\",\n    enableFilter: \"true\",\n    enableRangeSelection: \"true\",\n    rowStyle: {\n      \"text-align\": \"center\"\n    },\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    cellStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uC0AC\\uC6D0\\uBC88\\uD638\",\n    type: \"text\",\n    defaultValue: empCode,\n    onChange: e => {\n      //지정한 값을 설정한다.\n      setEmpCode(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uC0AC\\uC6D0\\uBA85\",\n    type: \"text\",\n    defaultValue: empName,\n    onChange: e => {\n      setEmpName(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uADFC\\uBB34\\uC2DC\\uAC04\",\n    type: \"text\",\n    defaultValue: workTime,\n    onChange: e => {\n      setWorkTime(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"requestDate\",\n    label: \"\\uD1F4\\uC0AC\\uB0A0\\uC9DC\",\n    type: \"text\",\n    defaultValue: joinDate,\n    onChange: e => {\n      setJoinDate(e.target.value);\n    },\n    className: classes.textField,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), \"    \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: selectDayWorkerSalary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\"), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: insertDayWorkerSalary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"\\uC77C\\uAE09\\uACC4\\uC0B0\\uD558\\uAE30\"), React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: insertMonthyWorkerSalary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"\\uC6D4\\uAE09\\uACC4\\uC0B0\\uD558\\uAE30\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(AgGridReact, {\n    columnDefs: column.columnDefs,\n    rowData: props.dayworkerSalaryData,\n    getRowStyle: function (param) {\n      return {\n        \"text-align\": \"center\"\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))));\n};\n\nexport default DayWorkerSalaryGrid;","map":{"version":3,"sources":["C:/Users/Lyn/Desktop/68REACT/68REACT/68REACT/src/erp/hr/dayworker/page/dayworkersalary/DayWorkerSalaryGrid.js"],"names":["React","useState","GridStyle","moment","Paper","TextField","Button","Grid","AppBar","Typography","Toolbar","AgGridReact","DayWorkerSalaryGrid","props","empCode","setEmpCode","empName","setEmpName","joinDate","setJoinDate","workTime","setWorkTime","classes","column","columnDefs","headerName","field","sortable","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","checkboxSelection","hide","selectDayWorkerSalary","console","log","insertDayWorkerSalary","e","insertDayWorkerSalaryHandler","insertMonthyWorkerSalary","insertMonthWorkerSalaryHandler","height","width","textAlign","target","value","textField","shrink","button","dayworkerSalaryData","param"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport GridStyle from \"./GridStyle\";\r\nimport \"./App.css\";\r\nimport moment from \"moment\";\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Button,\r\n    Grid,\r\n    AppBar,\r\n    Typography,\r\n    Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\n\r\n//===========================예솔 일용직 급여 관리 등록/조회 21.12.27======================//\r\nconst DayWorkerSalaryGrid= props => {\r\n\r\n    const [empCode, setEmpCode ] = useState();\r\n    const [empName, setEmpName ] = useState();\r\n    const [joinDate, setJoinDate ] = useState();\r\n    const [workTime, setWorkTime ] = useState();\r\n        // Grid\r\n        const classes = GridStyle();\r\n \r\n\r\n    const column = {\r\n        columnDefs: [\r\n            { headerName: \"사원코드\", field: \"empCode\"}, \r\n            {\r\n                headerName: \"마지막일자\",\r\n                field: \"joinDate\",\r\n                sortable: true,\r\n                headerCheckboxSelection: true,\r\n                headerCheckboxSelectionFilteredOnly: true,\r\n                checkboxSelection: true,\r\n            },\r\n            { headerName: \"사원명\", field: \"empName\", hide: true },\r\n        ],\r\n    };\r\n\r\n    const selectDayWorkerSalary = () => {\r\n        console.log('view!!' + empCode);\r\n        console.log('view!!' + empName);\r\n        props.selectDayWorkerSalary(empCode, empName);\r\n    };\r\n    const insertDayWorkerSalary = (e) => {\r\n        console.log(\"insertDayWorkerSalary\"+empCode);\r\n        console.log(empName);\r\n        console.log(workTime);\r\n           props.insertDayWorkerSalaryHandler(empCode,empName,workTime); \r\n    }\r\n  \r\n\r\n     const insertMonthyWorkerSalary = (e) => {     //월급 프로시저\r\n        console.log(\"insertMonthyWorkerSalary\"+empCode);\r\n        console.log(empName);\r\n        console.log(joinDate);\r\n        props.insertMonthWorkerSalaryHandler(empCode, empName,joinDate)\r\n        // window.loaction.reload()\r\n     };\r\n\r\n    return (\r\n        <>\r\n        <AppBar position=\"relative\">\r\n                    <Toolbar>\r\n                        <Typography component=\"h2\" variant=\"h4\">\r\n                             급여계산 및 조회\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n          \r\n                <Grid container spacing={1}>\r\n                         \r\n                            <div\r\n                                className={\"ag-theme-material\"}\r\n                                //skipHeaderOnAutoSize=\"true\"\r\n                                enableColResize=\"true\"\r\n                                enableSorting=\"true\"\r\n                                enableFilter=\"true\"\r\n                                enableRangeSelection=\"true\"\r\n                                rowStyle={{ \"text-align\": \"center\" }}\r\n                                style={{\r\n                                    height: \"500px\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                                cellStyle={{ textAlign: \"center\" }}\r\n                            >\r\n                                      <br />\r\n                            <br />\r\n                                <div align=\"center\">\r\n                                <TextField\r\n                                    id=\"requestDate\"\r\n                                    label=\"사원번호\"\r\n                                    type=\"text\"\r\n                                    defaultValue={empCode}\r\n                                    onChange={e => {     //지정한 값을 설정한다.\r\n                                    setEmpCode(e.target.value);\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    />\r\n                                    <TextField\r\n                                    id=\"requestDate\"\r\n                                    label=\"사원명\"\r\n                                    type=\"text\"\r\n                                    defaultValue={empName}\r\n                                    onChange={e => {\r\n                                    setEmpName(e.target.value);\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    />\r\n                                     <TextField\r\n                                    id=\"requestDate\"\r\n                                    label=\"근무시간\"\r\n                                    type=\"text\"\r\n                                    defaultValue={workTime}\r\n                                    onChange={e => {  \r\n                                    setWorkTime(e.target.value);\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    />\r\n                                     <TextField\r\n                                    id=\"requestDate\"\r\n                                    label=\"퇴사날짜\"\r\n                                    type=\"text\"\r\n                                    defaultValue={joinDate}\r\n                                    onChange={e => {  \r\n                                    setJoinDate(e.target.value);\r\n                                    }}\r\n                                    className={classes.textField}\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    />    <br/>\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={selectDayWorkerSalary}\r\n                                    >조회\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={insertDayWorkerSalary}\r\n                                    >일급계산하기\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={insertMonthyWorkerSalary}\r\n                                    >월급계산하기\r\n                                    </Button>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                <AgGridReact\r\n                                    columnDefs={column.columnDefs}\r\n                                    rowData={props.dayworkerSalaryData}\r\n                                    getRowStyle={function (param) {\r\n                                        return { \"text-align\": \"center\" };\r\n                                    }}\r\n                                    \r\n                                />\r\n                            </div>\r\n                            </Grid>\r\n             </>\r\n    );\r\n};\r\n\r\nexport default DayWorkerSalaryGrid;\r\n"]},"metadata":{},"sourceType":"module"}