{"ast":null,"code":"import axios from 'api/logiApi'; //'http://localhost:8282/logi'\n\nimport axios2 from 'api/hrApi'; // 'http://localhost:8282/hr'\n\nexport const warehouseInfo = () => axios.get('/base/warehouseInfo');\nexport const saveWarehouseInfo = action => axios.post('/base/batchListProcess', {\n  warehouseInfo: action.payload\n});\nexport const searchItemA = (code, detailCode) => axios.get('/base/searchItem', {\n  params: {\n    searchCondition: code,\n    itemClassification: 'a',\n    itemGroupCode: detailCode,\n    minPrice: '',\n    maxPrice: ''\n  }\n});\n/* ItemInfo.js */\n\nexport const searchItemB = (code, detailCode) => axios.get('/base/searchItem', {\n  params: {\n    searchCondition: code,\n    itemClassification: detailCode,\n    itemGroupCode: 'c',\n    minPrice: '',\n    maxPrice: ''\n  }\n});\nexport const searchList = divisionCode => axios.get('/base/codeList', {\n  params: {\n    divisionCode: divisionCode\n  }\n});\nexport const batchItemListProcess = map => axios.post('/base/batchItemListProcess', {\n  batchList: map\n});\nexport const delBatchList = delList => axios.post('/base/batchItemListProcess', {\n  batchList: delList\n});\nexport const rowsBatchList = rows => axios.post('/base/batchItemListProcess', {\n  batchList: rows\n});\nexport const saveDetailCodeInfo = action => axios.post('/base/batchDetailListProcess', {\n  detailCodeList: action.payload.detailCodeList\n});\nexport const saveCodeInfo = action => axios.post('/base/batchListProcess', {\n  codeList: action.payload\n});\n/* ItemInfo.js */\n\nexport const standardUnitPrice = (minPrice, maxPrice) => axios.get('/base/searchItem', {\n  params: {\n    searchCondition: 'STANDARD_UNIT_PRICE',\n    itemClassification: 'a',\n    itemGroupCode: 'n',\n    //의미없음\n    minPrice: minPrice + '',\n    maxPrice: maxPrice + ''\n  }\n});\nexport const searchAllList = () => axios.get('/base/searchItem', {\n  params: {\n    searchCondition: 'ALL',\n    itemClassification: '',\n    itemGroupCode: '',\n    minPrice: '',\n    maxPrice: ''\n  }\n});\nexport const searchItem = async (divisionCode, setList, props, minPrice, maxPrice) => {\n  if (divisionCode !== 'standardUnitPrice' || '') {\n    await axios.get('/base/codeList', {\n      params: {\n        divisionCode: divisionCode\n      }\n    }).then(function (respones) {\n      setList(respones.data.detailCodeList);\n    });\n  }\n\n  if (divisionCode === 'standardUnitPrice') {\n    await axios.get('/base/searchItem', {\n      params: {\n        searchCondition: 'STANDARD_UNIT_PRICE',\n        itemClassification: 'a',\n        itemGroupCode: 'n',\n        //의미없음\n        minPrice: minPrice + '',\n        maxPrice: maxPrice + ''\n      }\n    }).then(function (respones) {\n      props.list(respones.data.gridRowJson);\n      props.close();\n    });\n  }\n\n  if (divisionCode === '') {\n    await axios.get('/base/searchItem', {\n      params: {\n        searchCondition: 'ALL',\n        itemClassification: '',\n        itemGroupCode: '',\n        minPrice: '',\n        maxPrice: ''\n      }\n    }).then(function (respones) {\n      props.list(respones.data.gridRowJson);\n      props.close();\n    });\n  }\n};\n/****************** 사업장 정보 *********************/\n\nexport const workplaceInfo = () => axios2.get('/company/searchWorkplace', {\n  params: {\n    companyCode: 'COM-01'\n  }\n});\nexport const saveWorkplace = action => axios2.post('/company/batchFinancialAccountAssociatesListProcess', {\n  batchList: action.payload\n});\n/****************** 일반거래처 & 금융거래처 정보 *********************/\n\nexport const searchClient = action => axios2.get('/company/searchCustomer', {\n  params: {\n    searchCondition: action.payload.searchCondition,\n    workplaceCode: action.payload.workplaceCode\n  }\n});\nexport const saveClient = action => axios2.post('/company/batchWorkplaceListProcess', {\n  batchList: action.payload\n});\nexport const searchFinan = action => axios2.get('/company/searchFinancialAccountAssociatesList', {\n  params: {\n    searchCondition: action.payload.searchCondition,\n    workplaceCode: action.payload.workplaceCode\n  }\n});\nexport const saveFinanInfo = action => axios2.post('/company/batchCustomerListProcess', {\n  batchList: action.payload\n});\n/****************** 부서 정보 *********************/\n\nexport const deptInfoRequest = action => axios2.get('/company/searchDepartment', {\n  params: {\n    searchCondition: action.payload.searchCondition,\n    companyCode: action.payload.companyCode,\n    workplaceCode: action.payload.workplaceCode\n  }\n});\nexport const saveDeptInfo = action => axios2.post('/company/batchDepartmentListProcess', {\n  batchList: action.payload\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/base/api/index.js"],"names":["axios","axios2","warehouseInfo","get","saveWarehouseInfo","action","post","payload","searchItemA","code","detailCode","params","searchCondition","itemClassification","itemGroupCode","minPrice","maxPrice","searchItemB","searchList","divisionCode","batchItemListProcess","map","batchList","delBatchList","delList","rowsBatchList","rows","saveDetailCodeInfo","detailCodeList","saveCodeInfo","codeList","standardUnitPrice","searchAllList","searchItem","setList","props","then","respones","data","list","gridRowJson","close","workplaceInfo","companyCode","saveWorkplace","searchClient","workplaceCode","saveClient","searchFinan","saveFinanInfo","deptInfoRequest","saveDeptInfo"],"mappings":"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","sourcesContent":["import axios from 'api/logiApi';  //'http://localhost:8282/logi'\nimport axios2 from 'api/hrApi'; // 'http://localhost:8282/hr'\n\n\nexport const warehouseInfo = () =>\n    axios.get('/base/warehouseInfo');\n\n\nexport const saveWarehouseInfo = (action) =>\n    axios.post(\n        '/base/batchListProcess',\n        {\n            warehouseInfo: action.payload\n        }\n    );\n\n\nexport const searchItemA = \n(code, detailCode) => axios.get('/base/searchItem', {\n    params: {\n        searchCondition: code,\n        itemClassification: 'a',\n        itemGroupCode: detailCode,\n        minPrice: '',\n        maxPrice: ''\n    }\n})\n\n\n/* ItemInfo.js */\nexport const searchItemB =\n(code, detailCode) => axios.get('/base/searchItem', {\n    params: {\n        searchCondition: code,\n        itemClassification: detailCode,\n        itemGroupCode: 'c',\n        minPrice: '',\n        maxPrice: ''\n    }\n})\n\n    export const searchList = \n    divisionCode => axios.get('/base/codeList', {\n        params: {\n            divisionCode: divisionCode\n        }\n    })\n\n    export const batchItemListProcess =\n    map => axios.post('/base/batchItemListProcess', {\n        batchList: map\n    })\n\n    export const delBatchList =\n    delList => axios.post('/base/batchItemListProcess', {\n        batchList: delList\n    })\n\n    export const rowsBatchList =\n    rows => axios.post('/base/batchItemListProcess', {\n        batchList: rows\n    })\n\n    export const saveDetailCodeInfo = action => axios.post(\n        '/base/batchDetailListProcess',\n        {\n            detailCodeList: action.payload.detailCodeList\n        }\n    );\n\n    export const saveCodeInfo = action =>\n    axios.post('/base/batchListProcess', {\n            codeList: action.payload\n        });\n/* ItemInfo.js */\n\n    export const standardUnitPrice =\n    (minPrice, maxPrice) => axios.get('/base/searchItem', {\n        params: {\n            searchCondition: 'STANDARD_UNIT_PRICE',\n            itemClassification: 'a',\n            itemGroupCode: 'n', //의미없음\n            minPrice: minPrice + '',\n            maxPrice: maxPrice + ''\n        }\n    })\n\n    export const searchAllList = \n    () => axios.get('/base/searchItem', {\n        params: {\n            searchCondition: 'ALL',\n            itemClassification: '',\n            itemGroupCode: '',\n            minPrice: '',\n            maxPrice: ''\n        }\n    })\n\nexport const searchItem = async (divisionCode,setList,props,minPrice,maxPrice) => {\n        if (divisionCode !== 'standardUnitPrice' || '') {\n            await axios.get('/base/codeList', {\n                params: {\n                    divisionCode: divisionCode\n                }\n            }).then(function(respones) {\n                setList(respones.data.detailCodeList);\n            });\n        }\n        if (divisionCode === 'standardUnitPrice') {\n            await axios.get('/base/searchItem', {\n                params: {\n                    searchCondition: 'STANDARD_UNIT_PRICE',\n                    itemClassification: 'a',\n                    itemGroupCode: 'n', //의미없음\n                    minPrice: minPrice + '',\n                    maxPrice: maxPrice + ''\n                }\n            }).then(function(respones) {\n                props.list(respones.data.gridRowJson);\n                props.close();\n            });\n        }\n        if (divisionCode === '') {\n            await axios.get('/base/searchItem', {\n                params: {\n                    searchCondition: 'ALL',\n                    itemClassification: '',\n                    itemGroupCode: '',\n                    minPrice: '',\n                    maxPrice: ''\n                }\n            }).then(function(respones) {\n                props.list(respones.data.gridRowJson);\n                props.close();\n            });\n        }\n    }\n\n\n/****************** 사업장 정보 *********************/\nexport const workplaceInfo = () =>\n    axios2.get('/company/searchWorkplace', {\n        params: {\n        companyCode: 'COM-01'\n        }\n    });\n\nexport const saveWorkplace = action =>\n    axios2.post('/company/batchFinancialAccountAssociatesListProcess', {\n        batchList: action.payload\n    });\n\n\n/****************** 일반거래처 & 금융거래처 정보 *********************/\n\nexport const searchClient = action =>\n    axios2.get('/company/searchCustomer', \n    \n    { params: {\n            searchCondition: action.payload.searchCondition,\n            workplaceCode: action.payload.workplaceCode\n          }\n    }\n);\n\nexport const saveClient = action =>\naxios2.post(\n    '/company/batchWorkplaceListProcess',\n    { batchList: action.payload }\n);\n\nexport const searchFinan = action =>\n    axios2.get('/company/searchFinancialAccountAssociatesList', \n    \n    { params: {\n        searchCondition: action.payload.searchCondition,\n        workplaceCode: action.payload.workplaceCode\n          }\n    }\n);\n\nexport const saveFinanInfo = action =>\naxios2.post(\n    '/company/batchCustomerListProcess',\n    { batchList: action.payload }\n);\n\n\n/****************** 부서 정보 *********************/\n\nexport const deptInfoRequest = action =>\naxios2.get('/company/searchDepartment', \n{\n    params: {\n        searchCondition: action.payload.searchCondition,\n        companyCode: action.payload.companyCode,\n        workplaceCode: action.payload.workplaceCode\n    }\n});\n\n\nexport const saveDeptInfo = action =>\naxios2.post(\n    '/company/batchDepartmentListProcess',\n    { batchList: action.payload }\n);\n\n"]},"metadata":{},"sourceType":"module"}