{"ast":null,"code":"import { put, takeEvery, takeLatest, call, delay, all } from 'redux-saga/effects';\nimport createRequestSaga from 'util/createRequestSaga';\nimport * as types from 'erp/logistic/base/action/BasicInfoActionType';\nimport * as api from '../api';\nconst workplaceInfo = createRequestSaga(types.SEARCH_WORKPLACE_LIST, api.workplaceInfo);\nconst saveWorkplace = createRequestSaga(types.SAVE_WORKPLACE, api.saveWorkplace);\n\nfunction* addWorkplace(action) {\n  try {\n    yield put({\n      type: types.WORKPLACE_LIST,\n      mode: 'add',\n      workplaceTo: action.payload.workplaceTo\n    });\n  } catch (error) {\n    alert(error);\n  }\n}\n\nfunction* delWorkplace(action) {\n  try {\n    yield put({\n      type: types.WORKPLACE_LIST,\n      mode: 'delete',\n      newList: action.payload.newList\n    });\n  } catch (error) {\n    alert(error);\n  }\n}\n\nexport function* workplace() {\n  yield takeEvery(types.SAVE_WORKPLACE, saveWorkplace);\n  yield takeEvery(types.SEARCH_WORKPLACE_LIST, workplaceInfo);\n  yield takeEvery(types.ADD_WORKPLACE, addWorkplace);\n  yield takeEvery(types.DEL_WORKPLACE, delWorkplace);\n}\n/****************** 거래처정보 saga *********************/\n\nconst searchClient = createRequestSaga(types.SEARCH_CLIENTINFO, api.searchClient);\nconst searchFinan = createRequestSaga(types.SEARCH_FINANINFO, api.searchFinan);\nconst saveClient = createRequestSaga(types.SAVE_CLIENTINFO, api.saveClient);\nconst saveFinanInfo = createRequestSaga(types.SAVE_FINANINFO, api.saveFinanInfo);\nexport function* clientinfo() {\n  yield takeEvery(types.SEARCH_CLIENTINFO, searchClient);\n  yield takeEvery(types.SEARCH_FINANINFO, searchFinan);\n  yield takeEvery(types.SAVE_CLIENTINFO, saveClient);\n  yield takeEvery(types.SAVE_FINANINFO, saveFinanInfo);\n}\n/****************** 부서정보 saga *****************/\n\nconst deptInfoRequest = createRequestSaga(types.SEARCH_DEPTINFO, api.deptInfoRequest);\nconst saveDeptInfo = createRequestSaga(types.SAVE_DEPTINFO, api.saveDeptInfo);\nexport function* deptinfo() {\n  yield takeLatest(types.SEARCH_DEPTINFO, deptInfoRequest);\n  yield takeLatest(types.SAVE_DEPTINFO, saveDeptInfo);\n}\nexport default function* BasicInfoSaga() {\n  yield all([call(workplace), // 사업장\n  call(clientinfo), //미노\n  call(deptinfo) // 부서 정보\n  ]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT/68REACT/src/erp/logistic/base/saga/BasicInfoSaga.js"],"names":["put","takeEvery","takeLatest","call","delay","all","createRequestSaga","types","api","workplaceInfo","SEARCH_WORKPLACE_LIST","saveWorkplace","SAVE_WORKPLACE","addWorkplace","action","type","WORKPLACE_LIST","mode","workplaceTo","payload","error","alert","delWorkplace","newList","workplace","ADD_WORKPLACE","DEL_WORKPLACE","searchClient","SEARCH_CLIENTINFO","searchFinan","SEARCH_FINANINFO","saveClient","SAVE_CLIENTINFO","saveFinanInfo","SAVE_FINANINFO","clientinfo","deptInfoRequest","SEARCH_DEPTINFO","saveDeptInfo","SAVE_DEPTINFO","deptinfo","BasicInfoSaga"],"mappings":"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","sourcesContent":["import { put, takeEvery, takeLatest, call, delay, all } from 'redux-saga/effects';\nimport createRequestSaga from 'util/createRequestSaga';\nimport * as types from 'erp/logistic/base/action/BasicInfoActionType';\nimport * as api from '../api';\n\nconst workplaceInfo = createRequestSaga(types.SEARCH_WORKPLACE_LIST, api.workplaceInfo);\nconst saveWorkplace = createRequestSaga(types.SAVE_WORKPLACE, api.saveWorkplace);\n\nfunction* addWorkplace(action) {\n    try {\n        yield put({\n            type: types.WORKPLACE_LIST,\n            mode: 'add',\n            workplaceTo: action.payload.workplaceTo\n        });\n    } catch (error) {\n        alert(error);\n    }\n}\n\nfunction* delWorkplace(action) {\n    try {\n        yield put({ type: types.WORKPLACE_LIST, mode: 'delete', newList: action.payload.newList });\n    } catch (error) {\n        alert(error);\n    }\n}\n\nexport function* workplace() {\n    yield takeEvery(types.SAVE_WORKPLACE, saveWorkplace);\n    yield takeEvery(types.SEARCH_WORKPLACE_LIST, workplaceInfo);\n    yield takeEvery(types.ADD_WORKPLACE, addWorkplace);\n    yield takeEvery(types.DEL_WORKPLACE, delWorkplace);\n}\n\n/****************** 거래처정보 saga *********************/\n\nconst searchClient = createRequestSaga(types.SEARCH_CLIENTINFO, api.searchClient);\nconst searchFinan = createRequestSaga(types.SEARCH_FINANINFO, api.searchFinan);\nconst saveClient = createRequestSaga(types.SAVE_CLIENTINFO, api.saveClient);\nconst saveFinanInfo = createRequestSaga(types.SAVE_FINANINFO, api.saveFinanInfo);\n\nexport function* clientinfo() {\n    yield takeEvery(types.SEARCH_CLIENTINFO, searchClient);\n    yield takeEvery(types.SEARCH_FINANINFO, searchFinan);\n    yield takeEvery(types.SAVE_CLIENTINFO, saveClient);\n    yield takeEvery(types.SAVE_FINANINFO, saveFinanInfo);\n}\n\n/****************** 부서정보 saga *****************/\nconst deptInfoRequest = createRequestSaga(types.SEARCH_DEPTINFO, api.deptInfoRequest);\nconst saveDeptInfo = createRequestSaga(types.SAVE_DEPTINFO, api.saveDeptInfo);\n\nexport function* deptinfo() {\n    yield takeLatest(types.SEARCH_DEPTINFO, deptInfoRequest);\n    yield takeLatest(types.SAVE_DEPTINFO, saveDeptInfo);\n}\n\nexport default function* BasicInfoSaga() {\n    yield all([\n        call(workplace), // 사업장\n        call(clientinfo), //미노\n        call(deptinfo) // 부서 정보\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}