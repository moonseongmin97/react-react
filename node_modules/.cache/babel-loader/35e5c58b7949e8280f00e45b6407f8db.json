{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\68REACT\\\\68REACT\\\\68REACT\\\\src\\\\erp\\\\logistic\\\\outsourc\\\\page\\\\Forward\\\\Forward.js\";\nimport { Button } from '@material-ui/core';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport Axios from 'axios';\nimport ForwardOrderDialog from './ForwardOrderDialog';\nimport Swal from 'sweetalert2';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport moment from 'moment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport useAsync from 'util/useAsync';\nimport * as api from '../../api';\n\nfunction Forward(props) {\n  const [list, setList] = useState([]);\n  const [size, setSize] = useState('50vh');\n  const [searchOpenDialog, setSearchOpenDialog] = useState(false);\n  const [data, setData] = useState([]);\n  let today = moment(new Date()).format('yyyy-MM-DD');\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(today);\n  const [condition, setCondition] = useState('claimDate');\n  const [outsoutcInfoList, outsoutcInfoListFetch] = useAsync(param => api.searchForwardableList(param), [], true);\n  const [gridApi, setGridApi] = useState();\n  const [seq, setSeq] = useState(null);\n  const [id, setId] = useState(null);\n  const column = {\n    columnDefs: [{\n      headerName: '외주발주번호',\n      field: 'outsourcNo',\n      suppressSizeToFit: true,\n      headerCheckboxSelection: false,\n      headerCheckboxSelectionFilteredOnly: true,\n      suppressRowClickSelection: true,\n      checkboxSelection: true\n    }, {\n      headerName: '소요량취합번호',\n      field: 'mrpGatheringNo'\n    }, {\n      headerName: '품목코드',\n      field: 'itemCode'\n    }, {\n      headerName: '품목명',\n      field: 'itemName'\n    }, {\n      headerName: '단위',\n      field: 'unitOfMrpGathering'\n    }, {\n      headerName: '필요수량',\n      field: 'outsourcAmount'\n    }, {\n      headerName: '작업지시기한',\n      field: 'claimDate'\n    }, {\n      headerName: '작업완료기한',\n      field: 'dueDate'\n    }, {\n      headerName: 'status',\n      field: 'forwardStatus',\n      hide: true\n    }]\n  };\n\n  const basicInfo = (startDate, endDate) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const onChangeDate = e => {\n    console.log(e);\n\n    if (e.target.id === 'startDate') {\n      setStartDate(e.target.value);\n    } else {\n      setEndDate(e.target.value);\n    }\n  };\n\n  const conditionChange = e => {\n    setCondition(e.target.value);\n  };\n\n  const onRowSelected = params => {\n    setData(params);\n  };\n\n  const onClick = () => {\n    let selectNodes = gridApi.getSelectedNodes();\n\n    if (selectNodes.length === 0) {\n      return alert(\"선택하셈\");\n    } else {\n      customerSearchClick();\n    }\n  };\n\n  const customerSearchClick = () => {\n    setSearchOpenDialog(true);\n  };\n\n  const close = () => {\n    setSearchOpenDialog(false);\n    const rows = gridApi.getSelectedRows();\n    gridApi.updateRowData({\n      remove: rows\n    });\n  };\n\n  const onClicked = () => {\n    const param = {\n      searchDateCondition: condition,\n      startDate: startDate,\n      endDate: endDate\n    };\n    outsoutcInfoListFetch(param);\n  };\n\n  function onGridReadyEstimateDetail(params) {\n    setGridApi(params.api);\n    params.api.sizeColumnsToFit();\n  }\n\n  const onClicked2 = useCallback(() => {\n    console.log(sessionStorage.getItem('empCodeInfo_token'));\n    console.log(seq);\n  }, [seq]);\n  useEffect(() => {\n    let seq = localStorage.getItem('seq');\n\n    if (!seq) {\n      seq = 0;\n    } else {\n      seq++;\n    }\n\n    localStorage.setItem('seq', seq);\n    console.log(localStorage.getItem('seq'));\n    setSeq(seq);\n  }, []);\n  useEffect(() => {\n    setId(sessionStorage.getItem('empCodeInfo_token'));\n  }, []);\n  const forwardTempDelete = useCallback(() => {\n    Axios.delete('http://localhost:8282/logi/outsourc/forwardTempDelete', {\n      params: {\n        id: id,\n        seq: seq\n      }\n    });\n  }, [id, seq]);\n  window.onbeforeunload = useCallback(() => {\n    forwardTempDelete();\n  }, [forwardTempDelete]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(MyGrid, {\n    column: column,\n    title: '외주 자재 출고 필요 리스트 ( MRP 취합 기반 )',\n    list: outsoutcInfoList.data ? outsoutcInfoList.data.gridRowJson : null,\n    onRowSelected: onRowSelected,\n    rowSelection: \"single\",\n    size: size,\n    api: onGridReadyEstimateDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    align: \"left\",\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"searchDateCondition\",\n    name: \"searchDateCondition\",\n    defaultValue: \"claimDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"claimDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"dueDate\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }),\n    label: \"\\uBC1C\\uC8FC/\\uC791\\uC5C5\\uC9C0\\uC2DC \\uC644\\uB8CC\\uAE30\\uD55C\",\n    style: {\n      marginRight: '1vh',\n      marginTop: '1vh'\n    },\n    onChange: conditionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(MyCalendar, {\n    onChangeDate: onChangeDate,\n    basicInfo: basicInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC \\uC790\\uC7AC \\uCD9C\\uACE0 \\uBAA8\\uC758\\uC804\\uAC1C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\uC678\\uC8FC \\uC790\\uC7AC \\uCD9C\\uACE0 \\uD544\\uC694 \\uBAA9\\uB85D\\uC870\\uD68C\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClicked2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"\\uB85C\\uCEEC\\uC2A4\\uD1A0\\uB9AC\\uC9C0 \\uD655\\uC778\\uD558\\uAE30\")), React.createElement(MyDialog, {\n    open: searchOpenDialog,\n    close: close,\n    maxWidth: '200px',\n    forwardTempDelete: forwardTempDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(ForwardOrderDialog, {\n    data: data,\n    id: sessionStorage.getItem('empCodeInfo_token'),\n    seq: seq,\n    close: close,\n    setList: setList,\n    gridApi: gridApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }))));\n}\n\nexport default Forward;","map":{"version":3,"sources":["C:/Users/USER/Desktop/68REACT/68REACT/68REACT/src/erp/logistic/outsourc/page/Forward/Forward.js"],"names":["Button","React","useState","useCallback","useEffect","MyGrid","MyDialog","Axios","ForwardOrderDialog","Swal","MyCalendar","moment","Radio","RadioGroup","FormControlLabel","useAsync","api","Forward","props","list","setList","size","setSize","searchOpenDialog","setSearchOpenDialog","data","setData","today","Date","format","startDate","setStartDate","endDate","setEndDate","condition","setCondition","outsoutcInfoList","outsoutcInfoListFetch","param","searchForwardableList","gridApi","setGridApi","seq","setSeq","id","setId","column","columnDefs","headerName","field","suppressSizeToFit","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","suppressRowClickSelection","checkboxSelection","hide","basicInfo","onChangeDate","e","console","log","target","value","conditionChange","onRowSelected","params","onClick","selectNodes","getSelectedNodes","length","alert","customerSearchClick","close","rows","getSelectedRows","updateRowData","remove","onClicked","searchDateCondition","onGridReadyEstimateDetail","sizeColumnsToFit","onClicked2","sessionStorage","getItem","localStorage","setItem","forwardTempDelete","delete","window","onbeforeunload","gridRowJson","float","marginRight","marginTop"],"mappings":"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","sourcesContent":["\nimport { Button } from '@material-ui/core';\nimport React, { useState,useCallback, useEffect, } from 'react';\nimport MyGrid from 'util/LogiUtil/MyGrid';\nimport MyDialog from 'util/LogiUtil/MyDialog';\nimport Axios from 'axios';\nimport ForwardOrderDialog from './ForwardOrderDialog';\nimport Swal from 'sweetalert2';\nimport MyCalendar from 'util/LogiUtil/MyCalendar';\nimport moment from 'moment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport useAsync from 'util/useAsync';\nimport * as api from '../../api';\n\nfunction Forward(props) {\n    const [list, setList] = useState([]);\n    const [size, setSize] = useState('50vh');\n    const [searchOpenDialog, setSearchOpenDialog] = useState(false);\n    const [data, setData] = useState([]);\n\n    let today = moment(new Date()).format('yyyy-MM-DD');\n    const [startDate, setStartDate] = useState(today);\n    const [endDate, setEndDate] = useState(today);\n    const [condition, setCondition] = useState('claimDate');\n    const [outsoutcInfoList, outsoutcInfoListFetch] = useAsync((param) =>api.searchForwardableList(param), [], true);\n    const [gridApi, setGridApi] = useState();\n    const [seq, setSeq] = useState(null);\n    const [id, setId] = useState(null);\n \n    const column = {\n        columnDefs: [\n            {\n                headerName: '외주발주번호',\n                field: 'outsourcNo',\n                suppressSizeToFit: true,\n                headerCheckboxSelection: false,\n                headerCheckboxSelectionFilteredOnly: true,\n                suppressRowClickSelection: true,\n                checkboxSelection: true},\n           \n            {\n                headerName: '소요량취합번호',\n                field: 'mrpGatheringNo'\n            },\n            { headerName: '품목코드', field: 'itemCode' },\n            { headerName: '품목명', field: 'itemName' },\n            { headerName: '단위', field: 'unitOfMrpGathering' },\n            { headerName: '필요수량', field: 'outsourcAmount' },\n            { headerName: '작업지시기한', field: 'claimDate' },\n            { headerName: '작업완료기한', field: 'dueDate' },\n            { headerName: 'status', field: 'forwardStatus', hide :true  }\n        ]\n    };\n\n    const basicInfo = (startDate, endDate) => {\n        setStartDate(startDate);\n        setEndDate(endDate);\n    };\n\n    const onChangeDate = e => {\n        console.log(e);\n        if (e.target.id === 'startDate') {\n            setStartDate(e.target.value);\n        } else {\n            setEndDate(e.target.value);\n        }\n    };\n\n    const conditionChange = e => {\n        setCondition(e.target.value);\n    };\n\n    const onRowSelected = params => {\n        setData(params);\n    \n    };\n\n    const onClick = () => {\n        let selectNodes = gridApi.getSelectedNodes();\n        if (selectNodes.length === 0) {\n            return alert(\"선택하셈\")\n        }else{\n            customerSearchClick();\n        }\n    };\n\n    const customerSearchClick = () => {\n        setSearchOpenDialog(true);\n    };\n\n    const close = () => {\n        setSearchOpenDialog(false);\n        const rows = gridApi.getSelectedRows();\n        gridApi.updateRowData({remove:rows});\n    };\n\n    const onClicked = () => {\n        const param = {\n            searchDateCondition: condition,\n            startDate: startDate,\n            endDate: endDate\n        }\n        outsoutcInfoListFetch(param);\n    };\n\n    function onGridReadyEstimateDetail(params) {\n        setGridApi(params.api);\n        params.api.sizeColumnsToFit();\n    }\n\n    const onClicked2 = useCallback(() =>{\n        console.log(sessionStorage.getItem('empCodeInfo_token'));\n        console.log(seq);\n    },[seq]);\n\n    useEffect(() => {\n        let seq = localStorage.getItem('seq');\n        if(!seq){\n            seq = 0;\n        }else{\n            seq++; \n        }\n        localStorage.setItem('seq', seq);\n        console.log(localStorage.getItem('seq'));\n        setSeq(seq);\n    },[]);\n\n    useEffect(() => {\n        setId(sessionStorage.getItem('empCodeInfo_token'));\n    },[]);\n\n    const forwardTempDelete = useCallback(() => {\n\n        Axios.delete('http://localhost:8282/logi/outsourc/forwardTempDelete', {\n            params: {\n                id: id,\n                seq: seq\n            }\n        })\n\n    },[id, seq]);\n\n    window.onbeforeunload = useCallback(() =>{\n        forwardTempDelete();\n    },[forwardTempDelete]);\n    \n    return (\n        <>\n            <div>\n                <MyGrid\n                    column={column}\n                    title={'외주 자재 출고 필요 리스트 ( MRP 취합 기반 )'}\n                    list={outsoutcInfoList.data?outsoutcInfoList.data.gridRowJson:null}\n                    onRowSelected={onRowSelected}\n                    rowSelection=\"single\"\n                    size={size}\n                    api={onGridReadyEstimateDetail}\n                >\n                      <div align=\"left\" style={{ float: 'left' }}>\n                    <RadioGroup\n                        row\n                        aria-label=\"searchDateCondition\"\n                        name=\"searchDateCondition\"\n                        defaultValue=\"claimDate\"\n                    >\n                        <FormControlLabel\n                            value=\"claimDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                        <FormControlLabel\n                            value=\"dueDate\"\n                            control={<Radio />}\n                            label=\"발주/작업지시 완료기한\"\n                            style={{ marginRight: '1vh', marginTop: '1vh' }}\n                            onChange={conditionChange}\n                        />\n                    </RadioGroup>\n                </div>\n\n                    <MyCalendar onChangeDate={onChangeDate} basicInfo={basicInfo}/>\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={onClick}>\n                    외주 자재 출고 모의전개\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={onClicked}>\n                    외주 자재 출고 필요 목록조회\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={onClicked2}>\n                    로컬스토리지 확인하기\n                    </Button>\n                </MyGrid>\n                <MyDialog open={searchOpenDialog} close={close} maxWidth={'200px'}\n                forwardTempDelete={forwardTempDelete}>\n                    <ForwardOrderDialog \n                    data={data} \n                    id={sessionStorage.getItem('empCodeInfo_token')}\n                    seq={seq}\n                    close={close} \n                    setList={setList}\n                    gridApi={gridApi}\n                    />\n                </MyDialog>\n            </div>\n        </>\n    );\n}\n\nexport default Forward;\n"]},"metadata":{},"sourceType":"module"}