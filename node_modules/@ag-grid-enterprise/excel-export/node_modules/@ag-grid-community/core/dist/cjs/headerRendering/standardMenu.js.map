{"version":3,"sources":["../../src/ts/headerRendering/standardMenu.ts"],"names":[],"mappings":"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","file":"standardMenu.js","sourcesContent":["import { Autowired, Bean } from '../context/context';\nimport { IMenuFactory } from '../interfaces/iMenuFactory';\nimport { FilterManager } from '../filter/filterManager';\nimport { Column } from '../entities/column';\nimport { PopupService } from '../widgets/popupService';\nimport { EventService } from '../eventService';\nimport { IAfterGuiAttachedParams } from '../interfaces/iAfterGuiAttachedParams';\nimport { _ } from '../utils';\n\n@Bean('menuFactory')\nexport class StandardMenuFactory implements IMenuFactory {\n    @Autowired('eventService') private eventService: EventService;\n    @Autowired('filterManager') private filterManager: FilterManager;\n    @Autowired('popupService') private popupService: PopupService;\n\n    private hidePopup: () => void;\n\n    public hideActiveMenu(): void {\n        if (this.hidePopup) {\n            this.hidePopup();\n        }\n    }\n\n    public showMenuAfterMouseEvent(column: Column, mouseEvent: MouseEvent | Touch): void {\n        this.showPopup(column, eMenu => {\n            this.popupService.positionPopupUnderMouseEvent({\n                column,\n                type: 'columnMenu',\n                mouseEvent,\n                ePopup: eMenu\n            });\n        });\n    }\n\n    public showMenuAfterButtonClick(column: Column, eventSource: HTMLElement): void {\n        this.showPopup(column, eMenu => {\n            this.popupService.positionPopupUnderComponent({\n                type: 'columnMenu',\n                eventSource,\n                ePopup: eMenu,\n                keepWithinBounds: true,\n                column\n            });\n        });\n    }\n\n    public showPopup(column: Column, positionCallback: (eMenu: HTMLElement) => void): void {\n        const filterWrapper = this.filterManager.getOrCreateFilterWrapper(column, 'COLUMN_MENU');\n        const eMenu = document.createElement('div');\n\n        _.addCssClass(eMenu, 'ag-menu');\n\n        filterWrapper.guiPromise.then(gui => eMenu.appendChild(gui));\n\n        let hidePopup: (() => void);\n\n        const bodyScrollListener = (event: any) => {\n            // if h scroll, popup is no longer over the column\n            if (event.direction === 'horizontal') {\n                hidePopup();\n            }\n        };\n\n        this.eventService.addEventListener('bodyScroll', bodyScrollListener);\n\n        const closedCallback = () => {\n            this.eventService.removeEventListener('bodyScroll', bodyScrollListener);\n            column.setMenuVisible(false, 'contextMenu');\n        };\n\n        // need to show filter before positioning, as only after filter\n        // is visible can we find out what the width of it is\n        hidePopup = this.popupService.addAsModalPopup(eMenu, true, closedCallback);\n        positionCallback(eMenu);\n\n        filterWrapper.filterPromise.then(filter => {\n            if (filter.afterGuiAttached) {\n                const params: IAfterGuiAttachedParams = {\n                    hidePopup\n                };\n\n                filter.afterGuiAttached(params);\n            }\n        });\n\n        this.hidePopup = hidePopup;\n\n        column.setMenuVisible(true, 'contextMenu');\n    }\n\n    public isMenuEnabled(column: Column): boolean {\n        // for standard, we show menu if filter is enabled, and the menu is not suppressed\n        return column.isFilterAllowed();\n    }\n}\n"]}