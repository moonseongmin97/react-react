{"version":3,"sources":["../../src/ts/widgets/virtualList.ts"],"names":[],"mappings":"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","file":"virtualList.js","sourcesContent":["import { Component } from \"./component\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { _ } from \"../utils\";\n\nexport interface VirtualListModel {\n    getRowCount(): number;\n    getRow(index: number): any;\n}\n\nexport class VirtualList extends Component {\n    private model: VirtualListModel;\n    private eListContainer: HTMLElement;\n    private rowsInBodyContainer: any = {};\n    private componentCreator: (value: any) => Component;\n    private rowHeight = 20;\n\n    @Autowired('gridOptionsWrapper') gridOptionsWrapper: GridOptionsWrapper;\n\n    constructor(private cssIdentifier = 'default') {\n        super(VirtualList.getTemplate(cssIdentifier));\n    }\n\n    @PostConstruct\n    private init(): void {\n        this.eListContainer = this.queryForHtmlElement('.ag-virtual-list-container');\n\n        this.addScrollListener();\n        this.rowHeight = this.getItemHeight();\n    }\n\n    private static getTemplate(cssIdentifier: string) {\n        return /* html */`\n            <div class=\"ag-virtual-list-viewport ag-${cssIdentifier}-virtual-list-viewport\">\n                <div class=\"ag-virtual-list-container ag-${cssIdentifier}-virtual-list-container\"></div>\n            </div>`;\n    }\n\n    private getItemHeight(): number {\n        return this.gridOptionsWrapper.getListItemHeight();\n    }\n\n    public ensureIndexVisible(index: number): void {\n        const lastRow = this.model.getRowCount();\n\n        if (typeof index !== 'number' || index < 0 || index >= lastRow) {\n            console.warn('invalid row index for ensureIndexVisible: ' + index);\n            return;\n        }\n\n        const rowTopPixel = index * this.rowHeight;\n        const rowBottomPixel = rowTopPixel + this.rowHeight;\n        const eGui = this.getGui();\n\n        const viewportTopPixel = eGui.scrollTop;\n        const viewportHeight = eGui.offsetHeight;\n        const viewportBottomPixel = viewportTopPixel + viewportHeight;\n\n        const viewportScrolledPastRow = viewportTopPixel > rowTopPixel;\n        const viewportScrolledBeforeRow = viewportBottomPixel < rowBottomPixel;\n\n        if (viewportScrolledPastRow) {\n            // if row is before, scroll up with row at top\n            eGui.scrollTop = rowTopPixel;\n        } else if (viewportScrolledBeforeRow) {\n            // if row is below, scroll down with row at bottom\n            const newScrollPosition = rowBottomPixel - viewportHeight;\n            eGui.scrollTop = newScrollPosition;\n        }\n    }\n\n    public setComponentCreator(componentCreator: (value: any) => Component): void {\n        this.componentCreator = componentCreator;\n    }\n\n    public getRowHeight(): number {\n        return this.rowHeight;\n    }\n\n    public getScrollTop(): number {\n        return this.getGui().scrollTop;\n    }\n\n    public setRowHeight(rowHeight: number): void {\n        this.rowHeight = rowHeight;\n        this.refresh();\n    }\n\n    public refresh(): void {\n        if (_.missing(this.model)) { return; }\n\n        this.eListContainer.style.height = `${this.model.getRowCount() * this.rowHeight}px`;\n\n        this.clearVirtualRows();\n        this.drawVirtualRows();\n    }\n\n    private clearVirtualRows() {\n        const rowsToRemove = Object.keys(this.rowsInBodyContainer);\n        this.removeVirtualRows(rowsToRemove);\n    }\n\n    private drawVirtualRows() {\n        const topPixel = this.getGui().scrollTop;\n        const bottomPixel = topPixel + this.getGui().offsetHeight;\n\n        const firstRow = Math.floor(topPixel / this.rowHeight);\n        const lastRow = Math.floor(bottomPixel / this.rowHeight);\n\n        this.ensureRowsRendered(firstRow, lastRow);\n    }\n\n    private ensureRowsRendered(start: any, finish: any) {\n        // at the end, this array will contain the items we need to remove\n        const rowsToRemove = Object.keys(this.rowsInBodyContainer);\n\n        // add in new rows\n        for (let rowIndex = start; rowIndex <= finish; rowIndex++) {\n            // see if item already there, and if yes, take it out of the 'to remove' array\n            if (rowsToRemove.indexOf(rowIndex.toString()) >= 0) {\n                rowsToRemove.splice(rowsToRemove.indexOf(rowIndex.toString()), 1);\n                continue;\n            }\n\n            // check this row actually exists (in case overflow buffer window exceeds real data)\n            if (this.model.getRowCount() > rowIndex) {\n                const value = this.model.getRow(rowIndex);\n                this.insertRow(value, rowIndex);\n            }\n        }\n\n        // at this point, everything in our 'rowsToRemove' . . .\n        this.removeVirtualRows(rowsToRemove);\n    }\n\n    // takes array of row id's\n    private removeVirtualRows(rowsToRemove: string[]) {\n        rowsToRemove.forEach(index => {\n            const component = this.rowsInBodyContainer[index];\n            this.eListContainer.removeChild(component.eDiv);\n\n            if (component.rowComponent.destroy) {\n                component.rowComponent.destroy();\n            }\n\n            delete this.rowsInBodyContainer[index];\n        });\n    }\n\n    private insertRow(value: any, rowIndex: any) {\n        const eDiv = document.createElement('div');\n        _.addCssClass(eDiv, 'ag-virtual-list-item');\n        _.addCssClass(eDiv, `ag-${this.cssIdentifier}-virtual-list-item`);\n\n        eDiv.style.height = `${this.rowHeight}px`;\n        eDiv.style.top = `${this.rowHeight * rowIndex}px`;\n\n        const rowComponent = this.componentCreator(value);\n        eDiv.appendChild(rowComponent.getGui());\n\n        this.eListContainer.appendChild(eDiv);\n        this.rowsInBodyContainer[rowIndex] = {\n            rowComponent: rowComponent,\n            eDiv: eDiv\n        };\n    }\n\n    private addScrollListener() {\n        this.addGuiEventListener('scroll', () => this.drawVirtualRows());\n    }\n\n    public setModel(model: VirtualListModel): void {\n        this.model = model;\n    }\n}\n"]}