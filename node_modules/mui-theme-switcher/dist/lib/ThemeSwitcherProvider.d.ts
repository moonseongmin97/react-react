import React from "react";
import PropTypes from "prop-types";
import { Theme } from "@material-ui/core";
export interface ThemeSwitcherProviderProps {
    classes: any;
    children: React.ReactElement;
    darkTheme: Theme;
    lightTheme: Theme;
    followSystem?: boolean;
    persist?: boolean;
    appId?: string;
    defaultTheme: "dark" | "light";
    smoothTransition?: boolean;
}
declare const _default: React.ComponentType<Pick<Pick<Pick<ThemeSwitcherProviderProps, "children" | "darkTheme" | "lightTheme" | "followSystem" | "persist" | "appId" | "defaultTheme" | "smoothTransition"> & Pick<PropTypes.InferProps<{
    children: PropTypes.Validator<PropTypes.ReactElementLike>;
}>, never> & Pick<ThemeSwitcherProviderProps, "classes" | "darkTheme" | "lightTheme" | "followSystem" | "persist" | "appId" | "defaultTheme" | "smoothTransition">, "classes" | "children" | "darkTheme" | "lightTheme" | "followSystem" | "persist" | "appId" | "defaultTheme"> & Partial<Pick<Pick<ThemeSwitcherProviderProps, "children" | "darkTheme" | "lightTheme" | "followSystem" | "persist" | "appId" | "defaultTheme" | "smoothTransition"> & Pick<PropTypes.InferProps<{
    children: PropTypes.Validator<PropTypes.ReactElementLike>;
}>, never> & Pick<ThemeSwitcherProviderProps, "classes" | "darkTheme" | "lightTheme" | "followSystem" | "persist" | "appId" | "defaultTheme" | "smoothTransition">, "smoothTransition">> & Partial<Pick<{
    smoothTransition: boolean;
}, never>>, "children" | "darkTheme" | "lightTheme" | "followSystem" | "persist" | "appId" | "defaultTheme" | "smoothTransition"> & import("@material-ui/core").StyledComponentProps<"wrapper">>;
export default _default;
